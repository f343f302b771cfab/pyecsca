Search.setIndex({"docnames": ["api/pyecsca.codegen", "api/pyecsca.codegen.builder", "api/pyecsca.codegen.client", "api/pyecsca.codegen.common", "api/pyecsca.codegen.render", "api/pyecsca.codegen.templates", "api/pyecsca.ec", "api/pyecsca.ec.configuration", "api/pyecsca.ec.context", "api/pyecsca.ec.coordinates", "api/pyecsca.ec.curve", "api/pyecsca.ec.divpoly", "api/pyecsca.ec.error", "api/pyecsca.ec.formula", "api/pyecsca.ec.formula.base", "api/pyecsca.ec.formula.code", "api/pyecsca.ec.formula.efd", "api/pyecsca.ec.formula.expand", "api/pyecsca.ec.formula.fake", "api/pyecsca.ec.formula.fliparoo", "api/pyecsca.ec.formula.graph", "api/pyecsca.ec.formula.metrics", "api/pyecsca.ec.formula.partitions", "api/pyecsca.ec.formula.switch_sign", "api/pyecsca.ec.formula.unroll", "api/pyecsca.ec.key_agreement", "api/pyecsca.ec.key_generation", "api/pyecsca.ec.mod", "api/pyecsca.ec.model", "api/pyecsca.ec.mult", "api/pyecsca.ec.mult.base", "api/pyecsca.ec.mult.binary", "api/pyecsca.ec.mult.comb", "api/pyecsca.ec.mult.fixed", "api/pyecsca.ec.mult.ladder", "api/pyecsca.ec.mult.naf", "api/pyecsca.ec.mult.window", "api/pyecsca.ec.op", "api/pyecsca.ec.params", "api/pyecsca.ec.point", "api/pyecsca.ec.scalar", "api/pyecsca.ec.signature", "api/pyecsca.ec.transformations", "api/pyecsca.misc", "api/pyecsca.misc.cache", "api/pyecsca.misc.cfg", "api/pyecsca.misc.utils", "api/pyecsca.sca", "api/pyecsca.sca.attack", "api/pyecsca.sca.attack.CPA", "api/pyecsca.sca.attack.DPA", "api/pyecsca.sca.attack.leakage_model", "api/pyecsca.sca.re", "api/pyecsca.sca.re.base", "api/pyecsca.sca.re.epa", "api/pyecsca.sca.re.rpa", "api/pyecsca.sca.re.structural", "api/pyecsca.sca.re.tree", "api/pyecsca.sca.re.zvp", "api/pyecsca.sca.scope", "api/pyecsca.sca.scope.base", "api/pyecsca.sca.scope.chipwhisperer", "api/pyecsca.sca.scope.picoscope_alt", "api/pyecsca.sca.scope.picoscope_sdk", "api/pyecsca.sca.stacked_traces", "api/pyecsca.sca.stacked_traces.combine", "api/pyecsca.sca.stacked_traces.stacked_traces", "api/pyecsca.sca.target", "api/pyecsca.sca.target.ISO7816", "api/pyecsca.sca.target.PCSC", "api/pyecsca.sca.target.base", "api/pyecsca.sca.target.binary", "api/pyecsca.sca.target.chipwhisperer", "api/pyecsca.sca.target.ectester", "api/pyecsca.sca.target.flash", "api/pyecsca.sca.target.leakage", "api/pyecsca.sca.target.leia", "api/pyecsca.sca.target.serial", "api/pyecsca.sca.target.simpleserial", "api/pyecsca.sca.trace", "api/pyecsca.sca.trace.align", "api/pyecsca.sca.trace.combine", "api/pyecsca.sca.trace.edit", "api/pyecsca.sca.trace.filter", "api/pyecsca.sca.trace.match", "api/pyecsca.sca.trace.plot", "api/pyecsca.sca.trace.process", "api/pyecsca.sca.trace.sampling", "api/pyecsca.sca.trace.test", "api/pyecsca.sca.trace.trace", "api/pyecsca.sca.trace_set", "api/pyecsca.sca.trace_set.base", "api/pyecsca.sca.trace_set.chipwhisperer", "api/pyecsca.sca.trace_set.hdf5", "api/pyecsca.sca.trace_set.inspector", "api/pyecsca.sca.trace_set.pickle", "index", "libraries", "notebook/CPA", "notebook/DPA", "notebook/codegen", "notebook/configuration_space", "notebook/emulator", "notebook/measurement", "notebook/re/epa", "notebook/re/formulas", "notebook/re/rpa", "notebook/re/structural", "notebook/re/zvp", "notebook/simulation", "notebook/smartcards", "notebook/visualization", "references"], "filenames": ["api/pyecsca.codegen.rst", "api/pyecsca.codegen.builder.rst", "api/pyecsca.codegen.client.rst", "api/pyecsca.codegen.common.rst", "api/pyecsca.codegen.render.rst", "api/pyecsca.codegen.templates.rst", "api/pyecsca.ec.rst", "api/pyecsca.ec.configuration.rst", "api/pyecsca.ec.context.rst", "api/pyecsca.ec.coordinates.rst", "api/pyecsca.ec.curve.rst", "api/pyecsca.ec.divpoly.rst", "api/pyecsca.ec.error.rst", "api/pyecsca.ec.formula.rst", "api/pyecsca.ec.formula.base.rst", "api/pyecsca.ec.formula.code.rst", "api/pyecsca.ec.formula.efd.rst", "api/pyecsca.ec.formula.expand.rst", "api/pyecsca.ec.formula.fake.rst", "api/pyecsca.ec.formula.fliparoo.rst", "api/pyecsca.ec.formula.graph.rst", "api/pyecsca.ec.formula.metrics.rst", "api/pyecsca.ec.formula.partitions.rst", "api/pyecsca.ec.formula.switch_sign.rst", "api/pyecsca.ec.formula.unroll.rst", "api/pyecsca.ec.key_agreement.rst", "api/pyecsca.ec.key_generation.rst", "api/pyecsca.ec.mod.rst", "api/pyecsca.ec.model.rst", "api/pyecsca.ec.mult.rst", "api/pyecsca.ec.mult.base.rst", "api/pyecsca.ec.mult.binary.rst", "api/pyecsca.ec.mult.comb.rst", "api/pyecsca.ec.mult.fixed.rst", "api/pyecsca.ec.mult.ladder.rst", "api/pyecsca.ec.mult.naf.rst", "api/pyecsca.ec.mult.window.rst", "api/pyecsca.ec.op.rst", "api/pyecsca.ec.params.rst", "api/pyecsca.ec.point.rst", "api/pyecsca.ec.scalar.rst", "api/pyecsca.ec.signature.rst", "api/pyecsca.ec.transformations.rst", "api/pyecsca.misc.rst", "api/pyecsca.misc.cache.rst", "api/pyecsca.misc.cfg.rst", "api/pyecsca.misc.utils.rst", "api/pyecsca.sca.rst", "api/pyecsca.sca.attack.rst", "api/pyecsca.sca.attack.CPA.rst", "api/pyecsca.sca.attack.DPA.rst", "api/pyecsca.sca.attack.leakage_model.rst", "api/pyecsca.sca.re.rst", "api/pyecsca.sca.re.base.rst", "api/pyecsca.sca.re.epa.rst", "api/pyecsca.sca.re.rpa.rst", "api/pyecsca.sca.re.structural.rst", "api/pyecsca.sca.re.tree.rst", "api/pyecsca.sca.re.zvp.rst", "api/pyecsca.sca.scope.rst", "api/pyecsca.sca.scope.base.rst", "api/pyecsca.sca.scope.chipwhisperer.rst", "api/pyecsca.sca.scope.picoscope_alt.rst", "api/pyecsca.sca.scope.picoscope_sdk.rst", "api/pyecsca.sca.stacked_traces.rst", "api/pyecsca.sca.stacked_traces.combine.rst", "api/pyecsca.sca.stacked_traces.stacked_traces.rst", "api/pyecsca.sca.target.rst", "api/pyecsca.sca.target.ISO7816.rst", "api/pyecsca.sca.target.PCSC.rst", "api/pyecsca.sca.target.base.rst", "api/pyecsca.sca.target.binary.rst", "api/pyecsca.sca.target.chipwhisperer.rst", "api/pyecsca.sca.target.ectester.rst", "api/pyecsca.sca.target.flash.rst", "api/pyecsca.sca.target.leakage.rst", "api/pyecsca.sca.target.leia.rst", "api/pyecsca.sca.target.serial.rst", "api/pyecsca.sca.target.simpleserial.rst", "api/pyecsca.sca.trace.rst", "api/pyecsca.sca.trace.align.rst", "api/pyecsca.sca.trace.combine.rst", "api/pyecsca.sca.trace.edit.rst", "api/pyecsca.sca.trace.filter.rst", "api/pyecsca.sca.trace.match.rst", "api/pyecsca.sca.trace.plot.rst", "api/pyecsca.sca.trace.process.rst", "api/pyecsca.sca.trace.sampling.rst", "api/pyecsca.sca.trace.test.rst", "api/pyecsca.sca.trace.trace.rst", "api/pyecsca.sca.trace_set.rst", "api/pyecsca.sca.trace_set.base.rst", "api/pyecsca.sca.trace_set.chipwhisperer.rst", "api/pyecsca.sca.trace_set.hdf5.rst", "api/pyecsca.sca.trace_set.inspector.rst", "api/pyecsca.sca.trace_set.pickle.rst", "index.rst", "libraries.rst", "notebook/CPA.ipynb", "notebook/DPA.ipynb", "notebook/codegen.ipynb", "notebook/configuration_space.ipynb", "notebook/emulator.ipynb", "notebook/measurement.ipynb", "notebook/re/epa.ipynb", "notebook/re/formulas.ipynb", "notebook/re/rpa.ipynb", "notebook/re/structural.ipynb", "notebook/re/zvp.ipynb", "notebook/simulation.ipynb", "notebook/smartcards.ipynb", "notebook/visualization.ipynb", "references.rst"], "titles": ["pyecsca.codegen package", "pyecsca.codegen.builder module", "pyecsca.codegen.client module", "pyecsca.codegen.common module", "pyecsca.codegen.render module", "pyecsca.codegen.templates package", "pyecsca.ec package", "pyecsca.ec.configuration module", "pyecsca.ec.context module", "pyecsca.ec.coordinates module", "pyecsca.ec.curve module", "pyecsca.ec.divpoly module", "pyecsca.ec.error module", "pyecsca.ec.formula package", "pyecsca.ec.formula.base module", "pyecsca.ec.formula.code module", "pyecsca.ec.formula.efd module", "pyecsca.ec.formula.expand module", "pyecsca.ec.formula.fake module", "pyecsca.ec.formula.fliparoo module", "pyecsca.ec.formula.graph module", "pyecsca.ec.formula.metrics module", "pyecsca.ec.formula.partitions module", "pyecsca.ec.formula.switch_sign module", "pyecsca.ec.formula.unroll module", "pyecsca.ec.key_agreement module", "pyecsca.ec.key_generation module", "pyecsca.ec.mod module", "pyecsca.ec.model module", "pyecsca.ec.mult package", "pyecsca.ec.mult.base module", "pyecsca.ec.mult.binary module", "pyecsca.ec.mult.comb module", "pyecsca.ec.mult.fixed module", "pyecsca.ec.mult.ladder module", "pyecsca.ec.mult.naf module", "pyecsca.ec.mult.window module", "pyecsca.ec.op module", "pyecsca.ec.params module", "pyecsca.ec.point module", "pyecsca.ec.scalar module", "pyecsca.ec.signature module", "pyecsca.ec.transformations module", "pyecsca.misc package", "pyecsca.misc.cache module", "pyecsca.misc.cfg module", "pyecsca.misc.utils module", "pyecsca.sca package", "pyecsca.sca.attack package", "pyecsca.sca.attack.CPA module", "pyecsca.sca.attack.DPA module", "pyecsca.sca.attack.leakage_model module", "pyecsca.sca.re package", "pyecsca.sca.re.base module", "pyecsca.sca.re.epa module", "pyecsca.sca.re.rpa module", "pyecsca.sca.re.structural module", "pyecsca.sca.re.tree module", "pyecsca.sca.re.zvp module", "pyecsca.sca.scope package", "pyecsca.sca.scope.base module", "pyecsca.sca.scope.chipwhisperer module", "pyecsca.sca.scope.picoscope_alt module", "pyecsca.sca.scope.picoscope_sdk module", "pyecsca.sca.stacked_traces package", "pyecsca.sca.stacked_traces.combine module", "pyecsca.sca.stacked_traces.stacked_traces module", "pyecsca.sca.target package", "pyecsca.sca.target.ISO7816 module", "pyecsca.sca.target.PCSC module", "pyecsca.sca.target.base module", "pyecsca.sca.target.binary module", "pyecsca.sca.target.chipwhisperer module", "pyecsca.sca.target.ectester module", "pyecsca.sca.target.flash module", "pyecsca.sca.target.leakage module", "pyecsca.sca.target.leia module", "pyecsca.sca.target.serial module", "pyecsca.sca.target.simpleserial module", "pyecsca.sca.trace package", "pyecsca.sca.trace.align module", "pyecsca.sca.trace.combine module", "pyecsca.sca.trace.edit module", "pyecsca.sca.trace.filter module", "pyecsca.sca.trace.match module", "pyecsca.sca.trace.plot module", "pyecsca.sca.trace.process module", "pyecsca.sca.trace.sampling module", "pyecsca.sca.trace.test module", "pyecsca.sca.trace.trace module", "pyecsca.sca.trace_set package", "pyecsca.sca.trace_set.base module", "pyecsca.sca.trace_set.chipwhisperer module", "pyecsca.sca.trace_set.hdf5 module", "pyecsca.sca.trace_set.inspector module", "pyecsca.sca.trace_set.pickle module", "pyecsca [p\u026a\u025btska]", "ECC in Libraries", "Correlation Power Analysis", "Differential Power Analysis", "Code generation", "Configuration space", "Emulation and leakage simulation", "Measurement", "EPA-based reverse engineering", "Exploration of formulas in open-source ECC libraries", "RPA-based reverse-engineering", "Structural reverse-engineering", "ZVP-based reverse-engineering", "Simulation", "Smartcards", "Visualization", "References"], "terms": {"templat": [0, 96], "builder": [0, 73, 96, 100, 102], "modul": [0, 6, 13, 29, 43, 47, 48, 52, 59, 64, 67, 79, 90, 96, 105, 108], "client": [0, 96, 99, 100, 102, 103], "cmd_init_prng": [0, 2], "cmd_set_param": [0, 2], "cmd_gener": [0, 2], "cmd_set_privkei": [0, 2], "cmd_set_pubkei": [0, 2], "cmd_scalar_mult": [0, 2], "cmd_ecdh": [0, 2], "cmd_ecdsa_sign": [0, 2], "cmd_ecdsa_verifi": [0, 2], "cmd_set_trigg": [0, 2], "cmd_debug": [0, 2], "devicetarget": [0, 2, 100, 103], "connect": [0, 2, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 96, 100, 102, 103, 110], "debug": [0, 2, 4, 8, 67, 75], "disconnect": [0, 2, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 100, 103, 110], "ecdh": [0, 2, 3, 7, 25, 67, 73, 75, 96, 100, 109], "ecdsa_sign": [0, 2, 67, 73, 75, 97, 102], "ecdsa_verifi": [0, 2, 67, 73, 75, 97, 102], "flash": [0, 2, 47, 67, 72, 96, 100, 103], "gener": [0, 2, 3, 6, 7, 8, 10, 22, 26, 27, 38, 46, 49, 67, 73, 75, 95, 96, 97, 98, 99, 101, 103, 104, 108], "init_prng": [0, 2, 102, 103], "quit": [0, 2, 7, 67, 75, 101], "read": [0, 2, 14, 15, 16, 18, 67, 71, 72, 77, 78, 90, 91, 92, 93, 94, 95, 111], "recv_msg": [0, 2, 67, 72, 78], "reset": [0, 2, 45, 67, 68, 69, 72, 73, 76], "scalar_mult": [0, 2, 67, 75, 102], "send_cmd": [0, 2, 67, 72, 78], "set_param": [0, 2, 67, 75, 98, 99, 100, 102, 103], "set_privkei": [0, 2, 67, 75, 102], "set_pubkei": [0, 2, 67, 75, 102], "set_trigg": [0, 2, 59, 63, 67, 75, 103], "write": [0, 2, 67, 71, 72, 77, 78, 90, 91, 92, 93, 94, 95, 105, 108], "model": [0, 2, 3, 6, 7, 9, 10, 11, 14, 15, 16, 18, 38, 39, 42, 51, 67, 75, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109], "coord": [0, 2, 3, 6, 7, 13, 18, 38, 39, 58, 67, 75, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "seed": [0, 2], "param": [0, 2, 6, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 41, 42, 48, 49, 50, 52, 55, 67, 73, 75, 96, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109], "privkei": [0, 2, 6, 25, 41, 67, 73, 75, 102], "pubkei": [0, 2, 6, 25, 41, 67, 73, 75, 102], "trigger": [0, 2, 59, 60, 61, 62, 63, 103], "timeout": [0, 2, 46, 60, 61, 62, 63, 71, 72, 77, 78, 100, 103], "hosttarget": [0, 2, 100], "process": [0, 2, 30, 31, 33, 34, 46, 47, 67, 71, 73, 79, 96, 99, 101, 102, 106, 108, 111], "binari": [0, 2, 4, 6, 29, 33, 35, 36, 37, 40, 47, 67, 68, 73, 94, 96, 97, 100, 101, 102, 112], "debug_output": [0, 2, 67, 71], "common": [0, 27, 96, 100, 102, 103], "platform": [0, 2, 3, 73, 100, 102, 103], "host": [0, 2, 3, 68, 71, 73, 94], "xmega": [0, 3], "stm32f0": [0, 3], "stm32f3": [0, 3, 100, 102, 103], "nano": [0, 3], "deviceconfigur": [0, 3, 4, 100, 102, 103], "keygen": [0, 3, 97, 100, 103, 109], "ecdsa": [0, 3, 7, 41, 67, 73, 96, 100, 109], "defin": [0, 3, 10, 98, 99, 100, 102, 104, 105, 108], "formula": [0, 3, 6, 7, 8, 9, 10, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 45, 52, 55, 58, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 112], "scalarmult": [0, 3, 6, 7, 55, 97, 100, 101, 102, 103, 104], "hash_typ": [0, 3, 6, 7, 100, 101, 102, 103], "mod_rand": [0, 3, 6, 7, 100, 101, 102, 103], "mult": [0, 3, 6, 7, 25, 26, 37, 41, 48, 49, 50, 67, 75, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109], "sqr": [0, 3, 6, 7, 37, 100, 101, 102, 103, 107], "red": [0, 3, 6, 7, 100, 101, 102, 103], "inv": [0, 3, 6, 7, 37, 100, 101, 102, 103, 104], "wrap_enum": [0, 3], "render": [0, 52, 57, 96, 100, 102, 103, 104, 111], "build": [0, 3, 4, 52, 57, 102, 103, 104, 106], "render_and_build": [0, 4, 103], "sourc": [2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 53, 55, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 97, 100, 108], "return": [2, 4, 7, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 45, 46, 49, 50, 55, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 104, 105, 106, 107, 108], "type": [2, 3, 4, 7, 8, 10, 11, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 49, 50, 55, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 93, 94, 95, 96, 100, 101, 102], "str": [2, 3, 4, 8, 9, 10, 14, 15, 16, 18, 20, 21, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 49, 50, 55, 57, 58, 60, 61, 62, 63, 66, 71, 72, 74, 78, 89, 94, 105, 106, 107, 108], "scalar": [2, 6, 8, 10, 11, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 49, 50, 52, 55, 75, 96, 97, 98, 99, 103, 104, 106, 108, 109], "point": [2, 6, 9, 10, 14, 15, 16, 18, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 48, 49, 50, 52, 55, 58, 60, 61, 62, 63, 73, 75, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 112], "data": [2, 41, 60, 61, 62, 63, 67, 68, 71, 72, 73, 75, 77, 78, 93, 96, 99, 102, 105, 109], "sig": [2, 73], "action": [2, 6, 8, 30, 41, 45, 55, 96, 102, 106, 107, 108, 109], "class": [2, 3, 7, 8, 9, 10, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 49, 50, 51, 53, 55, 57, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 91, 92, 93, 94, 95, 98, 99, 100, 101, 102, 109], "kwarg": [2, 7, 27, 30, 44, 46, 53, 71, 72, 85, 91, 92, 93, 94, 95, 106], "base": [2, 3, 6, 7, 8, 9, 10, 12, 13, 15, 16, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 49, 50, 51, 52, 55, 57, 59, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 89, 90, 92, 93, 94, 95, 96, 97, 100, 102, 103, 112], "impltarget": 2, "chipwhisperertarget": [2, 47, 67, 72], "A": [2, 3, 7, 8, 9, 10, 11, 14, 15, 16, 18, 26, 27, 28, 30, 33, 38, 39, 40, 45, 46, 55, 57, 60, 61, 62, 63, 65, 67, 70, 72, 73, 74, 78, 80, 89, 96, 101, 103, 104, 106, 107, 108, 112], "chipwhisper": [2, 47, 59, 67, 78, 90, 96, 103], "devic": [2, 3, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 96], "target": [2, 8, 10, 38, 47, 96, 98, 99, 100, 102, 103, 108, 110], "tupl": [2, 4, 8, 11, 14, 20, 24, 26, 37, 46, 50, 57, 58, 60, 61, 62, 63, 65, 75, 80, 81, 82, 88, 89, 93, 104, 108], "from": [2, 8, 9, 27, 31, 32, 38, 39, 40, 41, 45, 55, 57, 58, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 80, 81, 83, 86, 89, 93, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "other_pubkei": [2, 75], "byte": [2, 10, 25, 38, 41, 68, 69, 71, 72, 73, 75, 76, 77, 78, 94, 102, 110], "signatur": [2, 6, 67, 73, 75, 96, 97, 102, 109], "bool": [2, 3, 4, 8, 10, 11, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 45, 46, 55, 57, 58, 60, 61, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 76, 80, 81, 88, 94, 100, 106], "fw_path": [2, 72, 74], "firmwar": [2, 72, 74, 103], "paramet": [2, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 20, 24, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 49, 50, 55, 58, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 94, 98, 99, 101, 102, 103, 104, 106, 108], "The": [2, 3, 4, 7, 8, 9, 10, 11, 14, 15, 16, 18, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 46, 55, 57, 58, 60, 61, 62, 63, 65, 68, 69, 71, 72, 73, 74, 76, 77, 78, 82, 84, 89, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 112], "path": [2, 6, 8, 38, 52, 57, 72, 74, 94, 100, 102, 103, 105, 108, 109], "blob": [2, 72, 74], "whether": [2, 3, 4, 10, 11, 14, 15, 16, 18, 26, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 45, 46, 55, 57, 58, 60, 61, 62, 63, 65, 68, 69, 72, 73, 74, 76, 88, 94, 96, 97, 100, 101, 106, 108], "wa": [2, 12, 14, 30, 31, 32, 33, 34, 35, 36, 49, 50, 60, 61, 62, 63, 68, 69, 72, 73, 74, 76, 89, 96, 97, 101, 106, 109], "success": [2, 60, 61, 62, 63, 67, 68, 69, 72, 73, 74, 76, 106], "int": [2, 8, 9, 10, 11, 14, 15, 16, 18, 19, 20, 22, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 49, 50, 51, 55, 57, 58, 60, 61, 62, 63, 65, 68, 71, 72, 73, 77, 78, 80, 82, 83, 84, 86, 87, 89, 94, 104, 106, 107, 108, 109], "none": [2, 3, 6, 7, 8, 10, 19, 20, 22, 25, 30, 31, 32, 33, 34, 35, 36, 38, 41, 44, 45, 46, 53, 55, 57, 60, 61, 62, 63, 65, 66, 67, 68, 69, 71, 72, 73, 75, 76, 77, 78, 82, 89, 93, 94, 98, 99, 101, 104, 105, 106, 107, 108, 109], "num": [2, 71, 72, 77, 78, 97, 98, 99], "0": [2, 8, 14, 40, 55, 57, 63, 68, 71, 72, 73, 77, 78, 80, 82, 84, 86, 87, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "upto": [2, 71, 72, 77, 78], "until": [2, 46, 60, 61, 62, 63, 71, 72, 77, 78], "millisecond": [2, 60, 61, 62, 63, 71, 72, 77, 78], "": [2, 6, 8, 27, 31, 41, 46, 67, 68, 71, 72, 73, 77, 78, 88, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 112], "serial": [2, 47, 67, 71, 72, 78, 96], "output": [2, 4, 13, 14, 15, 16, 18, 19, 34, 38, 41, 46, 57, 71, 72, 77, 78, 82, 91, 92, 93, 94, 95, 105, 109], "number": [2, 7, 14, 15, 16, 18, 32, 46, 55, 57, 60, 61, 62, 63, 65, 68, 71, 72, 73, 77, 78, 94, 101, 105, 106, 107, 108], "all": [2, 7, 8, 19, 30, 31, 32, 33, 34, 35, 36, 46, 55, 57, 67, 71, 72, 73, 77, 78, 86, 93, 96, 97, 101, 103, 104, 106, 107, 108], "avail": [2, 9, 18, 27, 39, 60, 61, 62, 63, 65, 71, 72, 77, 78, 96, 97, 108, 111], "receiv": [2, 68, 72, 78], "simpleserialmessag": [2, 47, 67, 72, 78], "messag": [2, 41, 46, 72, 78, 102], "while": [2, 72, 78, 102, 103, 104, 109], "wait": [2, 46, 60, 61, 62, 63, 72, 78], "second": [2, 14, 46, 72, 78, 98, 99, 103, 109], "how": [2, 45, 72, 73, 78, 82, 96, 97, 98, 99, 103, 106, 108, 110], "long": [2, 46, 72, 78, 99, 103], "map": [2, 9, 11, 18, 30, 31, 32, 33, 34, 35, 36, 39, 43, 46, 47, 52, 55, 57, 58, 63, 66, 72, 73, 78, 86, 89, 93, 97, 102, 104, 105, 106, 107], "char": [2, 67, 72, 78], "cmd": [2, 72, 78], "send": [2, 67, 68, 69, 72, 73, 76, 78], "respons": [2, 52, 57, 68, 69, 72, 73, 76, 78, 104, 107, 108], "command": [2, 3, 68, 72, 73, 78, 96], "produc": [2, 38, 40, 68, 72, 73, 78, 94], "within": [2, 72, 78, 80, 84], "valu": [2, 3, 6, 7, 8, 9, 10, 13, 14, 22, 24, 30, 36, 45, 46, 58, 60, 61, 62, 63, 65, 68, 72, 73, 78, 80, 82, 84, 86, 88, 90, 93, 94, 101, 102, 104, 105, 106, 107, 108, 109, 112], "start": [2, 3, 7, 8, 14, 15, 16, 18, 30, 31, 33, 34, 46, 55, 57, 60, 68, 72, 73, 78, 80, 82, 84, 87, 94, 101, 103], "charact": [2, 72, 78], "input": [2, 13, 14, 15, 16, 18, 20, 30, 31, 32, 33, 34, 35, 36, 41, 55, 57, 60, 61, 62, 63, 65, 71, 72, 77, 78, 91, 92, 93, 94, 95, 101, 103, 104, 105, 106, 108], "curvemodel": [2, 3, 6, 7, 10, 28, 75], "coordinatemodel": [2, 3, 6, 7, 9, 10, 18, 28, 38, 39, 75], "option": [2, 3, 8, 11, 19, 25, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41, 45, 53, 55, 57, 60, 61, 62, 63, 65, 68, 69, 71, 73, 75, 76, 82, 89, 94, 96, 101, 108], "domainparamet": [2, 6, 25, 26, 30, 31, 32, 33, 34, 35, 36, 38, 41, 42, 49, 50, 55, 75, 98, 99, 102, 104, 106, 107, 108], "binarytarget": [2, 47, 67, 71], "just": [2, 46, 55, 57, 97, 108], "run": [2, 33, 46, 52, 53, 55, 60, 61, 62, 63, 64, 65, 73, 74, 102, 104, 110], "your": 2, "machin": [2, 46], "commun": [2, 67, 69, 71, 72, 73, 76, 77, 78, 96, 103, 110], "via": [2, 69, 73, 76, 96, 97, 103, 109, 110], "stdin": [2, 71], "stdout": [2, 71, 100], "popen": [2, 71], "list": [2, 8, 9, 14, 15, 16, 18, 19, 20, 22, 23, 24, 28, 38, 40, 46, 49, 50, 55, 57, 58, 60, 61, 62, 63, 65, 71, 73, 75, 80, 84, 89, 101, 104, 105, 106, 107, 108], "name": [3, 4, 6, 7, 9, 13, 14, 15, 16, 18, 20, 24, 28, 30, 38, 58, 60, 68, 73, 94, 97, 100, 101, 103, 104, 105, 106, 107, 108, 110], "qualnam": [3, 7, 30, 60, 68, 73, 94], "1": [3, 7, 14, 15, 16, 18, 19, 28, 30, 33, 37, 40, 41, 44, 45, 46, 51, 55, 57, 58, 60, 63, 65, 68, 73, 80, 86, 94, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109], "boundari": [3, 7, 30, 60, 68, 73, 94], "enumdefin": [3, 6, 7], "cw308_xmega": 3, "cw308_stm32f0": 3, "cw308_stm32f3": 3, "cwnano": 3, "configur": [3, 4, 6, 27, 30, 45, 57, 96, 100, 102, 103, 108], "includ": [3, 8, 36, 45, 80, 96], "choic": [3, 97], "specif": [3, 46, 97, 101], "implement": [3, 4, 7, 8, 10, 25, 27, 29, 41, 45, 58, 65, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 109], "kei": [3, 6, 7, 8, 25, 26, 41, 43, 46, 67, 73, 90, 93, 96, 97, 100, 101, 104, 106, 108], "i": [3, 7, 8, 10, 11, 14, 15, 16, 18, 19, 20, 27, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 45, 46, 55, 57, 58, 65, 68, 71, 72, 73, 80, 81, 86, 89, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "present": [3, 8, 58, 93, 96, 106, 108], "mutablemap": [3, 9, 10, 14, 15, 16, 18, 20, 28, 55, 63, 93], "ani": [3, 8, 9, 10, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 30, 39, 41, 46, 49, 53, 55, 57, 60, 61, 62, 63, 66, 68, 73, 82, 86, 89, 94, 96, 104, 106, 108], "pass": [3, 46, 60, 61, 62, 63, 83, 84, 101, 104, 107], "compil": [3, 6, 37], "frozenset": [3, 7, 37], "scalarmultipli": [3, 6, 7, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 41, 49, 50, 55, 75, 101], "hashtyp": [3, 6, 7, 100, 101, 102, 103], "randommod": [3, 6, 7, 100, 101, 102, 103], "multipl": [3, 6, 7, 8, 10, 11, 14, 15, 16, 18, 25, 29, 30, 31, 32, 33, 34, 35, 36, 49, 50, 55, 57, 66, 86, 97, 98, 99, 100, 101, 103, 104, 106, 107, 108, 109, 112], "squar": [3, 6, 7, 12, 14, 15, 16, 18, 27, 45, 86, 100, 101, 102, 103], "reduct": [3, 6, 7, 97, 100, 101, 102, 103], "invers": [3, 6, 7, 14, 15, 16, 18, 27, 44, 100, 101, 102, 103, 106], "enum_class": 3, "config": [4, 27, 43, 45, 52, 53, 55, 57, 100, 101, 102, 103, 104], "temporari": [4, 45, 100], "directori": [4, 100, 102, 103, 105, 108], "elf": [4, 100], "file": [4, 38, 94, 96, 100, 105], "hex": [4, 100, 110], "dir": 4, "elf_fil": [4, 103], "hex_fil": [4, 103], "outdir": 4, "strip": [4, 105], "fals": [4, 8, 11, 15, 18, 22, 26, 31, 33, 34, 35, 36, 39, 44, 46, 57, 58, 65, 68, 71, 73, 88, 94, 101, 104, 106, 107, 108, 109], "remov": [4, 8, 57, 90, 93, 104, 105, 108], "true": [4, 8, 11, 19, 20, 22, 23, 27, 30, 31, 32, 33, 34, 35, 36, 38, 44, 45, 46, 49, 55, 57, 58, 65, 73, 80, 81, 100, 101, 102, 103, 104, 106, 107, 108], "copi": [4, 6, 8, 19, 22, 89, 96, 102, 105, 108, 109], "result": [4, 6, 7, 8, 13, 14, 19, 20, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 46, 55, 57, 58, 65, 98, 99, 101, 102, 104, 105, 106, 108, 111], "symbol": [4, 24, 27, 45, 108], "origin": [4, 40, 68, 73, 94, 106, 108], "after": [4, 46, 55, 60, 61, 62, 63, 102, 103, 108], "completedprocess": 4, "subprocess": [4, 100, 102], "ran": 4, "make": [4, 30, 57, 58, 96, 100, 102, 108], "one": [4, 8, 10, 14, 21, 32, 34, 39, 40, 45, 46, 55, 62, 72, 74, 81, 96, 97, 99, 102, 104, 105, 106, 108, 109, 110, 111], "go": [4, 98, 99, 102, 105, 106, 108], "handl": [6, 10, 45, 59, 63, 111], "ellipt": [6, 9, 10, 11, 25, 26, 28, 38, 41, 96, 97, 98, 99, 101, 102, 112], "curv": [6, 9, 11, 18, 21, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 42, 45, 58, 73, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112], "opresult": [6, 13, 14], "formulaact": [6, 13, 14, 106, 107, 108], "additionformula": [6, 13, 14, 15, 16, 18, 31, 32, 33, 34, 35, 36, 41, 104, 108], "doublingformula": [6, 13, 14, 15, 16, 18, 31, 32, 33, 34, 35, 36, 104, 108], "triplingformula": [6, 13, 14, 15, 16, 18], "negationformula": [6, 13, 14, 15, 16, 18, 35, 36, 104], "scalingformula": [6, 13, 14, 15, 16, 18, 31, 32, 33, 34, 35, 36], "differentialadditionformula": [6, 13, 14, 15, 16, 18, 34, 104], "ladderformula": [6, 13, 14, 15, 16, 18, 34, 104], "code": [6, 13, 14, 16, 18, 37, 74, 96, 97, 102, 105, 106, 107, 110], "codeformula": [6, 13, 15, 16, 19, 20, 22, 23], "codeadditionformula": [6, 13, 15], "codedoublingformula": [6, 13, 15], "codeladderformula": [6, 13, 15], "codetriplingformula": [6, 13, 15], "codenegationformula": [6, 13, 15], "codescalingformula": [6, 13, 15], "codedifferentialadditionformula": [6, 13, 15], "efd": [6, 13, 96, 97, 108, 112], "additionefdformula": [6, 13, 16, 105], "doublingefdformula": [6, 13, 16, 105], "triplingefdformula": [6, 13, 16], "negationefdformula": [6, 13, 16], "scalingefdformula": [6, 13, 16], "differentialadditionefdformula": [6, 13, 16], "ladderefdformula": [6, 13, 16, 105], "expand": [6, 13, 52, 57, 96, 108], "expand_formula_set": [6, 13, 17, 105], "fake": [6, 13, 96, 104], "fakeadditionformula": [6, 13, 18, 104], "fakedoublingformula": [6, 13, 18, 104], "faketriplingformula": [6, 13, 18], "fakenegationformula": [6, 13, 18], "fakescalingformula": [6, 13, 18], "fakedifferentialadditionformula": [6, 13, 18], "fakeladderformula": [6, 13, 18], "fakepoint": [6, 13, 18, 104], "fliparoo": [6, 13, 22, 96], "mulfliparoo": [6, 13, 19, 22], "addsubfliparoo": [6, 13, 19], "addfliparoo": [6, 13, 19, 22], "badfliparoo": [6, 13, 19], "find_fliparoo": [6, 13, 19], "is_subfliparoo": [6, 13, 19], "largest_fliparoo": [6, 13, 19], "signednod": [6, 13, 19], "signedsubgraph": [6, 13, 19], "mirror_nod": [6, 13, 19], "dummynod": [6, 13, 19], "generate_fliparood_formula": [6, 13, 19], "generate_fliparood_graph": [6, 13, 19], "extract_fliparoo_signed_input": [6, 13, 19], "disconnect_fliparoo_output": [6, 13, 19], "reconnect_fliparoo_output": [6, 13, 19], "combine_all_pairs_signed_nod": [6, 13, 19], "combine_signed_nod": [6, 13, 19], "recursive_fliparoo": [6, 13, 19], "graph": [6, 13, 19, 22, 23, 96], "node": [6, 8, 13, 19, 20, 22, 23, 47, 52, 57, 104, 108], "constantnod": [6, 13, 20], "codeopnod": [6, 13, 19, 20, 22], "inputnod": [6, 13, 20], "formula_input_vari": [6, 13, 20], "formulagraph": [6, 13, 19, 20, 22, 23], "rename_iv": [6, 13, 20], "metric": [6, 13, 96, 105, 106], "formula_iv": [6, 13, 21], "ivs_norm": [6, 13, 17, 21], "formula_similar": [6, 13, 21, 105], "formula_similarity_ab": [6, 13, 21], "formula_similarity_fuzz": [6, 13, 21, 105], "partit": [6, 13, 96], "reduce_all_add": [6, 13, 22], "expand_all_mul": [6, 13, 22], "expand_all_nopower2_mul": [6, 13, 22], "find_single_input_add_fliparoo": [6, 13, 22], "find_constant_mul_fliparoo": [6, 13, 22], "find_expansion_nod": [6, 13, 22], "is_power_of_2": [6, 13, 22], "reduce_all_xplusx": [6, 13, 22], "find_all_xplusx": [6, 13, 22], "reduce_xplusx": [6, 13, 22], "reduce_mul_fliparoo": [6, 13, 22], "reduce_add_fliparoo": [6, 13, 22], "expand_mul": [6, 13, 22], "compute_partit": [6, 13, 22], "generate_partitioned_formula": [6, 13, 22], "generate_all_node_partit": [6, 13, 22], "partition_nod": [6, 13, 22], "switch_sign": [6, 13, 96], "generate_switched_formula": [6, 13, 23], "subnode_list": [6, 13, 23], "sign_test": [6, 13, 23], "badsignswitch": [6, 13, 23], "switch_sign_propag": [6, 13, 23], "change_oper": [6, 13, 23], "change_sid": [6, 13, 23], "powerlist": [6, 13, 23], "unrol": [6, 13, 58, 96, 97, 104, 105, 108], "unroll_formula_expr": [6, 13, 24, 104, 105], "unroll_formula": [6, 13, 24, 58, 105, 108], "processingdirect": [6, 29, 30, 31, 32, 33, 35, 36, 101, 106, 107], "accumulationord": [6, 29, 30, 31, 32, 33, 35, 36, 101, 104, 106, 107, 108], "scalarmultiplicationact": [6, 29, 30], "precomputationact": [6, 29, 30], "accumulatormultipli": [6, 29, 30, 31, 32, 33, 35, 36], "doubleandaddmultipli": [6, 29, 31], "ltrmultipli": [6, 29, 31, 36, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109], "rtlmultipli": [6, 29, 31, 106, 107], "coronmultipli": [6, 29, 31], "comb": [6, 29, 33, 96, 97], "bgmwmultipli": [6, 29, 32, 106, 107], "combmultipli": [6, 29, 32, 106, 107], "fix": [6, 29, 36, 67, 73, 96, 97, 101, 104, 106, 108], "fullprecompmultipli": [6, 29, 33, 106, 107], "ladder": [6, 14, 29, 96, 97], "laddermultipli": [6, 29, 34], "simpleladdermultipli": [6, 29, 34, 106, 107], "differentialladdermultipli": [6, 29, 34], "naf": [6, 29, 40, 96, 97], "binarynafmultipli": [6, 29, 35, 106, 107], "windownafmultipli": [6, 29, 35, 106, 107], "window": [6, 29, 32, 35, 40, 80, 86, 87, 96, 97, 101, 112], "slidingwindowmultipli": [6, 29, 36, 106, 107], "fixedwindowltrmultipli": [6, 29, 36, 106, 107], "windowboothmultipli": [6, 29, 36, 106], "toom_cook": [6, 7], "karatsuba": [6, 7, 101], "comba": [6, 7], "barrett": [6, 7, 103], "montgomeri": [6, 7, 28, 34, 42, 97, 101], "gcd": [6, 7, 27, 100, 101, 102, 104, 108], "euler": [6, 7, 103], "sha1": [6, 7, 25, 41, 100, 102, 103], "sha224": [6, 7, 25, 41], "sha256": [6, 7, 25, 41, 101], "sha384": [6, 7, 25, 41], "sha512": [6, 7, 25, 41], "sampl": [6, 7, 21, 27, 47, 59, 60, 61, 62, 63, 64, 65, 66, 79, 81, 82, 86, 88, 89, 94, 96, 98, 99, 101, 102, 103, 106, 111], "reduc": [6, 7, 99, 100, 102, 103, 107], "all_configur": [6, 7, 101], "context": [6, 45, 46, 55, 75, 96, 104, 105, 106, 107, 108, 109], "insid": [6, 8, 13, 14, 25, 26, 27, 29, 30, 39, 41, 52, 55, 100, 110], "resultact": [6, 8, 14, 25, 26, 27, 30, 39], "exit": [6, 8, 13, 14, 25, 26, 27, 29, 30, 39, 46, 55], "tree": [6, 8, 47, 52, 53, 55, 96, 97, 104, 106, 109], "get_by_kei": [6, 8], "get_by_index": [6, 8, 109], "repr": [6, 8, 109], "walk": [6, 8, 106, 107, 108], "clear": [6, 8, 67, 73, 90, 93], "fromkei": [6, 8], "get": [6, 7, 8, 10, 45, 55, 57, 60, 61, 62, 63, 74, 90, 93, 98, 99, 108, 109], "item": [6, 8, 46, 57, 90, 93, 104, 105, 106, 107, 108], "move_to_end": [6, 8], "pop": [6, 8, 90, 93], "popitem": [6, 8, 90, 93], "setdefault": [6, 8, 90, 93, 106, 108], "updat": [6, 8, 13, 20, 57, 90, 93, 101, 104, 108], "enter_act": [6, 8, 52, 55], "exit_act": [6, 8, 52, 55], "defaultcontext": [6, 8, 106, 107, 108, 109], "current": [6, 8, 10, 38, 45, 57, 96, 102], "pathcontext": [6, 8], "current_depth": [6, 8], "local": [6, 8, 44, 104, 106, 107, 108, 109], "coordin": [6, 10, 14, 15, 16, 18, 25, 28, 38, 39, 45, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108], "full_nam": [6, 9], "curve_model": [6, 9], "variabl": [6, 9, 14, 15, 16, 18, 23, 24, 37, 58, 102], "satisfi": [6, 9, 97], "toaffin": [6, 9], "tosystem": [6, 9], "homogweight": [6, 9], "assumpt": [6, 9, 12, 13, 14, 15, 16, 18, 20, 45, 58, 105], "neutral": [6, 9, 10, 98, 99, 102, 104], "affinecoordinatemodel": [6, 9, 104, 106, 107, 108], "ellipticcurv": [6, 10, 11, 38, 58, 98, 99, 102, 104, 106, 107, 108], "coordinate_model": [6, 10, 13, 14, 15, 16, 18, 20, 23, 38, 39, 100, 102, 104, 105, 106, 108, 109], "prime": [6, 10, 27, 97, 104, 106, 107, 108, 112], "affine_add": [6, 10], "affine_doubl": [6, 10], "affine_neg": [6, 10], "affine_multipli": [6, 10, 100, 102, 104, 106], "affine_neutr": [6, 10], "neutral_is_affin": [6, 10], "is_neutr": [6, 10], "is_on_curv": [6, 10, 100, 102], "to_coord": [6, 10, 38, 104, 108], "to_affin": [6, 10, 13, 18, 38, 39, 100, 102, 104, 106], "decode_point": [6, 10], "affine_lift_x": [6, 10], "affine_random": [6, 10, 102, 104, 106], "divpoli": [6, 96], "a_invari": [6, 11], "b_invari": [6, 11], "mult_by_n": [6, 11], "error": [6, 45, 67, 73, 96, 104, 105, 106, 108], "noninvertibleerror": [6, 12, 27, 45, 104, 108], "add_not": [6, 12, 13, 19, 23, 67, 68, 73], "arg": [6, 12, 13, 19, 23, 27, 30, 46, 53, 67, 68, 73, 98, 99, 105, 106], "with_traceback": [6, 12, 13, 19, 23, 67, 68, 73], "noninvertiblewarn": [6, 12, 45], "nonresidueerror": [6, 12, 45], "nonresiduewarn": [6, 12, 45], "unsatisfiedassumptionerror": [6, 12, 45, 104, 108], "unsatisfiedassumptionwarn": [6, 12, 45], "key_agr": [6, 96, 102, 109], "ecdhact": [6, 25], "hash_algo": [6, 25, 41, 75], "keyagr": [6, 25, 73], "perform_raw": [6, 25], "perform": [6, 25, 33, 36, 48, 49, 50, 88, 96, 102, 104, 106, 108, 109], "ecdh_non": [6, 25], "ecdh_sha1": [6, 25, 102, 109], "ecdh_sha224": [6, 25], "ecdh_sha256": [6, 25], "ecdh_sha384": [6, 25], "ecdh_sha512": [6, 25], "key_gener": [6, 96, 102, 109], "keygenact": [6, 26], "keygener": [6, 26, 102, 109], "affin": [6, 9, 10, 18, 26, 38, 39, 55, 58, 97, 104, 106, 108], "mod": [6, 10, 11, 14, 18, 25, 26, 39, 41, 45, 49, 75, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108], "extgcd": [6, 27], "jacobi": [6, 27], "miller_rabin": [6, 27, 104], "randommodact": [6, 27], "order": [6, 7, 8, 14, 27, 30, 31, 32, 33, 34, 35, 36, 38, 46, 57, 58, 68, 73, 94, 101, 102, 104, 105, 106, 107, 108, 109], "x": [6, 10, 25, 27, 28, 55, 58, 65, 73, 97, 98, 99, 102, 104, 106, 107, 108, 112], "n": [6, 11, 22, 27, 57, 58, 65, 98, 99, 102, 104, 106, 107, 108], "is_residu": [6, 27], "sqrt": [6, 27, 106], "random": [6, 10, 18, 27, 39, 97, 98, 99, 102, 104, 106, 107, 108], "rawmod": [6, 27], "undefin": [6, 27, 45, 104], "symbolicmod": [6, 27, 108], "gmpmod": [6, 27], "shortnam": [6, 13, 14, 15, 16, 18, 20, 28, 108, 109], "parameter_nam": [6, 28], "coordinate_nam": [6, 28], "equat": [6, 28, 58, 108], "ysquar": [6, 28], "base_addit": [6, 28], "base_doubl": [6, 28], "base_neg": [6, 28], "base_neutr": [6, 28], "full_weierstrass": [6, 28], "to_weierstrass": [6, 28], "from_weierstrass": [6, 28], "shortweierstrassmodel": [6, 28, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "montgomerymodel": [6, 28, 101, 105], "edwardsmodel": [6, 28, 101], "twistededwardsmodel": [6, 28, 101, 105], "op": [6, 13, 14, 15, 16, 18, 20, 23, 96, 107, 108], "optyp": [6, 13, 14, 19, 20, 37, 107], "add": [6, 10, 12, 14, 15, 16, 18, 19, 23, 31, 32, 33, 34, 35, 36, 37, 41, 47, 57, 64, 65, 68, 73, 79, 81, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "sub": [6, 37, 101, 107, 108], "neg": [6, 14, 15, 16, 18, 35, 36, 37, 68, 73, 94, 106, 107, 108], "div": [6, 37], "pow": [6, 37, 107], "id": [6, 37, 73, 96, 107], "codeop": [6, 14, 15, 16, 18, 37], "constant": [6, 37, 68, 73, 97, 101], "oper": [6, 8, 13, 14, 15, 16, 18, 19, 20, 25, 37, 57, 65, 93, 98, 99, 102, 103, 105, 107, 109], "parent": [6, 13, 14, 37, 52, 55, 57, 89, 105, 106, 108], "cofactor": [6, 38, 108], "categori": [6, 38, 98, 104, 108], "domainparametercategori": [6, 38], "descript": [6, 38, 90, 94], "load_categori": [6, 38], "load_param": [6, 38], "load_params_ecgen": [6, 38, 108], "load_params_ectest": [6, 38, 104], "get_categori": [6, 38], "get_param": [6, 38, 67, 73, 100, 103, 105, 106, 109], "coordinatemappingact": [6, 39], "model_from": [6, 39], "model_to": [6, 39], "field": [6, 10, 13, 18, 39, 96, 97, 100, 101, 108, 112], "to_model": [6, 13, 18, 39, 102, 104, 106, 108], "equals_affin": [6, 13, 18, 39], "equals_sc": [6, 13, 18, 39], "equal": [6, 13, 18, 39, 68, 73, 88, 94, 99, 102], "infinitypoint": [6, 38, 39, 98, 99, 102, 104], "convert_bas": [6, 40], "sliding_window_ltr": [6, 40], "sliding_window_rtl": [6, 40], "wnaf": [6, 40, 97], "booth": [6, 40, 97, 112], "booth_word": [6, 40], "booth_window": [6, 40], "signatureresult": [6, 41, 75], "r": [6, 30, 37, 41, 67, 73, 97, 104, 110], "from_der": [6, 41], "to_der": [6, 41], "ecdsaact": [6, 41], "msg": [6, 41], "ecdsasignact": [6, 41], "ecdsaverifyact": [6, 41], "can_sign": [6, 41], "can_verifi": [6, 41], "sign_hash": [6, 41], "sign_data": [6, 41, 109], "verify_hash": [6, 41], "verify_data": [6, 41, 109], "ecdsa_non": [6, 41], "ecdsa_sha1": [6, 41, 109], "ecdsa_sha224": [6, 41], "ecdsa_sha256": [6, 41], "ecdsa_sha384": [6, 41], "ecdsa_sha512": [6, 41], "transform": [6, 10, 26, 38, 47, 58, 67, 73, 79, 86, 96, 102, 105], "m2sw": [6, 42], "m2te": [6, 42], "m2e": [6, 42], "te2m": [6, 42], "te2e": [6, 42], "te2sw": [6, 42], "sw2m": [6, 42], "sw2te": [6, 42], "sw2e": [6, 42], "provid": [7, 8, 9, 10, 11, 13, 14, 15, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 46, 51, 55, 58, 60, 61, 62, 63, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 93, 94, 95, 96], "wai": [7, 58, 96, 98, 99, 101, 104, 106, 108], "work": [7, 8, 13, 30, 36, 45, 57, 68, 93, 96, 97, 102, 110, 111], "enumer": [7, 30, 96, 104, 105, 106, 107, 108], "enum": [7, 30, 37, 60, 73, 100], "classmethod": [7, 20, 27, 57, 66, 73, 91, 92, 93, 94, 95], "algorithm": [7, 27, 29, 30, 31, 32, 33, 40, 41, 97, 102, 112], "us": [7, 8, 9, 10, 11, 12, 18, 19, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45, 46, 49, 50, 55, 57, 58, 60, 61, 62, 63, 65, 68, 69, 71, 72, 73, 76, 78, 80, 83, 84, 86, 88, 89, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "mul_toom_cook": 7, "mul_karatsuba": 7, "mul_comba": 7, "mul_bas": [7, 97], "sqr_toom_cook": 7, "sqr_karatsuba": 7, "sqr_comba": 7, "sqr_base": 7, "modular": [7, 27, 97, 104], "method": [7, 8, 30, 31, 32, 33, 34, 35, 36, 46, 60, 61, 62, 63, 93, 97, 102, 105, 108], "red_barrett": 7, "red_montgomeri": 7, "red_bas": 7, "inv_gcd": 7, "inv_eul": 7, "hash": [7, 41], "hash_non": 7, "hash_sha1": 7, "hash_sha224": 7, "hash_sha256": 7, "hash_sha384": 7, "hash_sha512": 7, "uniform": 7, "integ": [7, 27, 40, 57, 68, 73, 82, 94, 106], "modulo": 7, "mod_rand_sampl": 7, "mod_rand_reduc": 7, "object": [7, 8, 9, 10, 14, 19, 20, 22, 25, 26, 27, 28, 37, 38, 39, 41, 45, 46, 49, 50, 51, 57, 60, 63, 65, 66, 68, 73, 78, 89, 91, 93, 94, 101, 108], "an": [7, 8, 9, 10, 11, 14, 18, 19, 25, 27, 28, 31, 38, 39, 40, 41, 45, 46, 51, 55, 57, 60, 61, 62, 63, 68, 69, 70, 73, 76, 77, 78, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 111], "ecc": [7, 96, 100, 101, 103, 109, 112], "match": [7, 47, 79, 80, 96, 97, 101, 108], "given": [7, 8, 14, 18, 24, 39, 46, 55, 58, 60, 61, 62, 63, 65, 68, 73, 82, 83, 93, 94, 96, 102, 104, 106, 108, 109], "should": [7, 31, 46, 60, 61, 62, 63, 82, 99, 100, 103, 105, 106], "some": [7, 14, 44, 46, 57, 58, 89, 91, 93, 97, 101, 103, 104, 105, 106, 108, 109], "attribut": [7, 15, 57, 100, 101, 108], "limit": [7, 46, 96, 108], "them": [7, 14, 30, 60, 61, 62, 63, 97, 98, 99, 101, 106, 108], "unsupport": 7, "which": [7, 8, 26, 38, 45, 49, 50, 51, 57, 65, 71, 73, 81, 89, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 111], "either": [7, 8, 34, 68, 73, 82, 93, 94, 97, 102, 108, 110], "subclass": [7, 30, 101], "instanc": [7, 30, 41, 46, 62, 98, 99, 102, 109], "dictionari": [7, 8, 102], "give": [7, 108, 109], "argument": [7, 38, 46, 68, 73, 94, 101, 108, 109], "constructor": [7, 15, 101, 103], "might": [7, 9, 60, 61, 62, 63, 104, 106, 108], "larg": [7, 73, 101, 111], "take": [7, 34, 38, 45, 46, 55, 87, 98, 99, 109], "up": [7, 46, 55, 57, 60, 61, 62, 63], "signific": [7, 68, 73, 94, 99, 108], "memori": [7, 65, 93, 108], "space": [7, 80, 96], "thi": [7, 8, 9, 10, 14, 15, 16, 18, 27, 30, 31, 36, 39, 40, 41, 45, 46, 57, 60, 61, 62, 63, 89, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111], "do": [7, 33, 60, 61, 62, 63, 80, 93, 96, 98, 99, 104, 106, 108], "store": [7, 14, 15, 16, 18, 38, 100, 102, 105, 106, 108], "trace": [8, 47, 48, 49, 50, 55, 59, 60, 61, 62, 63, 64, 65, 66, 75, 90, 91, 92, 93, 94, 95, 96, 103, 106, 107, 108, 111], "execut": [8, 14, 37, 45, 46, 55, 96, 101, 102, 108, 109], "individu": 8, "evalu": [8, 44, 46, 106], "These": [8, 106, 109], "ar": [8, 18, 19, 33, 38, 39, 45, 46, 55, 57, 68, 73, 86, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109], "differ": [8, 10, 14, 29, 30, 38, 40, 42, 57, 65, 80, 97, 98, 99], "thei": [8, 14, 38, 40, 55, 82, 86, 97, 106, 108], "ha": [8, 10, 15, 33, 41, 46, 57, 60, 61, 62, 63, 84, 89, 93, 97, 101, 104, 105, 106], "its": [8, 14, 15, 16, 18, 24, 32, 57, 58, 86, 96, 97, 99, 103, 108], "children": [8, 52, 57, 104, 108, 109], "done": [8, 98, 99, 102, 103], "like": [8, 14, 15, 16, 18, 32, 36, 40, 60, 61, 62, 63, 93, 94, 97, 102, 105, 106, 110], "onli": [8, 10, 11, 19, 27, 36, 38, 57, 58, 93, 97, 101, 102, 104, 105, 106, 108], "particular": [8, 9, 60, 61, 62, 63, 96, 100, 109], "properti": [8, 10, 14, 15, 16, 18, 19, 20, 22, 25, 26, 27, 30, 37, 39, 41, 45, 46, 57, 60, 61, 62, 63, 65, 68, 69, 73, 76, 89, 94, 108], "ordereddict": 8, "recurs": 8, "posit": [8, 68, 73, 94, 108], "indic": [8, 68, 73, 82, 84, 94, 104, 109], "level": [8, 13, 20, 96], "insert": [8, 104, 110], "depth": [8, 19, 52, 57, 108], "construct": [8, 55, 58, 89, 104, 108], "textual": 8, "represent": [8, 10, 40, 68, 73, 94, 108], "visual": [8, 96, 98, 99, 102], "callback": [8, 106, 107, 108], "first": [8, 13, 14, 19, 98, 99, 100, 102, 103, 106, 107, 108, 109, 110, 111], "callabl": [8, 38, 46, 55, 80, 81], "call": [8, 30, 31, 32, 33, 34, 35, 36, 46, 57, 97, 109], "od": [8, 101], "shallow": 8, "creat": [8, 19, 46, 62, 98, 99, 100, 102, 103], "new": [8, 14, 15, 16, 18, 46, 57, 62, 89, 108], "iter": [8, 19, 23, 46, 57, 68, 73, 93, 94, 97], "set": [8, 10, 12, 17, 19, 20, 23, 30, 31, 32, 33, 34, 35, 36, 38, 40, 45, 46, 53, 55, 57, 58, 60, 61, 62, 63, 67, 68, 73, 80, 88, 89, 90, 91, 92, 93, 94, 96, 101, 103, 104, 105, 106, 111], "default": [8, 46, 67, 68, 73, 93, 94, 97, 109], "els": [8, 93, 97, 101, 104, 105, 106, 107, 108], "view": [8, 93], "d": [8, 28, 57, 63, 93, 97, 112], "last": [8, 13, 19, 57], "move": 8, "exist": [8, 57, 108], "element": [8, 12, 27, 45, 97], "end": [8, 51, 68, 73, 82, 94, 103, 104, 108], "begin": [8, 51, 68, 73, 82, 94], "rais": [8, 18, 27, 39, 45, 46, 68, 73, 93, 94, 104, 108], "keyerror": [8, 93], "doe": [8, 57, 93, 97, 104, 106, 109], "v": [8, 51, 93, 97, 108], "specifi": [8, 10, 14, 15, 16, 18, 30, 38, 73, 93, 100, 108], "correspond": [8, 19, 49, 50, 93, 98, 99], "If": [8, 18, 27, 39, 46, 60, 61, 62, 63, 68, 73, 80, 93, 94], "found": [8, 40, 93], "otherwis": [8, 10, 35, 36, 46, 93, 96, 97, 108], "pair": [8, 68, 73, 93, 94, 102, 104, 108], "lifo": 8, "fifo": 8, "e": [8, 14, 15, 16, 18, 37, 55, 58, 74, 84, 93, 96, 97, 101, 104, 108], "f": [8, 57, 80, 93, 94, 98, 99, 104, 105, 106, 108], "dict": [8, 20, 21, 49, 50, 106, 107, 108], "k": [8, 19, 40, 55, 58, 67, 73, 93, 97, 106, 108], "lack": [8, 93], "In": [8, 57, 93, 97, 102, 103, 109], "case": [8, 10, 57, 93, 97, 102, 106, 108], "follow": [8, 45, 93, 96, 97, 98, 99, 101, 102, 105, 108, 110], "abc": [8, 14, 20, 30, 31, 51, 53, 68, 70, 73, 74, 78], "happen": [8, 45, 55, 73, 106, 109], "There": [8, 104, 108, 109], "alwai": [8, 29, 31, 33, 97, 101, 109], "activ": [8, 109], "see": [8, 27, 33, 57, 96, 97, 101, 102, 106, 108, 109], "function": [8, 11, 13, 17, 38, 40, 42, 44, 45, 55, 58, 80, 81, 82, 83, 84, 85, 86, 87, 96, 97, 98, 99, 100, 101, 104, 105, 106, 108, 112], "getcontext": 8, "setcontext": 8, "resetcontext": 8, "abstract": [8, 14, 20, 30, 51, 53, 60, 68, 70, 73, 74, 77, 78], "enter": [8, 45, 55], "stop": [8, 55, 59, 60, 61, 62, 63], "sequenc": [8, 10, 60, 61, 62, 88, 89], "captur": [8, 59, 60, 61, 62, 63, 103], "ctx": [8, 104, 106, 107, 108], "contextmanag": [8, 105, 108], "manag": [8, 45, 65], "system": [9, 10, 18, 38, 39, 68, 73, 94, 96, 97, 104, 110], "form": [9, 10, 26, 28, 35, 40, 45, 57, 58], "full": [9, 31, 33, 34, 97, 108], "relationship": [9, 58, 109], "between": [9, 36, 51, 58, 65, 80, 82, 105], "weight": [9, 40, 51, 102, 106], "homogen": [9, 58, 97, 108], "need": [9, 30, 31, 32, 33, 34, 35, 36, 40, 98, 99, 100, 102, 108, 110], "hold": [9, 60, 61, 62, 63, 68, 73, 94], "also": [9, 38, 68, 73, 93, 94, 96, 97, 99, 100, 103, 104, 105, 106, 108, 110], "comput": [9, 11, 14, 27, 33, 35, 36, 40, 45, 55, 58, 65, 69, 81, 86, 88, 98, 104, 105, 106, 107, 109, 112], "contain": [9, 12, 38, 57, 65, 73, 82, 89, 96, 97, 98, 99, 100, 102, 111], "express": [9, 14, 15, 16, 18, 19, 20, 24, 28, 96, 101], "cover": [10, 103], "other": [10, 15, 18, 21, 36, 39, 46, 57, 81, 89, 96, 97, 100, 102, 105, 106, 108], "two": [10, 14, 34, 51, 58, 68, 73, 84, 88, 94, 97, 106, 108, 109, 111], "addit": [10, 13, 14, 15, 16, 18, 33, 34, 36, 96, 97, 100, 101, 102, 104, 106], "infin": [10, 30, 31, 32, 33, 34, 35, 36, 38, 39, 67, 73, 104], "gracefulli": 10, "short": [10, 28, 30, 31, 32, 33, 34, 35, 36, 97, 101], "circuit": [10, 30, 31, 32, 33, 34, 35, 36, 101], "One": [10, 45, 105, 106, 109], "anoth": [10, 39, 57, 106, 109], "doubl": [10, 14, 31, 33, 34, 36, 97, 101, 102, 108], "negat": [10, 14, 35, 36, 86], "multipli": [10, 26, 29, 30, 31, 32, 33, 34, 35, 36, 49, 50, 55, 96, 97, 98, 99, 102, 104, 106, 108, 109], "check": [10, 96, 100, 102], "test": [10, 18, 27, 39, 46, 47, 79, 96, 98, 99, 105, 106, 107, 108], "convert": [10, 18, 38, 39, 40, 42, 68, 73, 94], "possibl": [10, 18, 38, 39, 55, 96, 97, 101, 108], "encod": [10, 73, 102, 104, 108], "decod": [10, 100], "ansi": 10, "x9": 10, "62": [10, 112], "same": [10, 11, 40, 57, 89, 97, 99, 106, 108], "63": 10, "uncompress": [10, 67, 73], "variant": [10, 40, 63, 97], "valid": [10, 97, 100, 102], "lift": 10, "divis": [11, 14, 15, 16, 18], "polynomi": [11, 24, 58], "invari": 11, "shortweierstrass": [11, 42], "5": [11, 57, 63, 73, 80, 97, 103, 106, 107, 108], "a1": 11, "a2": 11, "a3": 11, "a4": 11, "a6": 11, "b": [11, 27, 28, 37, 57, 63, 67, 73, 94, 97, 98, 99, 102, 103, 104, 106, 107, 108, 109, 112], "4": [11, 57, 63, 68, 73, 94, 97, 98, 99, 101, 103, 104, 105, 106, 107, 108], "b2": 11, "b4": 11, "b6": 11, "b8": 11, "two_torsion_multipl": 11, "2": [11, 14, 15, 16, 18, 19, 28, 33, 36, 37, 51, 57, 60, 63, 73, 87, 93, 94, 97, 98, 99, 101, 103, 105, 106, 108], "th": [11, 87, 108], "sagemath": 11, "poli": [11, 24, 58, 108], "x_onli": 11, "use_pari": 11, "skip": [11, 104], "my": 11, "pari": [11, 96, 108], "version": [11, 73, 97], "mx": 11, "where": [11, 14, 15, 16, 18, 74, 84, 97, 98, 102, 104, 108, 109], "each": [11, 36, 49, 50, 57, 87, 97, 98, 99, 101, 102, 108, 109], "numer": [11, 57, 67, 68, 73, 90, 94], "denomin": [11, 27, 67, 68, 73, 90, 94], "except": [12, 19, 23, 46, 57, 68, 73, 96, 97, 101, 104, 105, 108, 112], "warn": [12, 43, 45, 46, 98, 104, 105], "librari": [12, 27, 45, 63, 96, 108], "arithmeticerror": 12, "non": [12, 35, 36, 40, 45, 46, 55, 58, 87, 108], "invert": [12, 27, 45, 47, 79, 86, 104, 106], "note": [12, 19, 23, 68, 73, 101, 104, 105, 106, 108], "tb": [12, 19, 23, 68, 73], "self": [12, 19, 23, 65, 68, 73, 94, 102], "__traceback__": [12, 19, 23, 68, 73], "userwarn": 12, "residu": [12, 27, 45], "root": [12, 13, 20, 27, 45, 52, 57, 86, 104, 108, 109], "valueerror": [12, 18, 39, 104, 108], "unsatisfi": [12, 45], "hit": [12, 108], "intermedi": [13, 14, 24, 58, 65, 106, 107, 108, 109], "op_result": [13, 14, 106, 107, 108], "input_point": [13, 14], "output_point": [13, 14], "add_oper": [13, 14], "add_result": [13, 14], "meta": [13, 14, 15, 16, 18, 64, 66, 79, 89, 99], "num_input": [13, 14, 15, 16, 18, 37], "num_output": [13, 14, 15, 16, 18], "unifi": [13, 14, 15, 16, 18, 112], "assumptions_str": [13, 14, 15, 16, 18, 105], "input_index": [13, 14, 15, 16, 18], "output_index": [13, 14, 15, 16, 18], "num_oper": [13, 14, 15, 16, 18], "num_multipl": [13, 14, 15, 16, 18], "num_divis": [13, 14, 15, 16, 18], "num_invers": [13, 14, 15, 16, 18], "num_pow": [13, 14, 15, 16, 18], "num_squar": [13, 14, 15, 16, 18], "num_addsub": [13, 14, 15, 16, 18], "to_cod": [13, 16, 105], "verify_chain": [13, 19], "previou": [13, 19, 45, 57], "deepcopi": [13, 19, 20, 105, 108], "input_nod": [13, 19, 20], "slice": [13, 19, 47, 48, 51], "sign": [13, 19, 41, 68, 73, 94, 97, 102, 112], "add_nod": [13, 19, 20], "remove_nod": [13, 19, 20], "change_sign": [13, 19], "compon": [13, 19], "label": [13, 19, 20, 105, 106, 107], "is_add": [13, 19, 20], "is_div": [13, 19, 20], "is_id": [13, 19, 20], "is_inv": [13, 19, 20], "is_mul": [13, 19, 20], "is_neg": [13, 19, 20], "is_pow": [13, 19, 20], "is_sqr": [13, 19, 20], "is_sub": [13, 19, 20], "reconnect_outgoing_nod": [13, 19, 20], "color": [13, 20, 98, 99, 105, 106], "from_str": [13, 20], "output_nam": [13, 20], "node_index": [13, 20], "to_formula": [13, 20], "networkx_graph": [13, 20], "output_nod": [13, 20], "planar_posit": [13, 20], "draw": [13, 20], "find_all_path": [13, 20], "reorder": [13, 20], "reindex": [13, 20], "print": [13, 20, 57, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "part": [13, 19, 22, 65, 68, 73, 80, 84, 93, 94, 97, 101], "is_fin": [13, 22], "dure": [14, 26, 45, 55, 73, 98, 99, 102, 106, 107, 109], "were": [14, 46, 55, 82, 98, 105, 108], "classvar": [14, 15, 16, 18, 30, 31, 32, 33, 34, 35, 36, 51], "inform": [14, 15, 16, 18, 96, 97, 102, 108], "about": [14, 15, 16, 18, 96, 97, 102, 108], "introduc": [14, 15, 16, 18, 108], "half": [14, 15, 16, 18, 97], "g": [14, 15, 16, 18, 37, 55, 58, 67, 73, 74, 80, 84, 96, 97, 101, 104, 106, 107, 108], "z1": [14, 15, 16, 18, 45, 97], "collect": [14, 15, 16, 18, 97, 103, 105, 106, 108, 109], "constitut": [14, 15, 16, 18], "index": [14, 15, 16, 18, 57, 82, 93, 97, 104, 105, 106], "power": [14, 15, 16, 18, 36, 49, 50, 55, 59, 80, 103, 109, 112], "subtract": [14, 15, 16, 18, 47, 79, 81, 86, 97, 106], "dbl": [14, 15, 16, 18, 31, 32, 33, 34, 35, 36, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109], "tripl": 14, "tpl": [14, 15, 16, 18], "somehow": 14, "scale": [14, 18, 39, 80, 86, 101], "repres": [14, 18, 19, 30, 31, 32, 33, 34, 35, 36, 39, 46, 55, 68, 71, 73, 94, 101, 108, 109], "project": [14, 18, 30, 39, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "scl": [14, 15, 16, 18, 31, 32, 33, 34, 35, 36, 98, 99, 100, 101, 102], "differenti": [14, 34, 80, 106, 112], "known": [14, 68, 73, 94], "third": 14, "p": [14, 30, 33, 55, 57, 62, 88, 98, 99, 102, 104, 106, 107, 108, 112], "dadd": [14, 15, 16, 18, 34], "3": [14, 15, 16, 18, 28, 32, 33, 57, 63, 68, 73, 94, 97, 101, 103, 104, 105, 106, 107, 108, 112], "simultan": [14, 97], "o": [14, 57, 100, 102, 103], "ladd": [14, 15, 16, 18, 34, 97, 105], "concret": [15, 30, 108], "basic": [15, 57], "can": [15, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 45, 46, 57, 68, 82, 93, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110], "directli": 15, "initi": [15, 30, 31, 32, 33, 34, 35, 36, 46, 55, 98, 99, 102, 106], "meta_path": [16, 105], "op3_path": [16, 105], "efdformula": [16, 19], "norm": 17, "fakeformula": 18, "irrespect": [18, 39], "sens": [18, 39, 101], "z": [18, 39, 58, 97, 98, 99, 100, 102, 104, 106, 107, 108], "singl": [18, 39, 57, 86], "compar": [18, 39, 102], "chain": [19, 104], "n1": 19, "n2": 19, "nk": 19, "ni": 19, "For": [19, 33, 36, 45, 97, 98, 99, 102, 109, 110], "everi": 19, "outgo": 19, "neither": 19, "j": [19, 80, 96, 105, 106, 108, 112], "fliparoo_typ": 19, "find": [19, 58, 106, 110], "longest_fliparoo": 19, "largest": [19, 60, 61, 62, 63, 80], "summand": 19, "x1": [19, 37, 58, 97], "x2": [19, 58, 97], "x3": [19, 97], "x4": 19, "x5": 19, "subgraph": 19, "graph_copi": 19, "destin": [19, 20], "renam": [19, 20, 22, 23], "last_nod": 19, "signed_subgraph": 19, "left_signed_nod": 19, "right_signed_nod": 19, "b41f44": 20, "1f78b4": 20, "left": [20, 30, 31, 33, 35, 40, 97, 101, 106, 107, 112], "right": [20, 30, 31, 33, 35, 40, 96, 97, 101, 107, 112], "digraph": 20, "float": [20, 21, 49, 60, 61, 62, 63, 65, 80, 84, 94], "filenam": 20, "figsiz": [20, 106, 108], "12": [20, 63, 73, 106], "1000": [21, 98, 99], "nopower2": 22, "original_graph": 22, "source_nod": 22, "node_combin": 23, "output_sign": 23, "new_oper": 23, "obtain": [24, 38, 58, 96, 101, 106, 108], "expr": [24, 27, 44], "associ": [24, 46, 57, 58, 89, 96], "diffi": 25, "hellman": 25, "exchang": [25, 97], "agreement": [25, 73, 102], "primit": [25, 41], "share": [25, 73, 102, 108], "secret": [25, 49, 50, 67, 73, 102, 104], "raw": [25, 41, 59, 60, 73, 78, 108, 110], "keypair": [26, 67, 73, 100, 103], "domain": [26, 30, 31, 32, 33, 34, 35, 36, 38, 42, 49, 50, 52, 55, 57, 108], "over": [26, 58, 78, 97, 102, 104, 106, 108], "public": [26, 41, 67, 73, 97, 109], "privat": [26, 41, 67, 73, 109], "sever": [27, 29, 38, 46, 97, 100, 104, 106, 109], "\u2124\u2099": 27, "dynam": [27, 80, 103], "dispatch": 27, "chosen": 27, "runtim": [27, 45], "misc": [27, 96, 104, 106, 108], "cfg": [27, 43, 52, 57, 96, 104, 106, 108], "python": [27, 45, 62, 63, 95], "under": 27, "sympi": [27, 45, 96, 104, 108], "gmpy2": [27, 45, 96], "instal": [27, 108, 110], "gmp": [27, 45, 96, 108], "euclid": 27, "greatest": 27, "extend": [27, 97, 105, 107], "round": 27, "50": [27, 63, 98, 104, 106, 107], "miller": 27, "rabin": 27, "probabilist": 27, "primal": 27, "z_n": 27, "quadrat": 27, "modulu": 27, "tonelli": 27, "shank": 27, "special": [27, 38, 39, 97, 108, 112], "ensur": [27, 104], "mpz": 27, "support": [28, 60, 61, 62, 63, 68, 73, 94, 96, 97, 101], "efdcurvemodel": 28, "weierstrass": [28, 97], "y": [28, 55, 58, 97, 98, 99, 102, 104, 106, 107, 108], "edward": [28, 42, 97], "c": [28, 57, 63, 80, 96, 97, 100, 101, 102, 108], "twist": [28, 97], "ltr": [29, 30, 31, 32, 33, 35, 36, 40, 101, 104, 106, 107, 108], "rtl": [29, 30, 31, 32, 33, 35, 40, 106, 107], "peqpr": [29, 30, 31, 32, 33, 35, 36, 101, 104, 106, 107], "peqrp": [29, 30, 108], "requir": [29, 30, 31, 32, 33, 34, 35, 36, 45, 46, 103, 104, 108], "short_circuit": [29, 30, 31, 32, 33, 34, 35, 36, 101], "init": [29, 30, 31, 32, 33, 34, 35, 36, 98, 99, 102, 103, 104, 106, 107, 108], "accumulation_ord": [29, 30, 31, 32, 33, 35, 36, 101], "direct": [29, 30, 31, 32, 33, 35, 36, 60, 61, 62, 63, 73, 101, 103], "complet": [29, 31, 33, 34, 46, 97, 101], "width": [29, 32, 35, 36, 40, 97, 101, 102, 103, 108, 111], "precompute_neg": [29, 35, 36, 101], "recoding_direct": [29, 36, 101], "m": [29, 33, 36, 97, 101, 106, 107], "mostli": 30, "accumul": [30, 31, 32, 33, 35, 36], "precomput": [30, 33, 35, 36, 97, 104, 106, 107], "__init__": 30, "have": [30, 40, 46, 57, 97, 98, 99, 100, 104, 106, 108], "annot": 30, "so": [30, 80, 86, 96, 97, 99, 101, 103, 104, 106, 108], "guard": [30, 31, 34, 35, 36], "upon": [30, 31, 32, 33, 34, 35, 36, 108], "verifi": [30, 31, 32, 33, 34, 35, 36, 41, 73, 97, 102, 106, 109], "mix": [30, 74, 97], "bit": [31, 33, 34, 40, 47, 48, 51, 68, 73, 94, 97, 98, 99, 101, 102, 104, 106, 107, 108, 109, 112], "classic": 31, "you": [31, 82, 105, 106, 108, 110], "length": [31, 33, 34, 40, 51, 68, 73, 80, 82, 84, 94, 97, 99, 101], "scan": 31, "msb": 31, "lsb": 31, "coron": [31, 112], "resist": [31, 112], "against": [31, 112], "spa": [31, 109], "co2002": [31, 112], "bgmw": 32, "lim": 32, "lee": 32, "brickel": 32, "gordon": 32, "mccurlei": 32, "wilson": 32, "rather": 32, "parametr": [32, 101, 106], "41": 32, "gecc": [32, 33, 40, 97, 105, 112], "44": [32, 97], "teeth": 32, "lot": [33, 97], "pre": [33, 73, 96], "page": [33, 97], "104": 33, "exampl": [33, 45, 68, 73, 94, 96, 103, 109, 111], "t": [33, 45, 57, 65, 88, 97, 104, 108], "26": 33, "expect": [33, 73], "time": [33, 46, 55, 57, 60, 61, 62, 63, 65, 80, 97, 98, 99, 103], "elimin": [33, 58, 108], "diffadd": 34, "three": [34, 96], "adjac": [35, 40], "recod": [35, 36, 40], "well": [35, 36, 97, 100, 101, 102, 109], "It": [35, 36, 38, 46, 96, 97, 101], "fly": [35, 36], "slide": [36, 40, 97, 112], "ari": 36, "log_2": 36, "wide": 36, "ariti": 36, "op_str": [37, 107], "unari": 37, "z2": [37, 97], "codetyp": 37, "std": [38, 112], "repositori": [38, 96, 97], "whole": [38, 40, 65, 101, 102], "subgroup": [38, 108], "infti": [38, 106, 107, 108], "load": [38, 41, 93, 99, 102, 105, 106, 111], "json": 38, "union": [38, 62, 65, 82, 89, 94], "binaryio": [38, 94], "io": [38, 97, 104, 108], "try": [38, 73, 80, 98, 99, 102, 104, 106, 107, 108], "ecgen": 38, "format": [38, 73, 92, 93, 94, 95, 96], "ectest": [38, 47, 67, 96], "retriev": [38, 59, 60, 61, 62, 63, 103], "databas": [38, 96, 112], "http": [38, 51, 80, 97, 102, 105, 108, 112], "github": [38, 96, 97, 102], "com": [38, 51, 97, 102, 112], "j08ny": 38, "usual": [39, 97], "variou": [40, 105, 106], "digit": [40, 41, 83], "littl": [40, 68, 73, 94], "endian": 40, "w": [40, 67, 73, 97, 104, 105, 108], "bbg": [40, 112], "17": [40, 73, 94, 98, 99, 112], "9": [40, 63, 73, 97, 106, 108], "35": [40, 105, 108], "20": [40, 63, 94, 106, 107, 108], "hehcc": [40, 112], "accord": 40, "actual": [40, 60, 61, 62, 63, 97, 100, 104, 108], "uniqu": [40, 57, 108], "nafw": 40, "expans": 40, "both": [40, 57, 67, 73, 97, 106], "ava": 40, "2005a": 40, "must": [40, 68, 73, 94], "2005": 40, "mai": [40, 46, 57, 97, 106], "optim": 40, "b51": [40, 112], "modifi": [40, 57, 96, 97, 104, 105, 108], "m61": [40, 112], "boringssl": [40, 105], "nist": [40, 97], "impl": [40, 97], "overlap": 40, "size": [40, 46, 52, 55, 57, 73, 97, 98, 99, 101, 108], "blen": 40, "group": [40, 88, 97, 106, 108], "big": [40, 68, 73, 94], "static": [41, 65, 73, 78, 94, 111], "asn": 41, "der": 41, "verif": 41, "digest": 41, "nonc": 41, "alreadi": [41, 104], "twistededward": 42, "miscellan": 43, "thing": [43, 44, 45, 51, 97, 106, 107, 108], "cach": [43, 96], "sympifi": [43, 44, 108], "simplifi": [43, 44], "ecconfig": [43, 45], "no_inverse_act": [43, 45], "non_residue_act": [43, 45], "unsatisfied_formula_assumption_act": [43, 45], "unsatisfied_coordinate_assumption_act": [43, 45], "mod_implement": [43, 45, 108], "loggingconfig": [43, 45], "enabl": [43, 45, 60, 61, 62, 63, 100, 103], "ec": [43, 45, 73, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "log": [43, 45, 46, 58, 104], "getconfig": [43, 45, 108], "setconfig": [43, 45], "resetconfig": [43, 45], "temporaryconfig": [43, 45], "token": [43, 45], "util": [43, 96, 104, 106, 108], "pexec": [43, 46], "peval": [43, 46], "in_notebook": [43, 46], "silent": [43, 46, 106], "taskexecutor": [43, 46, 106, 108], "futur": [43, 46, 105, 106, 108], "submit_task": [43, 46, 106, 108], "shutdown": [43, 46], "submit": [43, 46, 105, 108], "task": [43, 46, 106, 108], "as_complet": [43, 46, 105, 106, 108], "convert_xor": 44, "strict": 44, "ration": [44, 68, 73, 94], "ratio": [44, 68, 73, 94], "7": [44, 63, 73, 97, 106], "measur": [44, 59, 60, 61, 62, 63, 67, 96], "count_op": 44, "doit": 44, "toolkit": [45, 96, 105], "packag": [45, 96], "when": [45, 46, 55, 57, 97, 98, 99, 100, 101, 102, 106], "ignor": [45, 98], "event": [45, 96], "noth": 45, "without": [45, 96, 101, 108], "fatal": 45, "those": [45, 84, 97, 100, 108], "creation": 45, "select": [45, 51, 67, 68, 69, 73, 76, 97, 101, 104, 106, 107, 110], "doesn": [45, 65], "anyth": [45, 109], "some_properti": 45, "some_valu": 45, "promis": 46, "we": [46, 57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109], "jupyt": [46, 105, 108], "notebook": [46, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111], "temporarili": 46, "disabl": [46, 60, 61, 62, 63], "processpoolexecutor": [46, 105, 106], "simpl": [46, 97, 108], "keep": 46, "track": [46, 106, 107], "max_work": [46, 105, 106, 108], "maximum": [46, 80, 86, 87, 105], "mani": [46, 60, 61, 62, 63, 73, 97], "worker": [46, 105], "processor": 46, "mp_context": [46, 105, 108], "multiprocess": [46, 98, 99, 105, 108], "launch": 46, "simplequeu": 46, "queue": 46, "allow": [46, 105, 108], "initarg": 46, "max_tasks_per_child": 46, "befor": [46, 60, 61, 62, 63, 73, 74, 97, 102, 108], "replac": [46, 89, 106, 108], "fresh": 46, "mean": [46, 51, 86, 93, 98, 99, 102, 108, 109], "live": 46, "executor": 46, "fork": 46, "spawn": [46, 105, 106, 108], "suppli": 46, "fn": 46, "chunksiz": 46, "equival": [46, 65], "greater": 46, "than": [46, 84, 97, 108], "chop": 46, "chunk": [46, 65, 67, 73, 108], "pool": [46, 98, 99, 105, 106, 108], "sent": [46, 68], "func": [46, 65, 105, 108], "out": [46, 58, 60, 61, 62, 63, 87, 96, 102, 106, 107, 108], "timeouterror": 46, "entir": 46, "could": [46, 68], "cancel_futur": 46, "clean": 46, "resourc": 46, "safe": 46, "finish": 46, "been": 46, "reclaim": 46, "cancel": 46, "pend": 46, "schedul": 46, "side": [47, 72, 96, 97, 98, 99, 102], "channel": [47, 59, 60, 61, 62, 63, 72, 96, 97, 98, 99, 102, 103], "analysi": [47, 55, 72, 80, 88, 97, 112], "attack": [47, 55, 58, 96, 106, 107, 108, 109, 112], "submodul": 47, "cpa": [47, 48, 96, 98, 99], "dpa": [47, 48, 96, 98, 112], "leakage_model": [47, 48, 49, 67, 75, 96, 98, 99, 102, 106, 107], "nois": [47, 48, 51, 102], "zeronois": [47, 48, 51], "normalnoic": [47, 48, 51, 106], "leakagemodel": [47, 48, 49, 51, 75], "ident": [47, 48, 51], "hammingweight": [47, 48, 51, 98, 99, 102, 106, 107], "hammingdist": [47, 48, 51], "bitlength": [47, 48, 51], "re": [47, 96, 99, 100, 102, 103, 104, 105, 106, 107, 108], "rpa": [47, 52, 96, 104, 107, 108, 112], "multiplecontext": [47, 52, 55, 104, 106, 107, 108], "rpa_point_0i": [47, 52, 55], "rpa_point_x0": [47, 52, 55], "rpa_input_point": [47, 52, 55], "rpa_distinguish": [47, 52, 55, 106], "structur": [47, 52, 96, 106], "zvp": [47, 52, 96, 112], "map_to_affin": [47, 52, 58], "compute_factor_set": [47, 52, 58, 108], "zvp_point": [47, 52, 58, 108], "scope": [47, 72, 96, 103], "sampletyp": [47, 59, 60, 61, 62, 63, 103], "chipwhispererscop": [47, 59, 61], "picoscope_alt": [47, 59, 96], "picoscopealt": [47, 59, 62], "picoscope_sdk": [47, 59, 96, 103], "picoscopesdk": [47, 59, 63], "ps3000scope": [47, 59, 63], "ps3000ascop": [47, 59, 63], "ps4000scope": [47, 59, 63], "ps5000scope": [47, 59, 63], "ps6000scope": [47, 59, 63, 103], "stacked_trac": [47, 96], "combin": [47, 64, 79, 89, 96, 106], "basetracemanag": [47, 64, 65], "gputracemanag": [47, 64, 65], "cputracemanag": [47, 64, 65], "stackedtrac": [47, 64, 65, 66], "iso7816": [47, 67, 96], "cardconnectionexcept": [47, 67, 68], "cardprotocol": [47, 67, 68, 69, 73, 76], "commandapdu": [47, 67, 68, 69, 73, 76], "responseapdu": [47, 67, 68, 69, 73, 76], "iso7816target": [47, 67, 68, 69, 73, 76], "pcsc": [47, 67, 73, 96], "pcsctarget": [47, 67, 69, 73, 110], "keypairenum": [47, 67, 73], "instructionenum": [47, 67, 73], "keybuildenum": [47, 67, 73], "exportenum": [47, 67, 73], "runmodeenum": [47, 67, 73], "keyenum": [47, 67, 73], "appletbaseenum": [47, 67, 73], "keyclassenum": [47, 67, 73], "keyagreementenum": [47, 67, 73, 110], "signatureenum": [47, 67, 73], "transformationenum": [47, 67, 73], "formatenum": [47, 67, 73], "curveenum": [47, 67, 73], "parameterenum": [47, 67, 73], "chunkingexcept": [47, 67, 73], "allocatekarespons": [47, 67, 73], "allocatesigrespons": [47, 67, 73], "allocaterespons": [47, 67, 73], "clearrespons": [47, 67, 73], "setrespons": [47, 67, 73], "transformrespons": [47, 67, 73], "generaterespons": [47, 67, 73], "exportrespons": [47, 67, 73], "ecdhrespons": [47, 67, 73], "ecdsarespons": [47, 67, 73], "cleanuprespons": [47, 67, 73], "runmoderespons": [47, 67, 73], "ectestertarget": [47, 67, 73], "ectestertargetpcsc": [47, 67, 73, 110], "ectestertargetleia": [47, 67, 73], "flashabl": [47, 67, 72, 74], "leakag": [47, 51, 67, 88, 96, 98, 106], "leakagetarget": [47, 67, 75, 98, 99], "leia": [47, 67, 73, 96], "leiatarget": [47, 67, 73, 76, 110], "serialtarget": [47, 67, 71, 77, 78], "simpleseri": [47, 67, 72, 96], "simpleserialtarget": [47, 67, 72, 78], "align": [47, 79, 96], "align_correl": [47, 79, 80], "align_peak": [47, 79, 80], "align_offset": [47, 79, 80], "align_sad": [47, 79, 80], "align_dtw_scal": [47, 79, 80], "align_dtw": [47, 79, 80], "averag": [47, 64, 65, 79, 81, 87, 96, 106, 108], "conditional_averag": [47, 64, 65, 79, 81], "standard_devi": [47, 64, 65, 79, 81, 98, 99], "varianc": [47, 64, 65, 79, 81, 106], "average_and_vari": [47, 64, 65, 79, 81], "edit": [47, 79, 96, 99], "trim": [47, 79, 82], "revers": [47, 52, 79, 82, 96], "pad": [47, 79, 82, 108], "stretch": [47, 79, 82, 99], "filter": [47, 58, 79, 96, 104, 107, 108, 111], "filter_lowpass": [47, 79, 83, 111], "filter_highpass": [47, 79, 83, 111], "filter_bandpass": [47, 79, 83], "filter_bandstop": [47, 79, 83], "match_pattern": [47, 79, 84], "match_part": [47, 79, 84], "plot": [47, 79, 96, 98, 99, 102, 103, 106, 107, 111], "save_figur": [47, 79, 85], "save_figure_png": [47, 79, 85], "save_figure_svg": [47, 79, 85], "plot_trac": [47, 79, 85, 102, 103, 106, 107, 111], "absolut": [47, 68, 73, 79, 80, 86, 94, 106], "threshold": [47, 60, 61, 62, 63, 79, 84, 86, 103, 106], "rolling_mean": [47, 79, 86, 99, 102, 106], "offset": [47, 60, 61, 62, 63, 79, 80, 84, 86, 87, 103], "recent": [47, 57, 79, 86], "normal": [47, 79, 86, 98, 99, 106], "normalize_wl": [47, 79, 86], "downsample_averag": [47, 79, 87, 106], "downsample_pick": [47, 79, 87], "downsample_max": [47, 79, 87, 106], "downsample_min": [47, 79, 87], "downsample_decim": [47, 79, 87], "welch_ttest": [47, 79, 88, 106], "student_ttest": [47, 79, 88], "ks_test": [47, 79, 88], "combinedtrac": [47, 65, 79, 81, 88, 89], "trace_set": [47, 79, 89, 96, 111], "traceset": [47, 66, 90, 91, 92, 93, 94, 95], "chipwhisperertraceset": [47, 90, 92], "hdf5": [47, 90, 96], "hdf5meta": [47, 90, 93], "hdf5traceset": [47, 90, 93], "inspector": [47, 90, 96], "samplecod": [47, 90, 94], "parser": [47, 90, 94], "inspectortraceset": [47, 90, 94], "pickl": [47, 90, 96, 99, 105, 108, 111], "pickletraceset": [47, 90, 95, 111], "correl": [48, 49, 65, 80, 84], "compute_intermediate_valu": [48, 49], "compute_correlation_trac": [48, 49], "plot_correl": [48, 49, 98], "recover_bit": [48, 49, 50, 99], "dom": [48, 50, 99], "compute_split_point": [48, 50], "split_trac": [48, 50], "calculate_difference_of_mean": [48, 50], "plot_difference_of_mean": [48, 50, 99], "num_arg": [48, 51], "ndarrai": [49, 65, 66, 80, 89], "dtype": [49, 60, 61, 62, 63, 89, 90, 94, 108], "typevar": 49, "scalartyp": 49, "bound": [49, 55, 108], "covari": 49, "guessed_scalar": [49, 50], "target_bit": [49, 50], "ct": 49, "recovered_scalar": [49, 50, 98, 99], "scalar_bit_length": [49, 50, 98, 99], "real_pub_kei": [49, 50, 98, 99], "one_trac": 50, "zero_trac": 50, "simul": [51, 96, 98, 104], "sdev": [51, 106], "www": [51, 97, 112], "youtub": 51, "watch": [51, 108], "safq55aiqpc": 51, "leak": [51, 106, 107, 109, 112], "itself": 51, "ham": [51, 102, 106], "distanc": [51, 57, 80], "engin": [52, 96], "build_tre": [52, 53, 55, 106], "p0": [52, 55, 106], "cfg_map": [52, 57], "codomain": [52, 57], "from_set": [52, 57, 104, 108], "from_io_map": [52, 57, 104, 108], "dedupl": [52, 57, 104, 108], "merg": [52, 57, 96], "describ": [52, 57, 97, 104, 106, 108], "dmap_index": [52, 57], "dmap_input": [52, 57, 104, 108], "ancestor": [52, 57], "anchestor": [52, 57], "descend": [52, 57], "height": [52, 57, 102, 103, 106, 107, 111], "is_leaf": [52, 57], "is_root": [52, 57], "iter_path_revers": [52, 57], "leav": [52, 57, 104, 107, 108], "separ": [52, 57, 97, 106], "sibl": [52, 57], "precis": [52, 57, 106], "render_bas": [52, 57, 106, 108], "inspir": [55, 58], "refin": [55, 112], "goubin": [55, 112], "count": [55, 60, 61, 62, 63, 68, 73, 94, 101, 107, 108], "rpa_point": 55, "lead": [55, 103, 108], "oracl": [55, 57, 104, 108], "tri": [55, 97, 106], "10": [55, 63, 68, 73, 94, 97, 98, 99, 102, 106, 108, 112], "major": [55, 106], "use_init": 55, "use_multipli": 55, "distinguish": [55, 57, 104, 106, 107], "encount": 55, "consid": [55, 101, 104, 106], "trivial": [55, 104], "queri": [55, 104, 106], "vote": [55, 106], "ideal": 55, "tool": [57, 72, 96], "________": 57, "o88": 57, "88888888o": 57, "8p": 57, "88888": 57, "8": [57, 63, 73, 84, 97, 98, 99, 103, 106], "d88": 57, "d8_88": 57, "d888888888": 57, "88888888": 57, "d8": 57, "8888": 57, "db": 57, "888888": 57, "888p": 57, "8888b": 57, "_": [57, 97, 98, 99, 101, 104, 106, 107, 108], "d888p": 57, "8888888b": 57, "888": 57, "8888888": 57, "here": [57, 105], "grow": 57, "p1": [57, 67, 68], "p2": [57, 67, 68], "p3": 57, "p4": 57, "p5": 57, "cfg1": 57, "cfg2": 57, "cfg3": 57, "datafram": 57, "column": 57, "simpli": 57, "row": [57, 106, 108], "gap": [57, 96], "To": [57, 68, 69, 73, 76, 94, 98, 99, 100, 101, 102, 104], "back": [57, 73, 108], "unord": 57, "nodemixin": 57, "dmap": [57, 104], "On": [57, 110], "detach": 57, "attach": 57, "anytre": [57, 104, 106, 108], "import": [57, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "rendertre": [57, 106, 108], "udo": 57, "marc": [57, 80], "lian": 57, "child": [57, 104, 108, 109], "refer": [57, 80, 97], "vanish": 57, "own": [57, 97], "duplic": 57, "onc": 57, "caus": [57, 108], "treeerror": 57, "traceback": 57, "most": [57, 68, 73, 80, 94], "cannot": [57, 108], "typo": 57, "pleas": 57, "releas": 57, "edg": [57, 107], "loui": 57, "soe": 57, "longest": 57, "leaf": [57, 108], "extern": [57, 67, 73], "lazi": 57, "down": [57, 104], "choos": [57, 107], "deepest": 57, "zero": [58, 67, 73, 105, 106, 108, 112], "ffd": [58, 112], "along": [58, 97, 103, 108], "belong": 58, "filter_nonhomo": [58, 108], "xonli": [58, 108], "factor": [58, 87, 104], "dlog": [58, 108], "discret": 58, "y1": [58, 97], "oscilloscop": [59, 60, 61, 62, 63, 96], "em": 59, "volt": [59, 60, 103], "open": [59, 60, 61, 62, 63, 96, 97, 99, 103, 108], "setup_frequ": [59, 60, 61, 62, 63, 103], "setup_channel": [59, 60, 61, 62, 63, 103], "setup_trigg": [59, 60, 61, 62, 63, 103], "setup_captur": [59, 60, 61, 62, 63, 103], "arm": [59, 60, 61, 62, 63, 103], "close": [59, 60, 61, 62, 63, 90, 93, 103], "prefix": [59, 63], "rang": [59, 60, 61, 62, 63, 98, 99, 103, 106, 107], "max_adc_valu": [59, 63], "min_adc_valu": [59, 63], "coupl": [59, 60, 61, 62, 63, 103], "time_unit": [59, 63], "get_vari": [59, 63, 103], "set_channel": [59, 63], "set_frequ": [59, 63], "set_buff": [59, 63], "frequenc": [59, 60, 61, 62, 63, 83, 94, 103], "pretrig": [59, 60, 61, 62, 63, 103], "posttrig": [59, 60, 61, 62, 63, 103], "timebas": [59, 63], "buffer": [59, 63, 68, 73, 94], "unit": 60, "setup": [60, 61, 62, 63, 105, 109, 110, 111], "request": [60, 61, 62, 63, 68, 73, 94], "adjust": [60, 61, 62, 63, 110], "next": [60, 61, 62, 63, 103], "best": [60, 61, 62, 63, 96], "hz": [60, 61, 62, 63], "voltag": [60, 61, 62, 63], "ac": [60, 61, 62, 63, 103], "dc": [60, 61, 62, 63, 103], "analog": [60, 61, 62, 63], "ad": [60, 61, 62, 63], "Not": [60, 61, 62, 63, 97, 104], "delai": [60, 61, 62, 63, 103], "fire": [60, 61, 62, 63], "tick": [60, 61, 62, 63], "condit": [60, 61, 62, 63, 65, 81, 96], "automat": [60, 61, 62, 63], "abov": [60, 61, 62, 63, 86, 96, 98, 99, 102, 106, 108, 109], "below": [60, 61, 62, 63, 80, 96, 97, 99, 101, 102, 106], "rise": [60, 61, 62, 63, 103], "fall": [60, 61, 62, 63], "clock": [60, 61, 62, 63], "listen": [60, 61, 62, 63], "block": [60, 61, 62, 63, 65], "numpi": [60, 61, 62, 63, 89, 96, 98, 99, 102, 105, 106, 107, 108], "lite": [61, 72, 103], "float16": [61, 90, 94], "picoscop": [62, 63, 96, 103], "brand": [62, 63], "altern": [62, 97], "pico": 62, "bind": 62, "seri": [62, 63], "3000": [62, 63, 99, 102], "4000": [62, 63], "5000": [62, 63, 103], "6000": [62, 63], "ps3000": [62, 63], "ps4000": [62, 63], "ps5000": [62, 63], "ps6000": [62, 63], "float32": [62, 63, 90, 94], "offici": 63, "picosdk": [63, 96], "wrapper": [63, 97], "ps3000lib": 63, "02": [63, 106], "05": [63, 99], "6": [63, 68, 73, 94, 97, 98, 99, 101, 103], "11": [63, 73, 97, 105, 106], "100": [63, 98, 99, 105, 106, 107, 108], "200": [63, 106], "13": [63, 68, 73, 94], "400": 63, "14": 63, "32767": 63, "c_short": 63, "api": [63, 97, 110], "ps3000a": 63, "ps3000alib": 63, "01": 63, "ps4000lib": 63, "32764": 63, "ps5000lib": 63, "32512": 63, "ps6000lib": 63, "dc_50": 63, "chunk_size_from_ratio": [64, 65], "traces_shap": [64, 65], "pearson_corr": [64, 65], "fromarrai": [64, 66], "fromtraceset": [64, 66], "wise": [65, 81, 86, 88], "cond": [65, 108], "standard": [65, 81, 86, 97, 98, 99, 106, 112], "deviat": [65, 81, 86, 98, 99, 106], "tpb": 65, "128": [65, 73, 98, 99, 102], "chunk_siz": [65, 108], "chunk_memory_ratio": 65, "stream_count": 65, "stack": 65, "gpu": 65, "thread": 65, "per": [65, 80, 106, 108], "trace_count": 65, "stream": [65, 71, 77], "element_s": 65, "item_s": 65, "chunk_item_count": 65, "intermediate_valu": 65, "output_count": 65, "cpu": [65, 96, 106], "calcul": [65, 98, 99], "pearson": 65, "coeffici": 65, "np": [65, 98, 99, 102, 105, 106, 107, 108], "corrcoef": 65, "rowvar": 65, "better": [65, 102, 108], "effici": [65, 97], "matrix": 65, "npt": 65, "1d": 65, "arrai": [65, 68, 73, 89, 94, 106, 107], "shape": [65, 98, 99], "metadata": [66, 89, 91, 93], "t0": [67, 68, 97], "t1": [67, 68, 97], "as_integer_ratio": [67, 68, 73, 90, 94], "bit_count": [67, 68, 73, 90, 94], "bit_length": [67, 68, 73, 90, 94], "conjug": [67, 68, 73, 90, 94], "from_byt": [67, 68, 73, 90, 94], "imag": [67, 68, 73, 90, 94], "real": [67, 68, 73, 90, 94, 104, 106], "to_byt": [67, 68, 73, 90, 94], "cl": [67, 68, 101], "ins": [67, 68], "ne": [67, 68], "sw": [67, 68, 73, 105], "atr": [67, 68, 69, 73, 76, 110], "send_apdu": [67, 68, 69, 73, 76], "sw_file_ful": [67, 68], "sw_unknown": [67, 68], "sw_cla_not_support": [67, 68], "sw_ins_not_support": [67, 68], "sw_correct_length_00": [67, 68], "sw_wrong_p1p2": [67, 68], "sw_incorrect_p1p2": [67, 68], "sw_record_not_found": [67, 68], "sw_file_not_found": [67, 68], "sw_func_not_support": [67, 68], "sw_wrong_data": [67, 68], "sw_applet_select_fail": [67, 68], "sw_command_not_allow": [67, 68], "sw_conditions_not_satisfi": [67, 68], "sw_data_invalid": [67, 68], "sw_file_invalid": [67, 68], "sw_security_status_not_satisfi": [67, 68], "sw_wrong_length": [67, 68], "sw_bytes_remaining_00": [67, 68], "sw_no_error": [67, 68], "keypair_loc": [67, 73], "keypair_remot": [67, 73], "keypair_both": [67, 73], "ins_alloc": [67, 73], "ins_clear": [67, 73], "ins_set": [67, 73], "ins_transform": [67, 73], "ins_gener": [67, 73], "ins_export": [67, 73], "ins_ecdh": [67, 73], "ins_ecdh_direct": [67, 73], "ins_ecdsa": [67, 73], "ins_ecdsa_sign": [67, 73], "ins_ecdsa_verifi": [67, 73], "ins_cleanup": [67, 73], "ins_allocate_ka": [67, 73], "ins_allocate_sig": [67, 73], "ins_get_info": [67, 73], "ins_set_dry_run_mod": [67, 73], "ins_buff": [67, 73], "ins_perform": [67, 73], "build_keypair": [67, 73], "build_keybuild": [67, 73], "export_tru": [67, 73], "export_fals": [67, 73], "from_bool": [67, 73], "mode_norm": [67, 73], "mode_dry_run": [67, 73], "base_221": [67, 73], "base_222": [67, 73], "alg_ec_f2m": [67, 73], "alg_ec_fp": [67, 73], "alg_ec_svdp_dh": [67, 73], "alg_ec_svdp_dh_kdf": [67, 73], "alg_ec_svdp_dhc": [67, 73], "alg_ec_svdp_dhc_kdf": [67, 73], "alg_ec_svdp_dh_plain": [67, 73, 110], "alg_ec_svdp_dhc_plain": [67, 73], "alg_ec_pace_gm": [67, 73], "alg_ec_svdp_dh_plain_xi": [67, 73], "alg_ecdsa_sha": [67, 73], "alg_ecdsa_sha_224": [67, 73], "alg_ecdsa_sha_256": [67, 73], "alg_ecdsa_sha_384": [67, 73], "alg_ecdsa_sha_512": [67, 73], "fullrandom": [67, 73], "onebyterandom": [67, 73], "ONE": [67, 73], "max": [67, 73, 98, 99, 107], "increment": [67, 73], "compress": [67, 73], "compress_hybrid": [67, 73], "mask_04": [67, 73], "hybrid": [67, 73], "secp112r1": [67, 73, 97], "secp128r1": [67, 73, 97, 100, 103, 105], "secp160r1": [67, 73, 97], "secp192r1": [67, 73, 97], "secp224r1": [67, 73, 97, 105], "secp256r1": [67, 73, 97, 105, 106, 109], "secp384r1": [67, 73], "secp521r1": [67, 73], "sect163r1": [67, 73], "sect233r1": [67, 73], "sect283r1": [67, 73], "sect409r1": [67, 73], "sect571r1": [67, 73], "fp": [67, 73], "f2m": [67, 73], "domain_fp": [67, 73], "domain_f2m": [67, 73], "resp": [67, 73], "get_index": [67, 73], "cla_ectest": [67, 73], "aid_prefix": [67, 73], "aid_current_vers": [67, 73], "aid_suffix_221": [67, 73], "aid_suffix_222": [67, 73], "aid_suffix_304": [67, 73], "select_applet": [67, 73, 110], "encode_paramet": [67, 73], "allocate_ka": [67, 73, 110], "allocate_sig": [67, 73], "alloc": [67, 73], "export": [67, 73], "ecdh_direct": [67, 73], "cleanup": [67, 73, 103], "info": [67, 73, 110], "run_mod": [67, 73], "card_pres": [67, 73, 76], "get_trac": [67, 75], "simulate_scalar_mult_trac": [67, 75, 98, 99], "simulate_ecdh_trac": [67, 75], "set_leakage_model": [67, 75], "from_raw": [67, 78], "apdu": [68, 69, 73, 76], "card": [68, 69, 73, 76, 110], "intenum": [68, 73, 94], "protocol": [68, 69, 72, 73, 76, 78, 94], "negoti": 68, "whose": [68, 73, 94], "exactli": [68, 73, 94, 97], "ones": [68, 73, 94], "popul": [68, 73, 94], "bin": [68, 73, 94, 106, 107, 109], "0b1101": [68, 73, 94], "necessari": [68, 73, 94, 111], "37": [68, 73, 94], "0b100101": [68, 73, 94], "complex": [68, 73, 94], "lowest": [68, 73, 94], "term": [68, 73, 94], "byteord": [68, 73, 94], "bytearrai": [68, 73, 94], "built": [68, 73, 94, 100, 104, 108], "nativ": [68, 73, 92, 94], "sy": [68, 73, 94, 105, 108], "complement": [68, 73, 94], "imaginari": [68, 73, 94], "overflowerror": [68, 73, 94], "determin": [68, 73, 94, 106], "answer": [68, 69, 73, 76, 104, 106], "aid": [68, 69, 73, 76], "applet": [68, 69, 73, 76, 110], "bunch": [68, 106, 107], "statu": 68, "word": 68, "27268": 68, "28416": 68, "28160": 68, "27904": 68, "27648": 68, "27392": 68, "27270": 68, "27267": 68, "27266": 68, "27265": 68, "27264": 68, "27033": 68, "27014": 68, "27013": 68, "27012": 68, "27011": 68, "27010": 68, "26368": 68, "24832": 68, "36864": 68, "smartcard": [69, 73, 76, 96], "pc": 69, "sc": 69, "person": [69, 96], "smart": 69, "reader": [69, 73, 110], "runnabl": 71, "framework": 72, "pro": 72, "programm": 72, "ish": [72, 78], "shiftableflag": 73, "instruct": 73, "INS": 73, "90": [73, 105, 106], "91": 73, "92": [73, 106], "93": 73, "94": [73, 97], "95": 73, "112": 73, "113": 73, "114": 73, "115": 73, "116": 73, "117": 73, "118": 73, "119": 73, "120": 73, "121": 73, "122": 73, "123": 73, "boolean": [73, 100], "255": [73, 102], "val": [73, 106], "mode": [73, 76, 105, 108], "170": 73, "187": 73, "javacard": [73, 110], "545": 73, "546": 73, "33": 73, "34": 73, "38": 73, "16": [73, 97, 106], "32": [73, 97, 102], "64": [73, 97, 106, 107, 108], "256": [73, 106, 112], "512": 73, "1024": 73, "125": 73, "126": 73, "384": 73, "511": 73, "sapplet": 73, "176": 73, "033": 73, "x94": 73, "latest_vers": 73, "count_back": 73, "older": 73, "latest": [73, 97], "successfulli": 73, "obj": 73, "ka_typ": 73, "sig_typ": 73, "key_length": 73, "key_class": 73, "appli": [73, 83, 86, 99, 102, 105, 107, 112], "what": [73, 82, 96, 97, 102], "inforespons": 73, "compat": [73, 93, 108, 110], "board": [73, 76, 103, 110], "num_of_trac": [75, 98, 99], "solo": 76, "consist": [78, 96, 101, 102, 109], "hexadecim": 78, "string": 78, "link": [78, 97, 112], "manipul": [79, 90], "with_sampl": [79, 89], "astyp": [79, 89], "reference_offset": 80, "reference_length": 80, "max_offset": 80, "min_correl": 80, "cross": 80, "being": 80, "mi": 80, "pick": [80, 87, 97, 104, 106, 108, 110], "minim": 80, "peak": [80, 84, 99, 106], "dist_func": 80, "max_dist": 80, "inf": 80, "sum": [80, 98, 99, 101, 104, 106, 108], "Of": 80, "maxim": [80, 108], "radiu": 80, "fast": [80, 97, 112], "fastdtw": [80, 96], "warp": 80, "jasper": 80, "van": 80, "woudenberg": 80, "witteman": 80, "bram": 80, "bakker": 80, "improv": [80, 108], "elast": 80, "pdf": [80, 97, 106, 108, 112], "semanticscholar": 80, "org": [80, 97, 112], "aceb": 80, "7c307098a414d7c384d6189226e4375cf02d": 80, "stan": 80, "salvador": 80, "philip": 80, "chan": 80, "toward": 80, "accur": 80, "linear": 80, "fit": [80, 82, 93, 96, 104], "edu": 80, "pkc": 80, "paper": [80, 112], "tdm04": 80, "tape": 82, "etc": 82, "inclus": 82, "exclus": 82, "much": 82, "symmetr": 82, "asymmetr": 82, "squeez": 82, "linearli": 82, "low": [83, 108, 111], "high": [83, 111, 112], "band": 83, "bandstop": 83, "sampling_frequ": [83, 90, 94], "cutoff": 83, "lowpass": [83, 111], "butterworth": 83, "highpass": [83, 111], "bandpass": 83, "passband": 83, "stopband": 83, "pattern": [84, 102], "larger": 84, "scipi": [84, 96, 98, 106], "signal": [84, 96, 103, 106], "find_peak": [84, 106], "promin": 84, "figur": 85, "fname": 85, "roll": [86, 99, 102], "shorten": 86, "divid": 86, "len": [86, 99, 101, 104, 105, 106, 107, 108, 111], "min_valu": 86, "max_valu": 86, "minimum": [86, 87, 98, 99], "downsampl": 87, "consecut": 87, "intersect": [87, 108], "decim": 87, "statist": 88, "usabl": [88, 105], "welch": 88, "student": 88, "first_set": 88, "second_set": 88, "dof": 88, "p_valu": 88, "vector": 88, "tvla": 88, "degre": 88, "freedom": 88, "samplewis": 88, "kolmogorov": 88, "smirnov": 88, "distribut": [88, 96, 107], "retyp": 89, "_supportsdtyp": 89, "supportsindex": 89, "_dtypedict": 89, "inplac": [90, 91, 92, 93, 94, 95], "append": [90, 93, 98, 99, 101, 104, 105, 106, 107, 108], "save": [90, 93, 94, 106], "int8": [90, 94], "int16": [90, 94, 108], "int32": [90, 94], "float8": [90, 94], "read_int": [90, 94], "read_bool": [90, 94], "read_float": [90, 94], "read_str": [90, 94], "write_int": [90, 94], "write_bool": [90, 94], "write_float": [90, 94], "write_str": [90, 94], "num_trac": [90, 94, 106], "num_sampl": [90, 94], "sample_cod": [90, 94], "data_spac": [90, 94], "title_spac": [90, 94], "global_titl": [90, 94], "x_offset": [90, 94], "x_label": [90, 94], "y_label": [90, 94], "x_scale": [90, 94], "y_scale": [90, 94], "trace_offset": [90, 94], "log_scal": [90, 94], "scope_rang": [90, 94], "scope_coupl": [90, 94], "scope_offset": [90, 94], "scope_imped": [90, 94], "scope_id": [90, 94], "filter_typ": [90, 94], "filter_frequ": [90, 94], "filter_rang": [90, 94], "external_clock": [90, 94], "external_clock_threshold": [90, 94], "external_clock_multipli": [90, 94], "external_clock_phase_shift": [90, 94], "external_clock_resampler_mask": [90, 94], "external_clock_resampler_en": [90, 94], "external_clock_frequencti": [90, 94], "external_clock_time_bas": [90, 94], "top": [93, 103, 104], "hierarch": 93, "fulli": [93, 106], "veri": [93, 95, 101, 108], "huge": [93, 101], "attr": 93, "picklabl": 93, "empti": 93, "_file": 93, "_order": 93, "riscur": [94, 96], "tr": 94, "18": [94, 97], "titl": 94, "thu": [95, 108], "py": [96, 105, 108], "thon": 96, "lliptic": 96, "urv": 96, "cryptographi": [96, 112], "hannel": 96, "nalysi": 96, "aim": 96, "fill": [96, 111], "sca": [96, 98, 99, 102, 103, 104, 106, 107, 108, 110, 111], "focus": [96, 104], "black": [96, 98, 99, 106], "box": 96, "extract": [96, 97], "through": [96, 109], "main": [96, 97, 107], "goal": 96, "abl": [96, 103, 106, 108, 109], "even": [96, 104, 106], "finit": 96, "detail": [96, 102], "million": [96, 111], "synthesi": 96, "embed": 96, "emul": 96, "acquisit": 96, "capabl": [96, 103], "cut": 96, "holoview": [96, 98, 99, 102, 103, 106, 107, 108, 111], "datashad": [96, 111], "core": [96, 97], "codegen": [96, 99, 100, 102, 103], "showcas": [96, 103, 104, 106, 108, 110], "document": [96, 97], "explor": [96, 101], "epa": [96, 112], "panda": [96, 108], "atpubl": 96, "asn1crypto": 96, "h5py": 96, "bokeh": [96, 98, 99, 102, 103, 106, 107, 108, 111], "matplotlib": [96, 98, 99, 105, 106, 108, 111], "xarrai": [96, 106, 108], "astunpars": 96, "numba": 96, "pyscard": 96, "faster": 96, "arithmet": [96, 97, 112], "cypari2": [96, 108], "explicit": [96, 112], "daniel": 96, "bernstein": [96, 112], "tanja": 96, "lang": 96, "partial": [96, 104, 106, 108], "chang": [96, 104, 106], "easier": 96, "croc": 96, "muni": 96, "proprietari": 96, "develop": [96, 97], "makefil": 96, "codestyl": 96, "pytest": 96, "mypi": 96, "flake8": 96, "coverag": 96, "interrog": 96, "pyinstrument": 96, "commit": [96, 97], "doc": [96, 97, 100, 101], "sphinx": 96, "autodoc": 96, "typehint": 96, "nbsphinx": 96, "paramlink": 96, "design": 96, "mit": 96, "copyright": 96, "2018": 96, "2023": 96, "jan": 96, "jancar": 96, "permiss": 96, "herebi": 96, "grant": 96, "free": 96, "charg": 96, "softwar": [96, 97], "deal": [96, 111], "restrict": [96, 97, 101, 104], "publish": 96, "sublicens": 96, "sell": 96, "permit": 96, "whom": 96, "furnish": 96, "subject": 96, "notic": 96, "shall": 96, "substanti": 96, "portion": 96, "THE": 96, "AS": 96, "warranti": 96, "OF": 96, "kind": 96, "OR": 96, "impli": 96, "BUT": 96, "NOT": 96, "TO": 96, "merchant": 96, "FOR": 96, "purpos": 96, "AND": 96, "noninfring": 96, "IN": 96, "NO": 96, "author": 96, "holder": 96, "BE": 96, "liabl": 96, "claim": 96, "damag": 96, "liabil": 96, "contract": 96, "tort": 96, "aris": 96, "WITH": 96, "thank": 96, "alot": 96, "contributor": 96, "toma": 96, "jusko": 96, "andrej": 96, "batora": 96, "vojtech": 96, "suchanek": 96, "newa": 96, "masaryk": 96, "univers": 96, "1707": 96, "look": [97, 101, 102, 106, 107, 108], "realli": [97, 105], "hard": [97, 108], "realiti": 97, "due": [97, 99, 101, 108], "mistak": 97, "ourselv": 97, "clearli": 97, "rule": 97, "architectur": 97, "tricki": 97, "taken": 97, "76": [97, 105], "tag": 97, "r1rv76": [97, 105], "bcgit": 97, "bc": [97, 105], "java": 97, "docs1": 97, "8on": 97, "html": [97, 101, 104, 105, 106, 107, 108], "more": [97, 102, 108], "exot": 97, "stuff": 97, "ecmqv": 97, "gost": 97, "250": 97, "glv": 97, "l2r": 97, "tau": 97, "jaobian": 97, "jacobian": [97, 104, 105, 108], "chudnovski": 97, "lambda": [97, 101, 104, 105, 106, 107, 108], "skew": 97, "custom": 97, "src": 97, "math": [97, 106], "sec": 97, "secg": [97, 100, 103, 105, 106, 109], "weirdli": 97, "curve25519": [97, 105], "mike": 97, "hamburg": 97, "eckeypairgener": 97, "generatekeypair": 97, "createbasepointmultipli": 97, "eccurv": 97, "fp_default_coord": 97, "secp": 97, "sect": 97, "unknown": 97, "jac": [97, 105], "deriv": 97, "ecdhbasicagr": 97, "calculateagr": 97, "ecpoint": 97, "getmultipli": 97, "createdefaultmultipli": 97, "ecdsasign": 97, "generatesignatur": 97, "multi": [97, 110], "shamir": 97, "trick": 97, "verifysignatur": 97, "ecalgorithm": 97, "sumoftwomultipl": 97, "generatepublickei": 97, "scalarmultbas": 97, "scalarmultbaseyz": 97, "niel": 97, "hwcd": 97, "xz": [97, 104, 105, 108], "scalarmultbaseencod": 97, "implsign": 97, "strau": 97, "implverifi": 97, "scalarmultstraus128var": 97, "bfa8369": 97, "googl": 97, "commondatastorag": 97, "googleapi": 97, "chromium": 97, "header": [97, 101, 104, 106, 107], "fiat": 97, "crypto": [97, 100, 101], "ec_gfp_nistp224_point_mul_bas": 97, "mul": [97, 107], "ec_gfp_nistp224_point_mul": 97, "p224": [97, 105], "ec_gfp_nistp256_point_mul_bas": 97, "ec_gfp_nistp256_point_mul": 97, "2007": [97, 104, 106, 107, 108, 109], "bl": [97, 104, 106, 107, 108, 109], "2001": 97, "ec_key_generate_kei": 97, "ec_point_mul_scalar_bas": 97, "meth": 97, "ec_gfp_mont_mul_bas": 97, "ec_gfp_mont_mul": 97, "ecdh_compute_kei": 97, "ec_point_mul_scalar": 97, "ecdsa_do_sign": 97, "ecdsa_sign_impl": 97, "ecdsa_do_verifi": 97, "ecdsa_do_verify_no_self_test": 97, "ec_point_mul_scalar_publ": 97, "mul_publ": 97, "mul_public_batch": 97, "interleav": 97, "exponenti": [97, 112], "ec_gfp_mont_mul_public_batch": 97, "x25519_keypair": 97, "x25519_public_from_priv": 97, "x25519_ge_scalarmult_bas": 97, "duif": 97, "x25519_scalar_mult": 97, "x25519_neon": 97, "x25519_scalar_mult_adx": 97, "x25519_scalar_mult_gener": 97, "ref10": 97, "ed25519_keypair": 97, "ed25519_keypair_from_se": 97, "ed25519_sign": 97, "ed25519_verifi": 97, "ge_double_scalarmult_vartim": 97, "randombit": 97, "net": 97, "handbook": [97, 112], "blind": 97, "fullprecomput": 97, "blinded_base_point_multipli": 97, "ec_point_base_point_precomput": 97, "1998": [97, 99, 100, 102, 103], "cmo": [97, 99, 100, 102, 103], "blinded_var_point_multipli": 97, "ec_point_var_point_precomput": 97, "1986": 97, "cc": 97, "ec_point_multi_point_precomput": 97, "multi_exp": 97, "curve25519_donna": 97, "103": 97, "v103": 97, "microsoft": 97, "192": [97, 98, 99], "numsp256t1": 97, "numsp384t1": 97, "numsp512t1": 97, "symcryptecpointgenericsetrandom": 97, "symcryptecpointscalarmul": 97, "symcryptecpointscalarmulfixedwindow": 97, "secur": 97, "symcryptecpointdoubl": 97, "tweak": 97, "symcryptshortweierstrassdoublespecializedam3": 97, "symcryptecpointadddiffnonzero": 97, "unsaf": 97, "symcryptshortweierstrassaddsidechannelunsaf": 97, "symcryptecpointadd": 97, "2008": 97, "symcrypttwistededwardsdoubl": 97, "symcrypttwistededwardsadd": 97, "symcrypttwistededwardsadddiffnonzero": 97, "symcryptecdhsecretagr": 97, "symcryptecdsasignex": 97, "symcryptecdsaverifi": 97, "symcryptecpointmultiscalarmul": 97, "symcryptecpointmultiscalarmulwnafwithinterleav": 97, "symcryptmontgomerypointscalarmul": 97, "1987": 97, "symcryptmontgomerydoubleandadd": 97, "v2": 97, "antonkueltz": 97, "readthedoc": 97, "en": 97, "offer": 97, "brainpool": 97, "get_public_kei": 97, "pointzz_pmul": 97, "schoolbook": 97, "pointzz_pshamirstrick": 97, "v1": 97, "kmackai": 97, "secp256k1": [97, 105], "coz": 97, "uecc_make_kei": 97, "eccpoint_compute_public_kei": 97, "eccpoint_mult": 97, "eprint": [97, 112], "iacr": [97, 112], "2011": 97, "338": 97, "uecc_shared_secret": 97, "uecc_sign": 97, "uecc_sign_with_k_intern": 97, "uecc_verifi": 97, "2021": [97, 112], "u": [97, 108], "overview": 97, "sm2": 97, "ecnr": 97, "ippsgfpecpublickei": 97, "gfec_mulbasepoint": 97, "gfec_base_point_mul": 97, "gfec_point_mul": 97, "mention": 97, "enhanc": 97, "doi": [97, 112], "1155": 97, "583926": 97, "ippsgfpecsharedsecretdh": 97, "gfec_mulpoint": 97, "ippsgfpecsigndsa": 97, "ippsgfpecverifydsa": 97, "gfec_basepointproduct": 97, "gfec_point_add": 97, "gfec_point_prod": 97, "mbx_x25519_public_kei": 97, "mbx_x25519": 97, "x25519_scalar_mul_du": 97, "mbx_ed25519_public_kei": 97, "ifma_ed25519_mul_basepoint": 97, "xy": 97, "zt": 97, "mb": 97, "flavor": 97, "fe52_add": 97, "fe52_sub": 97, "y3": 97, "fe52_mul": 97, "q": 97, "yaddx": 97, "z3": 97, "yplusx2": 97, "ysubx": 97, "yminisx2": 97, "t2d": 97, "t3": 97, "xy2d2": 97, "fe52_sqr": 97, "mbx_ed25519_sign": 97, "mbx_ed25519_verifi": 97, "ifma_ed25519_prod_point": 97, "ifma_ed25519_mul_point": 97, "v3": 97, "portabl": 97, "kmethod": 97, "ec_key_gen": 97, "ec_point_mul": 97, "mul_generator_ct": 97, "ec_gfp_simple_mul_generator_ct": 97, "ec_gfp_simple_mul_ct": 97, "v382": [97, 105], "compute_kei": 97, "mul_single_ct": 97, "ec_gfp_simple_mul_single_ct": 97, "sign_sig": 97, "ecdsa_sign_sig": 97, "ecdsa_sign_setup": 97, "sign_setup": 97, "verify_sig": 97, "ecdsa_verify_sig": 97, "mul_double_nonct": 97, "ec_gfp_simple_mul_double_nonct": 97, "ec_wnaf_mul": 97, "informatik": 97, "tu": 97, "darmstadt": 97, "de": 97, "ti": 97, "mitarbeit": 97, "moeller": 97, "multiexp": 97, "fastexp": 97, "libtom": 97, "ecc_make_kei": 97, "ecc_make_key_ex": 97, "ecc_ptmul": 97, "ltc_ecc_mulmod_tim": 97, "hnm": 97, "ltc_ecc_projective_dbl_point": 97, "ltc_ecc_projective_add_point": 97, "ecc_shared_secret": 97, "ecc_sign_hash": 97, "_ecc_sign_hash": 97, "ecc_verify_hash": 97, "_ecc_verify_hash": 97, "ecc_mul2add": 97, "x448": 97, "ed448": 97, "ec_method": 97, "ec_gfp_simple_method": 97, "ec_gfp_mont_method": 97, "ec_gfp_nist_method": 97, "ec_gfp_nistp224_method": 97, "ec_gfp_nistp256_method": 97, "ec_gfp_nistz256_method": 97, "ec_gfp_nistp521_method": 97, "ossl_ec_gfp_simple_ladder_pr": 97, "2002": 97, "ossl_ec_gfp_simple_ladder_step": 97, "mladd": [97, 105], "ossl_ec_gfp_simple_ladder_post": 97, "recoveri": 97, "evp_ec_gen": 97, "evp_pkey_q_keygen": 97, "evp_pkey_keygen": 97, "evp_pkey_gener": 97, "evp_keymgmt_util_gen": 97, "evp_keymgmt_gen": 97, "ec_keymgmt": 97, "gen": [97, 108], "ec_gen": 97, "ossl_ec_key_simple_generate_kei": 97, "null": 97, "ossl_ec_wnaf_mul": 97, "ossl_ec_scalar_mul_ladd": 97, "lopez": 97, "dahab": 97, "ec_point_ladder_pr": 97, "ladder_pr": 97, "ec_point_dbl": 97, "ec_point_ladder_step": 97, "ladder_step": 97, "ec_point_add": 97, "ec_point_ladder_post": 97, "ladder_post": 97, "ossl_ec_gfp_simple_ladder_": 97, "ladder_": 97, "ossl_ec_gfp_nistp224_points_mul": 97, "ossl_ec_gfp_nistp256_points_mul": 97, "ecp_nistz256_points_mul": 97, "sg14": [97, 112], "ossl_ec_gfp_nistp521_points_mul": 97, "z256": [97, 105], "z256a": [97, 105], "nistp": 97, "branch": 97, "nistz256": 97, "ossl_ecdsa_simple_verify_sig": 97, "ossl_x25519_public_from_priv": 97, "ge_scalarmult_bas": 97, "ge_p2": 97, "ge_p3": 97, "ge_p1p1": 97, "ge_precomp": 97, "2dxy": 97, "ossl_x25519": 97, "ossl_ed25519_public_from_priv": 97, "ossl_ed25519_sign": 97, "ossl_ed25519_verifi": 97, "hg": 97, "mozilla": 97, "ecmethod": 97, "ecgroup": 97, "ecgroup_consgfp": 97, "ecgroup_consgfp_mont": 97, "ecckiila": 97, "overrid": 97, "ec_newkei": 97, "ec_get_method_from_nam": 97, "ec_validatepublickei": 97, "ecdh_der": 97, "ecdsa_signdigest": 97, "ecdsa_signdigestwithse": 97, "ec_signdigestwithse": 97, "2013": 97, "816": 97, "ec_secp256r1_pt_mul": 97, "hacl_p256_dh_initi": 97, "point_mul_g": 97, "2015": [97, 98], "rcb": [97, 98], "ec_newkeyfromse": 97, "ec_points_mul": 97, "ecpoints_mul": 97, "points_mul": 97, "point_mul_two_secp384r1_wrap": 97, "point_mul_g_secp384r1_wrap": 97, "point_mul_g_secp384r1": 97, "fixed_smul_cmb": 97, "madd": [97, 105], "point_add_proj": 97, "regular": [97, 109], "point_mul_secp384r1_wrap": 97, "point_mul_secp384r1": 97, "var_smul_rwnaf": 97, "point_mul_two_secp384r1": 97, "var_smul_wnaf_two": 97, "ec_curve25519_pt_mul": 97, "ec_curve25519_mul": 97, "v0": 97, "bitcoin": 97, "schnorr": 97, "secp256k1_ec_pubkey_cr": 97, "secp256k1_ec_pubkey_create_help": 97, "secp256k1_ecmult_gen": 97, "bj": 97, "secp256k1_gej_add_g": 97, "No": 97, "decomposit": 97, "secp256k1_ecdh": 97, "secp256k1_ecmult_const": 97, "v040": [97, 105], "secp256k1_gej_doubl": 97, "secp256k1_ecdsa_sign": 97, "secp256k1_ecdsa_sign_inn": 97, "secp256k1_ecdsa_sig_sign": 97, "split": [97, 101, 104, 105, 108], "secp256k1_ecdsa_verifi": 97, "secp256k1_ecdsa_sig_verifi": 97, "secp256k1_ecmult": 97, "secp256k1_ecmult_strauss_wnaf": 97, "assum": [97, 104, 108, 110], "iz2": 97, "az": 97, "z_1": 97, "z12": 97, "u1": 97, "u2": 97, "s1": 97, "s2": 97, "y2": 97, "h": [97, 98, 99, 102, 106, 107, 108], "h2": 97, "h3": 97, "isomorph": 97, "git": 97, "lysat": 97, "liu": 97, "se": 97, "niss": 97, "p192": 97, "p256": [97, 106, 109], "p384": 97, "p521": 97, "curve448": 97, "ecdsa_generate_keypair": 97, "ecc_curv": 97, "mul_g": 97, "ecc_mul_g": 97, "ecc_ecdsa_sign": 97, "ecc_ecdsa_verifi": 97, "ecc_mul_a": 97, "ed25519_sha512_public_kei": 97, "_eddsa_public_kei": 97, "ecc_mul_g_eh": 97, "bbjlp": 97, "dup": 97, "ed25519_sha512_sign": 97, "_eddsa_sign": 97, "ed25519_sha512_verifi": 97, "_eddsa_verifi": 97, "mbed": 97, "tl": 97, "everest": 97, "mbedtls_ecdh_gen_publ": 97, "ecdh_gen_public_restart": 97, "mbedtls_ecp_mul_restart": 97, "ecp_mul_restartable_intern": 97, "ecp_mul_comb": 97, "322": [97, 105], "22": [97, 105, 108], "_alt": 97, "mbedtls_ecdh_compute_shar": 97, "ecdh_compute_shared_restart": 97, "smaller": [97, 101], "mbedtls_ecdsa_genkei": 97, "mbedtls_ecp_gen_keypair": 97, "mbedtls_ecp_gen_keypair_bas": 97, "mbedtls_ecp_mul": 97, "mbedtls_ecdsa_sign": 97, "mbedtls_ecdsa_sign_restart": 97, "mbedtls_ecdsa_verifi": 97, "mbedtls_ecdsa_verify_restart": 97, "mbedtls_ecp_muladd_restart": 97, "mbedtls_ecp_mul_shortcut": 97, "ecp_mul_mxz": 97, "jdk": 97, "21": 97, "ga": 97, "openjdk": 97, "secp256r1generatormultipli": 97, "generatekeypairimpl": 97, "ecprivatekeyimpl": 97, "calculatepublickei": 97, "ecoper": 97, "pointmultipli": 97, "v21": [97, 105], "rfc": 97, "7748": 97, "go1": 97, "golang": 97, "privatekeytopublickei": 97, "scalarbasemult": 97, "assembli": 97, "generatekei": 97, "generatenistec": 97, "randompoint": 97, "signasn1": 97, "signnistec": 97, "verifyasn1": 97, "verifynistec": 97, "x25519scalarmult": 97, "1214": [97, 105], "newkeyfromse": 97, "addaffin": 97, "similar": [97, 101, 105, 107], "subaffin": 97, "yplusx": 97, "yminusx": 97, "pp": [97, 108], "mm": 97, "tt2d": 97, "bo": 97, "coster": 97, "vartimedoublescalarbasemult": 97, "gnupg": 97, "manual": 97, "gcrypt": 97, "c25519": 97, "gcry_pk_genkei": 97, "_gcry_pk_genkei": 97, "ecc_gener": 97, "nist_generate_kei": 97, "_gcry_mpi_ec_mul_point": 97, "v1102": [97, 105], "gcry_pk_encrypt": 97, "_gcry_pk_encrypt": 97, "ecc_encrypt_raw": 97, "gcry_ecc_ecdsa_sign": 97, "_gcry_ecc_ecdsa_sign": 97, "gcry_ecc_ecdsa_verifi": 97, "_gcry_ecc_ecdsa_verifi": 97, "_gcry_ecc_eddsa_genkei": 97, "gcry_ecc_eddsa_sign": 97, "_gcry_ecc_eddsa_sign": 97, "gcry_ecc_eddsa_verifi": 97, "_gcry_ecc_eddsa_verifi": 97, "shuffl": 97, "gitweb": 97, "summari": 97, "implicitli": 97, "expos": 97, "unclear": 97, "br_ec_compute_pub": 97, "mulgen": 97, "v06": [97, 105], "br_ecdsa_": 97, "_sign_raw": 97, "_verify_raw": 97, "muladd": 97, "rfc7748": [97, 105], "demonstr": [98, 99, 102], "pyecsca": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111], "randint": [98, 99, 102], "hv": [98, 99, 102, 103, 106, 107, 108, 111], "mp": [98, 99], "pyplot": [98, 99, 105, 106, 108], "plt": [98, 99, 105, 106, 108], "stat": [98, 106], "constantinputwarn": 98, "filterwarn": 98, "extens": [98, 99, 102, 103, 106, 107, 108, 111], "0xd7d1247f": [98, 99, 102], "0xa4a44016": [98, 99, 102], "0x73f76716": [98, 99, 102], "0xd7d2a475": [98, 99, 102], "gx": [98, 99, 102, 106, 107, 108], "gy": [98, 99, 102, 106, 107, 108], "gz": [98, 99, 102], "0x54eed6d7": [98, 99, 102], "0x6f1e55ac": [98, 99, 102], "recov": [98, 99, 102], "secret_scalar": [98, 99], "229": [98, 99, 102], "000": [98, 99], "500": [98, 107], "generated_point": [98, 99], "generated_trac": [98, 99], "correct": [98, 99, 102, 104, 106, 110], "incorrect": [98, 99], "guess": [98, 99], "fourth": [98, 99], "sixth": [98, 99], "show": [98, 99, 105], "stongest": 98, "1100": [98, 99], "0000": [98, 99], "guess_on": [98, 99], "guess_zero": [98, 99], "224": [98, 99], "1110": [98, 99], "0100": [98, 99], "increas": [98, 99], "subsequ": [98, 99], "conveni": [98, 99], "subset": [98, 99, 104], "def": [98, 99, 101, 104, 105, 106, 107, 108], "select_random_sampl": [98, 99], "sample_point": [98, 99], "sample_trac": [98, 99], "selected_numb": [98, 99], "cpa_trac": 98, "sample_s": [98, 99], "scalar_length": [98, 99], "pub_kei": [98, 99], "domain_param": [98, 99], "sample_cpa": 98, "number_of_subset": [98, 99], "successes_rates_trac": [98, 99], "number_of_sampl": [98, 99], "result_object": [98, 99], "apply_async": [98, 99], "ylim": [98, 99], "xlabel": [98, 99, 107], "ylabel": [98, 99], "As": [98, 99, 108, 109], "now": [98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108], "know": [98, 99, 102, 103, 104], "amount": [98, 99, 101, 103, 106, 107], "normalize_trac": [98, 99], "min_val": [98, 99], "min": [98, 99, 107], "max_val": [98, 99], "scaled_sampl": [98, 99], "cpa_nois": 98, "successes_rates_nois": [98, 99], "noise_sd": [98, 99], "sd": [98, 99], "gaussian": [98, 99], "rainbow": [99, 102], "traceconfig": [99, 102], "2000": 99, "shown": 99, "locat": 99, "peek": 99, "dpa_trac": 99, "sample_dpa": 99, "dpa_nois": 99, "1600": 99, "gather": 99, "xbatora": 99, "traces_8bit": 99, "rb": [99, 108], "traces_emul": 99, "points_emul": 99, "max_length": 99, "misalign": 99, "stretched_trac": 99, "dpa_emul": 99, "visibl": [99, 109], "again": [99, 109], "rolling_mean_trac": 99, "microprocessor": 100, "get_arg": [100, 101], "dataclass": [100, 101], "tp": [100, 101], "__doc__": [100, 101], "hasattr": [100, 101], "enum_nam": [100, 101], "few": [100, 101, 104], "apart": 100, "randomli": 100, "elf_nam": [100, 102], "hex_nam": [100, 102], "cwd": [100, 102], "capture_output": 100, "10000": [100, 103], "join": [100, 102, 103, 107, 108], "priv": [100, 102, 103], "pub": [100, 102, 103], "And": [100, 103, 106], "resctrict": 101, "reason": [101, 109], "total": [101, 104, 105, 106, 107, 108], "independ": 101, "somewhat": 101, "no_indep": 101, "no_ff": 101, "keyword": 101, "independent_opt": 101, "1280": 101, "That": 101, "intern": 101, "detect": [101, 106], "correctli": [101, 102, 104], "ipython": [101, 104, 105, 106, 107, 108], "displai": [101, 103, 104, 105, 106, 107, 108], "tabul": [101, 104, 105, 106, 107, 108], "model_count": 101, "__class__": [101, 106, 107], "__name__": [101, 105, 106, 107, 108], "count_no_scl": 101, "count_no_opt": 101, "tablefmt": [101, 104, 106, 107], "firstrow": [101, 104, 106, 107], "let": [101, 104, 105, 106, 108], "coords_count": 101, "model_nam": 101, "sort": [101, 104, 108], "coords_nam": 101, "leaf_subclass": 101, "__subclasses__": 101, "mult_count": 101, "mult_cl": 101, "emulatortarget": 102, "basi": 102, "binascii": [102, 109], "hexlifi": [102, 109], "randbyt": 102, "regist": 102, "trace_config": 102, "ipynb": 102, "emulatorresult": 102, "mult_sm": 102, "pyecscaresult": 102, "seed_byt": 102, "pyecscapub": 102, "other_priv": [102, 109], "other_pub": 102, "shared_secret": 102, "mult_ecdh": 102, "ecdh_a": [102, 109], "ecdh_b": [102, 109], "ecdh_a_result": [102, 109], "ecdh_b_result": [102, 109], "text": [102, 105, 106], "signed_messag": 102, "text1": 102, "text2": 102, "our": [102, 108], "ledger": 102, "donjon": 102, "process_trac": 102, "transform_trac": 102, "opt": [102, 103, 107, 111], "950": [102, 103, 111], "600": [102, 103, 111], "analyz": [102, 106, 108], "gain": [102, 108], "smooth": [102, 105, 106, 108], "identifi": [102, 103], "spa_trac": 102, "repeat": 102, "sinc": 102, "repeadetli": 102, "knowledg": 102, "11100101": 102, "ufo": 103, "sma": 103, "plug": 103, "bnc": 103, "cabl": 103, "probe": 103, "tp2": 103, "Then": [103, 106, 111], "mhz": 103, "16m": 103, "chip": 103, "actual_frequ": 103, "6_400_000": 103, "500_000": 103, "15_500_000": 103, "tempfil": [103, 105, 108], "tmpdir": 103, "temporarydirectori": 103, "fw": 103, "sleep": 103, "prng": 103, "x12": 103, "x23": 103, "trig": 103, "delet": 103, "di": 103, "techniqu": [104, 106, 107, 108, 112], "tqdm": [104, 105, 106, 107, 108], "trang": [104, 106, 107, 108], "functool": [104, 106, 107, 108], "itertool": [104, 105, 108], "product": [104, 105, 108], "ntheori": 104, "factorint": 104, "crt": 104, "composit": 104, "phi": 104, "8286039438617044": 104, "dfb2da5e1b7bd7bb098cb975966293": 104, "d9c4372806e8131b18d0036e8f832749": 104, "bcae41be8e808acdc04bb769dead91e2": 104, "0e2f983c0f852bef381f567448f0d488": 104, "1599bba77ed1cb8dec41555098958492": 104, "10fcabd48fffc71e6300d44acc236157d": 104, "0001": 104, "633325621696952": 104, "cca6f6718a06cad7094962b2a35f067d": 104, "67aa9464eb493fbb7b509d29381b9a9d": 104, "cafc69aa517b654a6a608644996cc8d1": 104, "4c092beb06cc00751eec39675f680cb8": 104, "82800378a47dd6f26ff6a50f69e4c4e6": 104, "18a22d20b6de3ff6bdc49329c21163f77": 104, "8508806646440022": 104, "b3755d654bad73114e4191e9f5f36af9": 104, "9fe4f88cfbacba71f4b767ace8580c74": 104, "4610526fdcfbd69aed453ac2ee6efeef": 104, "542d8e0bbafe40dae36f25cbc350add6": 104, "68a65f5a5dc304bfd0d8fe963c250206": 104, "118a34a1ea295e78b3a3c960b6f680ee1": 104, "9845701775215489": 104, "subcurv": 104, "de1406450d5d7e91d81907956019c0c1": 104, "5fbe46b9f1086011e18f5d823c6110c": 104, "a859c36ceeadb39c7a978f7b1b0563e": 104, "1cba89c3f099c29401ecf3fe1806e822": 104, "345d7282a0114070be91f95fe3db1faa": 104, "0fcd24d24e57a40547814b6766b9ea735": 104, "980582605794486": 104, "cab298b495875d4ab2c8ee3eb03016a7": 104, "a7c4f56f286d9eae44424c85c8b2fcb9": 104, "5e8c439d939273fdcb5503acbda7d3f8": 104, "816c9f865c831223067a88046bf00d75": 104, "972ce29ed18d5d73f15cef31187659b": 104, "0b0e97ff8c3e72e7ae75eb3f5e759fe03": 104, "9547100843537808": 104, "f1a8a441b6d0e9600e33ccf16f9b8291": 104, "b3f55185bd6a63528e3d560c6a7b729a": 104, "c2fee2d65350e870eda0ac5e2b96b810": 104, "29b3e793822fad03a3c2ebca3cf62c12": 104, "b937d5389b6c5d0212d0f53e26843092": 104, "1153442389f9e1da8dd130bc93c6ef42b": 104, "7214369438844093": 104, "a4dfa4b6b065c40b45980474266c9fbb": 104, "2c3486e725755b44a7c119473c5b9c64": 104, "329078ab070fc18edc6ce53047e00a39": 104, "9f6209be91b66943d9e8e0b61c4aae4": 104, "05271c9ac628351b9add9e1be69a9fa4": 104, "0cef2e52ffe86ebc6dd323912ac7d9a87": 104, "4716485170445178": 104, "160": 104, "db49063db56b7783fa01dd62077c5a88dfa28009": 104, "aee572fdd4790bcd4729bb3b612b52a573df46e9": 104, "dab9e68366a593ca1df9cb2f20890a578729d6ef": 104, "d4a3aaf43bdb25be7c308b69ae54f639e6e32e8c": 104, "7b6c82140bb427ac6e2a64507f60775949b2c8c": 104, "34a9fbe62b272f930b2e5027780a32300feb0dd8f": 104, "guarante": 104, "subscalar": 104, "algo": 104, "random_scalar": 104, "randbelow": 104, "random_scalar_trivi": 104, "random_scalar_fully_trivi": 104, "fixed_point": 104, "random_point": 104, "res_x": 104, "res_i": 104, "project_down": 104, "onto": 104, "split_param": 104, "squarefre": 104, "p_i": 104, "parameters_i": 104, "curve_i": 104, "generator_i": 104, "params_i": 104, "factor_i": 104, "break": [104, 110], "split_scalarmult": 104, "partial_scalar": 104, "isinst": [104, 106, 107, 108], "With": 104, "behavior": [104, 108], "bytesio": [104, 108], "startswith": [104, 105, 107, 108], "formula_pair": 104, "fake_add": 104, "fake_dbl": 104, "fake_mult": 104, "simulate_t": 104, "fgcd": 104, "zip": [104, 108], "desc": [104, 105, 108], "precomp": [104, 107], "scalar_trivial_gcd": 104, "all_subscalars_trivial_gcd": 104, "tabl": [104, 105, 106, 107], "final": [104, 108], "pair_tabl": 104, "all_submultiples_invertible_z": 104, "result_invertible_z": 104, "result_correct": 104, "res_aff": 104, "pl": [104, 108], "simulate_epa_oracl": 104, "affine_param": [104, 108], "affine_point": [104, 106], "real_coord_nam": 104, "real_add_nam": 104, "real_dbl_nam": 104, "real_coord": 104, "real_add": 104, "real_dbl": 104, "real_mult": [104, 106], "epa_precomp": 104, "mult_factori": 104, "mult_class": 104, "30": [104, 106, 108], "formula_class": [104, 108], "klass": 104, "coord_nam": [104, 105, 108], "continu": [104, 108], "mapped_input": 104, "formula_group": [104, 108], "formula_combin": [104, 108], "epa_distinguish_precomp": 104, "current_nod": 104, "best_distinguishing_index": 104, "response_map": 104, "param_categori": [104, 108], "xyzz": [104, 108], "w12": [104, 108], "cfg_categori": [104, 108], "category_cfg": [104, 108], "category_map": [104, 108], "dmap_categori": [104, 108], "inspect": [105, 108], "concurr": [105, 106], "contextlib": [105, 108], "importlib": [105, 108], "import_modul": [105, 108], "invalidate_cach": [105, 108], "pathlib": [105, 108], "importlib_resourc": 105, "as_fil": 105, "neuromanc": [105, 108, 112], "sk": [105, 108, 112], "articl": [105, 108, 112], "enable_spawn": [105, 108], "getsourc": [105, 108], "namedtemporaryfil": [105, 108], "suffix": [105, 108], "flush": [105, 108], "stem": [105, 108], "yield": [105, 108], "getattr": [105, 108], "mont": 105, "te": 105, "ed25519": 105, "p256_jac3": 105, "p256_jac": 105, "p256_mod": 105, "p256_proj3": 105, "cryptograph": 105, "lib_formula_def": 105, "ok": [105, 108], "x25519": 105, "libressl": 105, "openssl": 105, "hacl": 105, "sunec": 105, "bearssl": 105, "libgcrypt": 105, "321": 105, "ipp": 105, "botan": 105, "lib_formula": 105, "base_path": 105, "joinpath": 105, "formula_def": 105, "op3": 105, "examin": [105, 106, 107, 108, 109], "compute_similar": 105, "iv": 105, "im_iv": 105, "im_out": 105, "assumption_str": 105, "lh": 105, "rh": 105, "sim": 105, "plot_similar": 105, "im_data": 105, "fig": [105, 106, 108], "ax": [105, 106, 108], "subplot": [105, 106, 108], "im": 105, "imshow": 105, "vmin": [105, 106], "cbar_ax": [105, 106], "add_ax": [105, 106], "04": 105, "cbar": [105, 106], "colorbar": [105, 106], "cax": [105, 106], "set_ylabel": [105, 106], "rotat": [105, 106], "va": [105, 106], "bottom": [105, 106], "set_xtick": 105, "arang": 105, "set_ytick": 105, "center": [105, 106, 107], "white": [105, 106], "analyze_formula": 105, "xz_ladder": 105, "xz_dbl": 105, "jac3_add": 105, "jac3_adds_fix": 105, "jac3_dbl": 105, "jac3_dbls_fix": 105, "mod_add": 105, "mod_dbl": 105, "jac_add": 105, "jac_dbl": 105, "proj3_add": 105, "proj3_dbl": 105, "ext_add": 105, "ext_dbl": 105, "swap": 105, "commut": 105, "parallel": [105, 108], "appropri": [105, 106], "expand_out": 105, "wb": [105, 108], "dump": [105, 108], "job": 105, "get_context": [105, 108], "expand_func": 105, "lib_add": 105, "lib_dbl": 105, "sw_": [105, 108], "_add": 105, "_dbl": 105, "counter": [106, 108], "xr": [106, 108], "lru_cach": 106, "bernoulli": 106, "auto": [106, 107], "levelordergroupit": 106, "eval": [106, 108], "eval_tree_symmetr": 106, "eval_tree_asymmetr": 106, "success_rate_symmetr": [106, 108], "success_rate_asymmetr": [106, 108], "query_rate_symmetr": [106, 108], "query_rate_asymmetr": [106, 108], "precise_rate_symmetr": [106, 108], "precise_rate_asymmetr": [106, 108], "amount_rate_symmetr": [106, 108], "amount_rate_asymmetr": [106, 108], "success_rate_vs_majority_symmetr": [106, 108], "success_rate_vs_majority_asymmetr": [106, 108], "success_rate_vs_query_rate_symmetr": [106, 108], "ipympl": [106, 108], "coordsaff": [106, 107, 108], "irrelev": 106, "0xc50de883f0e7b167": [106, 107, 108], "0x4833d7aa73fa6694": [106, 107, 108], "0xa6c44a61c5323f6a": [106, 107, 108], "0x5fd1f7d38d4f2333": [106, 107, 108], "0x21f43957d7e20ceb": [106, 107, 108], "0xc50de885003b80eb": [106, 107, 108], "p0_aff": 106, "0x1742befa24cd8a0d": 106, "among": [106, 107], "0b1000000000000000000000000000000000000000000000000": [106, 107], "0b1111111111111111111111111111111111111111111111111": [106, 107], "0b1010101010101010101010101010101010101010101010101": [106, 107], "0b1111111111111111111111110000000000000000000000000": [106, 107], "123456789123456789": [106, 107], "scarar": 106, "8750920244948492046": 106, "said": 106, "p0_target": 106, "108": 106, "kinv": 106, "unsafehtml": 106, "colalign": [106, 107], "relat": 106, "far": 106, "though": 106, "indistinguish": 106, "perspect": 106, "simulated_oracl": 106, "furthermor": 106, "noisy_oracl": 106, "flip": 106, "probabl": 106, "biased_oracl": 106, "measure_init": 106, "measure_multipli": 106, "respect": [106, 108], "stage": 106, "simulate_mult_id": 106, "init_point": 106, "init_par": 106, "did": 106, "init_zero": 106, "all_point": [106, 108], "multiply_par": 106, "multiply_zero": 106, "real_result": 106, "flip_proba": 106, "noisi": 106, "rv": 106, "flip_0": 106, "flip_1": 106, "bias": 106, "rough": 106, "presenc": 106, "num_cor": [106, 108], "satur": 106, "someth": [106, 109], "correct_r": [106, 108], "precise_r": [106, 108], "amount_r": [106, 108], "query_r": [106, 108], "num_tre": 106, "num_tri": [106, 108], "heatmap": 106, "rate": 106, "savefig": [106, 108], "rpa_re_success_rate_symmetr": 106, "bbox_inch": [106, 108], "tight": [106, 108], "rpa_re_query_rate_symmetr": 106, "rpa_re_precise_rate_symmetr": 106, "rpa_re_amount_rate_symmetr": 106, "scatter": 106, "rpa_re_scatter_symmetr": 106, "rpa_re_plot_symmetr": 106, "later": 106, "rpa_re_symmetr": 106, "nc": [106, 108], "bewar": 106, "6x": 106, "slower": 106, "becaus": 106, "dimens": 106, "instead": 106, "correct_rate_b": [106, 108], "precise_rate_b": [106, 108], "amount_rate_b": [106, 108], "query_rate_b": [106, 108], "rpa_re_success_rate_asymmetr": 106, "rpa_re_query_rate_asymmetr": 106, "rpa_re_precise_rate_asymmetr": 106, "rpa_re_amount_rate_asymmetr": 106, "rpa_re_plot_asymmetr": 106, "rpa_re_asymmetr": 106, "simulate_trac": [106, 107], "simulated_rpa_trac": 106, "turn": 106, "simulated_rpa_oracl": 106, "lm": [106, 107], "num_target": 106, "num_random": 106, "random_trac": 106, "target_trac": 106, "random_avg": 106, "target_avg": 106, "diff_trac": 106, "prop": 106, "remain": [106, 108], "influenc": 106, "aff": 106, "true_po": 106, "false_po": 106, "diff_real": 106, "diff_noth": 106, "false_neg": 106, "true_neg": 106, "threshold_rang": 106, "sdev_rang": 106, "traces_rang": 106, "40": 106, "60": 106, "70": 106, "80": 106, "e0": 106, "dataarrai": 106, "dim": 106, "e1": 106, "loc": 106, "ncol": 106, "sharei": 106, "res0": 106, "sel": 106, "vmax": 106, "cmap": 106, "plasma": 106, "add_colorbar": 106, "sval": 106, "2f": 106, "00": 106, "grei": 106, "lstrip": 106, "set_titl": 106, "e_0": 106, "sigma": [106, 112], "set_xlabel": 106, "res1": 106, "sdev_ramg": 106, "e_1": 106, "tight_layout": 106, "h_pad": 106, "rect": 106, "cbar_ymin": 106, "cbar_ymax": 106, "get_posit": 106, "ymin": 106, "ymax": 106, "145": 106, "77": 106, "yaxi": 106, "set_label_coord": 106, "rpa_re_error": 106, "nrow": 106, "var_rang": 106, "sharex": 106, "col": [106, 108], "var": 106, "set_ylim": 106, "rpa_re_errors_al": 106, "applic": [107, 109], "count_formula_act": 107, "precomp_add": 107, "precomp_dbl": 107, "precomp_trac": 107, "multiply_add": 107, "multiply_dbl": 107, "formula_count": 107, "multiply_trac": 107, "count_max": 107, "count_min": 107, "gram": 107, "freq": 107, "histogram": 107, "densiti": 107, "alpha": 107, "opert": 107, "elif": [107, 108, 109], "sm": 107, "pd": 108, "ff": 108, "zz": 108, "levelorderit": 108, "addition_chain": 108, "eliminate_i": 108, "eval_tree_symmetric1": 108, "eval_tree_asymmetric1": 108, "eval_tree_binomial1": 108, "success_rate_binomi": 108, "query_rate_binomi": 108, "amount_rate_binomi": 108, "precise_rate_binomi": 108, "spawn_context": 108, "cell": 108, "x_poli": 108, "y_poli": 108, "z_poli": 108, "switch": 108, "serv": 108, "depend": 108, "spec": 108, "0xddf438409fc35161": 108, "0x94d919b72f7dc6d8": 108, "0x9f39032abb23f62a": 108, "0xddf4383ffa8e6de7": 108, "0xd5673b3fe176fc6b": 108, "0x2d5b0a5bb2141317": 108, "0x1": 108, "0xa42c1467a1ed04f3": 108, "0x55d07340a4572f2d": 108, "0x0a938c37dfb0b6d5": 108, "0xa42c14689284d3a7": 108, "0x8633981c83ed43a2": 108, "0x7b5374e9d7997199": 108, "0xea0d9cead19016ab": 108, "0xcbbfe501c4ef6d92": 108, "0x5762de777a6d9178": 108, "0xea0d9cea8cd2c857": 108, "0xe7daa3e061c3111b": 108, "0x56ee59a6845c5e93": 108, "0x9c7e7216decb71a7": 108, "0x324ef48887401a87": 108, "0x3ce6f35a00280102": 108, "0x9c7e72175ebfe709": 108, "0x34683229b405418d": 108, "0x308c923cae004514": 108, "0xeb5779f0bbf1ef5b": 108, "0x2419e8bbc7b5f8f2": 108, "0xe74e5d3064a4f2e3": 108, "0xeb5779f21320c2e9": 108, "0x3b6c269560abeb00": 108, "0x29d157628e75e1c0": 108, "0x97b6ea097868b95d": 108, "0x550a41d65e4bcd13": 108, "0x47c5e527113b261c": 108, "0x97b6ea094947a76b": 108, "0x1e669fe19c865bd9": 108, "0x05a6bb891920440f": 108, "0xa00629e6522032f7": 108, "0x896f04a7ae302922": 108, "0x6bc03365b1f1cb50": 108, "0xa00629e5c03cf913": 108, "0x14b7b48954936d4e": 108, "0x670dc776273bf899": 108, "0xd47ec1d03a62686d": 108, "0xd00a3ee0f5c86b02": 108, "0x457a5b6c47db38d8": 108, "0xd47ec1d107db7d6f": 108, "0x41ebc3b763f3cd1b": 108, "0x3d6925f214620e0c": 108, "0xb1c9115c6f40d755": 108, "0x79d3ceefafc44ce9": 108, "0x8316af84264df42b": 108, "0xb1c9115d17f84a45": 108, "0x8b0a274089b53fe5": 108, "0x3508d33c4beba5ad": 108, "0x8f738fda18cd5dff": 108, "0x4747f2f9b8628cbf": 108, "0x586cdb9378a1389f": 108, "0x8f738fd8fc7ebed3": 108, "0x7ad306c73b64c1b5": 108, "0x69e3ca555190da4b": 108, "0xcfef393139c3007f": 108, "0xcfef393139c3007": 108, "0x950312812acb155f": 108, "0xcfef39320179387b": 108, "0xae2d2f58ca5b5cf7": 108, "0xc3a4bf3a1dc10005": 108, "0xb0461c0e4946cbd5": 108, "0xb0461c0e4946cbd4": 108, "0x082c3722016def51": 108, "0xb0461c0e07e3e1bf": 108, "0x5142200263be1fe3": 108, "0x14984b7551ed21a9": 108, "0xeff607c2dc4f278b": 108, "0xeff607c2dc4f278a": 108, "0x26fd03674f5092d2": 108, "0xeff607c30ab8c50d": 108, "0x004d4a5a9bb849f": 108, "0x80eb7ef89110c149": 108, "0xedc14fda51686379": 108, "0xedc14fda51686378": 108, "0xb3973a86901e3364": 108, "0xedc14fda0cdbc199": 108, "0xc76f0776feb59336": 108, "0x625adaf0fb44ab9f": 108, "0xfc6ee07288f1b78f": 108, "0xfc6ee07288f1b78": 108, "0xe18821a83ca2ca30": 108, "0xfc6ee0713e07f37f": 108, "0x339d01a4b0db428": 108, "0x68100d42e5ffd979": 108, "0xa03c03a0072f69b3": 108, "0xa03c03a0072f69b2": 108, "0x3208ecebb633b82c": 108, "0xa03c039ff31e37a7": 108, "0x8134208d53e6f6c0": 108, "0x6245db54032630a6": 108, "0xbc8c6e7ce26746d9": 108, "0xbc8c6e7ce26746d8": 108, "0xb7e2b4fb2d769c4": 108, "0xbc8c6e7ba032dda7": 108, "0x8e3c9cd771e7ffd8": 108, "0x4dd02403ca890c5a": 108, "0x9ccda4c062b95787": 108, "0x9ccda4c062b95786": 108, "0x31fcbb278951e3b9": 108, "0x9ccda4bfae73e4f5": 108, "0x303ac583c81644e3": 108, "0x76713f6f470e94a0": 108, "0xa339e3745518416f": 108, "0xa339e3745518416": 108, "0x52d39a67f2401673": 108, "0xa339e3743950389b": 108, "0x6b8986f706afac58": 108, "0x5c901b1afa0b64da": 108, "0x8b7d2baee4e47311": 108, "0x8b7d2baee4e47310": 108, "0x21ab23afb5a9e2ca": 108, "0x8b7d2baf201f2bdd": 108, "0x797c1dec0d73ec64": 108, "0x28f90926ea9c6b33": 108, "0x8d79ca36cee026a7": 108, "0x8d79ca36cee026a4": 108, "0x0478c1f80ce2c9c6": 108, "0x8d79ca35a428c76f": 108, "0x2e94a3e38f8b345": 108, "0x83e6c6f0cb8f69c4": 108, "0x48e1a125250323a7": 108, "0x48e1a125250323a4": 108, "0x02a4d99f41d23210": 108, "0x48e1a124f895db6d": 108, "0x409e15d65fcae55a": 108, "0x207e142056d62d07": 108, "0xcb5aa8a7a10aa06b": 108, "0xcb5aa8a7a10aa068": 108, "0x31fe9c57c570174f": 108, "0xcb5aa8a6cf812191": 108, "0x84c75d46fc687ff1": 108, "0x7424362ac73df187": 108, "0xba965ca9c8aa0a1b": 108, "0xba965ca9c8aa0a18": 108, "0x676535a1eaf5c605": 108, "0xba965caae5741b6f": 108, "0x313d58c47b8ed95f": 108, "0x991ba98cbbb0fe9f": 108, "0xbfb7747454a17d15": 108, "0xbfb7747454a17d12": 108, "0x611b69881db4ce69": 108, "0xbfb7747547fd57d3": 108, "0x3385044d698640fc": 108, "0x50cee623251b559": 108, "0x99235f1ed44b3959": 108, "0x99235f1ed44b3956": 108, "0x5d8dda19dbe804d4": 108, "0x99235f1d975f376d": 108, "0x4fed262974c1d800": 108, "0x27590c454edd59ca": 108, "0xa7ff74a0dc8c161d": 108, "0xa7ff74a0dc8c161a": 108, "0x583b968bb611b284": 108, "0xa7ff74a06811ee75": 108, "0x5f5c76454edf12e7": 108, "0x4c73cbfc44f41508": 108, "0xb52c62ca8703a063": 108, "0xb52c62ca8703a060": 108, "0x0baec43a07b54c21": 108, "0xb52c62c963037121": 108, "0x6fe4a521a29bc1ab": 108, "0x3fca7180021f8f0f": 108, "0xb8921f25b6ce5267": 108, "0xb8921f25b6ce5264": 108, "0xa575c9f97563265d": 108, "0xb8921f2592b6b39f": 108, "0x7eb120fada47765c": 108, "0x64ef4e51d4159304": 108, "0xc591b8c4df0afc19": 108, "0xc591b8c4df0afc16": 108, "0x0a1eb46a6e647f0a": 108, "0xc591b8c3eb07239f": 108, "0x1963bfb862cb0bf3": 108, "0x30da8bb7fa77277d": 108, "0xceaf446a53f14bc1": 108, "0x0000000000000000": 108, "0x326539376260f173": 108, "0xceaf446aae275419": 108, "0x98fe44948c3f8678": 108, "0x3d440ee959a912d7": 108, "0xb3c2beca75d66de3": 108, "0x46069225826b51aa": 108, "0xb3c2bec95881b695": 108, "0x81500c226efa0d5a": 108, "0x674e09d296452ee": 108, "0xd6097c1ce207aae7": 108, "0x7adaab54e7dfd564": 108, "0xd6097c1b407eb413": 108, "0x151da8fb1f83201": 108, "0x8bfeb90ec1177a91": 108, "0x97a3e2d617a2309d": 108, "0x7f311cba46652247": 108, "0x97a3e2d712ffd715": 108, "0x46d725812af15870": 108, "0x727f88365dbd0e80": 108, "0xd8d7f39f545a5da7": 108, "0x09097ddcd4be8d55": 108, "0xd8d7f3a0c4115b4b": 108, "0xc5c771a9827a3251": 108, "0x64bf52041ac05b23": 108, "0x847de883ab4fbf4d": 108, "0x09866366b3b45c2d": 108, "0x847de8837e6d4477": 108, "0x62fd7b4bc7c9acb4": 108, "0x2d0942774607106b": 108, "0xf0d617c3c47b7c77": 108, "0xd856b3dcb95764a2": 108, "0xf0d617c5512cec85": 108, "0xeaf9b352a3daac45": 108, "0x4e4e557f9fc3febc": 108, "0xce920b656c80b373": 108, "0xb4a07dfae71ddc62": 108, "0xce920b65eee38015": 108, "0x7895c02b3c5205b5": 108, "0x2926be6446b98d62": 108, "0xb6d4e25f76cc9df7": 108, "0x18e95a2283692623": 108, "0xb6d4e25ea270ed03": 108, "0x2da7a97d5d899bc5": 108, "0x17d27fd34562e3d9": 108, "0xe7cd1979ebed69": 108, "0x278e92b83191a7da": 108, "0xe7cd197966893365": 108, "0xc4de44402da5b9a6": 108, "0x2b45e7f32e3701ba": 108, "issu": 108, "0x9d9119957f02fe3f": 108, "0x0106903196d88df9": 108, "0x9d9119957f02fe40": 108, "0x191a36b9cd81de96": 108, "0x10f2c6bded391aa9": 108, "0x2": 108, "0x95913fae9065da0f": 108, "0x5eeddeee7152d6fb": 108, "0x276446655fc0bf9": 108, "0b1111110": 108, "0b1011101": 108, "0b110110": 108, "0b100100": 108, "0b1000110": 108, "0b1001101": 108, "0b101001": 108, "0b1100100": 108, "0b1010110": 108, "0b101010": 108, "scalar_map": 108, "chain_map": 108, "load_expand": 108, "expanded_path": 108, "xonly_fset": 108, "compute_fset": 108, "fh": 108, "xo": 108, "fset": 108, "todo": 108, "investig": 108, "plai": 108, "new_fset": 108, "free_symbol": 108, "endswith": 108, "factor_set": 108, "got": 108, "previous": 108, "sure": 108, "least": 108, "solut": 108, "coord_add": 108, "coord_dbl": 108, "add_polynomi": 108, "dbl_polynomi": 108, "unneccessari": 108, "dcp": 108, "solv": 108, "extra": 108, "cysign": 108, "usag": 108, "all_points_filt": 108, "dk": 108, "ks_mod": 108, "only_1": 108, "only_2": 108, "substitut": 108, "params_name_match": 108, "params_categori": 108, "incomplet": 108, "erron": 108, "step": 108, "remapped_hit_point_map": 108, "remapped_count_point_map": 108, "remapped_position_point_map": 108, "lp": 108, "lc": 108, "entri": 108, "all_points_list": 108, "remap_spawn": 108, "param_map": 108, "points_map": 108, "scalars_map": 108, "unit_scal": 108, "counts_row": 108, "positions_row": 108, "hit_set": 108, "hit_map": 108, "count_map": 108, "position_map": 108, "pp_tupl": 108, "remmap": 108, "wrap": 108, "dmap_remap": 108, "dmap_dedup": 108, "tree_categori": 108, "tree_remap": 108, "further": 108, "enginn": 108, "dmap_count": 108, "tree_count": 108, "dmap_posit": 108, "tree_posit": 108, "nzero": 108, "zvp_re_symmetr": 108, "zvp_re_success_rate_symmetr": 108, "zvp_re_precise_rate_symmetr": 108, "zvp_re_query_rate_symmetr": 108, "zvp_re_amount_rate_symmetr": 108, "zvp_re_scatter_symmetr": 108, "zvp_re_plot_symmetr": 108, "zvp_re_asymmetr": 108, "zvp_re_success_rate_asymmetr": 108, "zvp_re_precise_rate_asymmetr": 108, "zvp_re_query_rate_asymmetr": 108, "zvp_re_amount_rate_asymmetr": 108, "zvp_re_plot_asymmetr": 108, "correct_rate_c": 108, "precise_rate_c": 108, "amount_rate_c": 108, "query_rate_c": 108, "zvp_re_binomi": 108, "zvp_re_success_rate_binomi": 108, "zvp_re_precise_rate_binomi": 108, "zvp_re_query_rate_binomi": 108, "zvp_re_amount_rate_binomi": 108, "fset_map": 108, "fset_nonhomo_map": 108, "factor_sets_nonhomo": 108, "fset_nonhomo": 108, "factor_sets_extend": 108, "factor_sets_nonhomo_extend": 108, "unfilit": 108, "dmap_fset": 108, "tree_fset": 108, "dmap_fset_nonhomo": 108, "tree_fset_nonhomo": 108, "nfactor": 108, "unfilt": 108, "unus": 108, "abil": 108, "howev": 108, "closer": 108, "never": 108, "preorderit": 108, "rev_point_map": 108, "params_cat": 108, "poly_set": 108, "polys_map": 108, "mapd": 108, "as_expr": 108, "factor_list": 108, "true_formula": 108, "kvar": 108, "nok": 108, "lf": 108, "cd": 108, "bar": 108, "del": 108, "nullcontext": 109, "reli": 109, "keygen_ctx": 109, "sign_ctx": 109, "verify_ctx": 109, "other_publ": 109, "ecdh_ctx": 109, "multupl": 109, "fact": 109, "easili": 109, "exploit": 109, "ecdh_act": 109, "subtre": 109, "scalarmult_act": 109, "recovered_priv": 109, "formula_cal": 109, "navig": 109, "But": 110, "smartleia": 110, "line": 110, "sl": 110, "fromhex": 110, "73696d706c656170706c6574": 110, "linux": 110, "pcsclite": 110, "servic": 110, "gemalto": 110, "example_trac": 111, "interact": 111, "session": 111, "would": 111, "12_500_000": 111, "50_000": 111, "2_250_000": 111, "hyperellipt": 112, "guid": 112, "springer": 112, "book": 112, "1007": 112, "b97644": 112, "hyper": 112, "hac": 112, "cacr": 112, "uwaterloo": 112, "ca": 112, "disast": 112, "2017": 112, "627": 112, "cryptosystem": 112, "fr": 112, "10958513_17": 112, "procedur": 112, "540": 112, "36288": 112, "6_17": 112, "approach": 112, "1595": 112, "mt1991": 112, "mazur": 112, "tate": 112, "1991": 112, "adic": 112, "duke": 112, "mathemat": 112, "journal": 112, "663": 112, "688": 112, "jean": 112, "s\u00e9bastien": 112, "chapter": 112, "48059": 112, "5_25": 112, "djb02": 112, "pippeng": 112, "cr": 112, "yp": 112, "shai": 112, "gueron": 112, "vlad": 112, "krasnov": 112, "s13389": 112, "014": 112, "0090": 112, "andrew": 112, "macsorlei": 112, "speed": 112}, "objects": {"pyecsca": [[0, 0, 0, "-", "codegen"], [6, 0, 0, "-", "ec"], [43, 0, 0, "-", "misc"], [47, 0, 0, "-", "sca"]], "pyecsca.codegen": [[1, 0, 0, "-", "builder"], [2, 0, 0, "-", "client"], [3, 0, 0, "-", "common"], [4, 0, 0, "-", "render"], [5, 0, 0, "-", "templates"]], "pyecsca.codegen.client": [[2, 1, 1, "", "DeviceTarget"], [2, 1, 1, "", "HostTarget"], [2, 5, 1, "", "cmd_debug"], [2, 5, 1, "", "cmd_ecdh"], [2, 5, 1, "", "cmd_ecdsa_sign"], [2, 5, 1, "", "cmd_ecdsa_verify"], [2, 5, 1, "", "cmd_generate"], [2, 5, 1, "", "cmd_init_prng"], [2, 5, 1, "", "cmd_scalar_mult"], [2, 5, 1, "", "cmd_set_params"], [2, 5, 1, "", "cmd_set_privkey"], [2, 5, 1, "", "cmd_set_pubkey"], [2, 5, 1, "", "cmd_set_trigger"]], "pyecsca.codegen.client.DeviceTarget": [[2, 2, 1, "", "connect"], [2, 3, 1, "", "coords"], [2, 2, 1, "", "debug"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "ecdh"], [2, 2, 1, "", "ecdsa_sign"], [2, 2, 1, "", "ecdsa_verify"], [2, 2, 1, "", "flash"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "init_prng"], [2, 3, 1, "", "model"], [2, 3, 1, "", "params"], [2, 3, 1, "", "privkey"], [2, 3, 1, "", "pubkey"], [2, 2, 1, "", "quit"], [2, 2, 1, "", "read"], [2, 2, 1, "", "recv_msgs"], [2, 2, 1, "", "reset"], [2, 2, 1, "", "scalar_mult"], [2, 3, 1, "", "seed"], [2, 2, 1, "", "send_cmd"], [2, 2, 1, "", "set_params"], [2, 2, 1, "", "set_privkey"], [2, 2, 1, "", "set_pubkey"], [2, 2, 1, "", "set_trigger"], [2, 3, 1, "", "timeout"], [2, 3, 1, "", "trigger"], [2, 2, 1, "", "write"]], "pyecsca.codegen.client.DeviceTarget.flash.params": [[2, 4, 1, "", "fw_path"]], "pyecsca.codegen.client.DeviceTarget.read.params": [[2, 4, 1, "", "num"], [2, 4, 1, "", "timeout"]], "pyecsca.codegen.client.DeviceTarget.recv_msgs.params": [[2, 4, 1, "", "timeout"]], "pyecsca.codegen.client.DeviceTarget.send_cmd.params": [[2, 4, 1, "", "cmd"], [2, 4, 1, "", "timeout"]], "pyecsca.codegen.client.DeviceTarget.write.params": [[2, 4, 1, "", "data"]], "pyecsca.codegen.client.HostTarget": [[2, 3, 1, "", "binary"], [2, 2, 1, "", "connect"], [2, 3, 1, "", "coords"], [2, 2, 1, "", "debug"], [2, 3, 1, "", "debug_output"], [2, 2, 1, "", "disconnect"], [2, 2, 1, "", "ecdh"], [2, 2, 1, "", "ecdsa_sign"], [2, 2, 1, "", "ecdsa_verify"], [2, 2, 1, "", "generate"], [2, 2, 1, "", "init_prng"], [2, 3, 1, "", "model"], [2, 3, 1, "", "params"], [2, 3, 1, "", "privkey"], [2, 3, 1, "", "process"], [2, 3, 1, "", "pubkey"], [2, 2, 1, "", "quit"], [2, 2, 1, "", "read"], [2, 2, 1, "", "recv_msgs"], [2, 2, 1, "", "scalar_mult"], [2, 3, 1, "", "seed"], [2, 2, 1, "", "send_cmd"], [2, 2, 1, "", "set_params"], [2, 2, 1, "", "set_privkey"], [2, 2, 1, "", "set_pubkey"], [2, 2, 1, "", "set_trigger"], [2, 3, 1, "", "timeout"], [2, 3, 1, "", "trigger"], [2, 2, 1, "", "write"]], "pyecsca.codegen.client.HostTarget.read.params": [[2, 4, 1, "", "num"], [2, 4, 1, "", "timeout"]], "pyecsca.codegen.client.HostTarget.recv_msgs.params": [[2, 4, 1, "", "timeout"]], "pyecsca.codegen.client.HostTarget.send_cmd.params": [[2, 4, 1, "", "cmd"], [2, 4, 1, "", "timeout"]], "pyecsca.codegen.client.HostTarget.write.params": [[2, 4, 1, "", "data"]], "pyecsca.codegen.common": [[3, 1, 1, "", "DeviceConfiguration"], [3, 1, 1, "", "Platform"], [3, 5, 1, "", "wrap_enum"]], "pyecsca.codegen.common.DeviceConfiguration": [[3, 3, 1, "", "coords"], [3, 3, 1, "", "defines"], [3, 3, 1, "", "ecdh"], [3, 3, 1, "", "ecdsa"], [3, 3, 1, "", "formulas"], [3, 3, 1, "", "hash_type"], [3, 3, 1, "", "inv"], [3, 3, 1, "", "keygen"], [3, 3, 1, "", "mod_rand"], [3, 3, 1, "", "model"], [3, 3, 1, "", "mult"], [3, 3, 1, "", "platform"], [3, 3, 1, "", "red"], [3, 3, 1, "", "scalarmult"], [3, 3, 1, "", "sqr"]], "pyecsca.codegen.common.Platform": [[3, 3, 1, "", "HOST"], [3, 3, 1, "", "NANO"], [3, 3, 1, "", "STM32F0"], [3, 3, 1, "", "STM32F3"], [3, 3, 1, "", "XMEGA"]], "pyecsca.codegen.render": [[4, 5, 1, "", "build"], [4, 5, 1, "", "render"], [4, 5, 1, "", "render_and_build"]], "pyecsca.codegen.render.build.params": [[4, 4, 1, "", "dir"], [4, 4, 1, "", "elf_file"], [4, 4, 1, "", "hex_file"], [4, 4, 1, "", "outdir"], [4, 4, 1, "", "remove"], [4, 4, 1, "", "strip"]], "pyecsca.codegen.render.render.params": [[4, 4, 1, "", "config"]], "pyecsca.codegen.render.render_and_build.params": [[4, 4, 1, "", "config"], [4, 4, 1, "", "outdir"], [4, 4, 1, "", "remove"], [4, 4, 1, "", "strip"]], "pyecsca.ec": [[7, 0, 0, "-", "configuration"], [8, 0, 0, "-", "context"], [9, 0, 0, "-", "coordinates"], [10, 0, 0, "-", "curve"], [11, 0, 0, "-", "divpoly"], [12, 0, 0, "-", "error"], [13, 0, 0, "-", "formula"], [25, 0, 0, "-", "key_agreement"], [26, 0, 0, "-", "key_generation"], [27, 0, 0, "-", "mod"], [28, 0, 0, "-", "model"], [29, 0, 0, "-", "mult"], [37, 0, 0, "-", "op"], [38, 0, 0, "-", "params"], [39, 0, 0, "-", "point"], [40, 0, 0, "-", "scalar"], [41, 0, 0, "-", "signature"], [42, 0, 0, "-", "transformations"]], "pyecsca.ec.configuration": [[7, 1, 1, "", "Configuration"], [7, 1, 1, "", "EnumDefine"], [7, 1, 1, "", "HashType"], [7, 1, 1, "", "Inversion"], [7, 1, 1, "", "Multiplication"], [7, 1, 1, "", "RandomMod"], [7, 1, 1, "", "Reduction"], [7, 1, 1, "", "Squaring"], [7, 5, 1, "", "all_configurations"]], "pyecsca.ec.configuration.Configuration": [[7, 3, 1, "", "coords"], [7, 3, 1, "", "formulas"], [7, 3, 1, "", "hash_type"], [7, 3, 1, "", "inv"], [7, 3, 1, "", "mod_rand"], [7, 3, 1, "", "model"], [7, 3, 1, "", "mult"], [7, 3, 1, "", "red"], [7, 3, 1, "", "scalarmult"], [7, 3, 1, "", "sqr"]], "pyecsca.ec.configuration.EnumDefine": [[7, 2, 1, "", "names"], [7, 2, 1, "", "values"]], "pyecsca.ec.configuration.HashType": [[7, 3, 1, "", "NONE"], [7, 3, 1, "", "SHA1"], [7, 3, 1, "", "SHA224"], [7, 3, 1, "", "SHA256"], [7, 3, 1, "", "SHA384"], [7, 3, 1, "", "SHA512"]], "pyecsca.ec.configuration.Inversion": [[7, 3, 1, "", "EULER"], [7, 3, 1, "", "GCD"]], "pyecsca.ec.configuration.Multiplication": [[7, 3, 1, "", "BASE"], [7, 3, 1, "", "COMBA"], [7, 3, 1, "", "KARATSUBA"], [7, 3, 1, "", "TOOM_COOK"]], "pyecsca.ec.configuration.RandomMod": [[7, 3, 1, "", "REDUCE"], [7, 3, 1, "", "SAMPLE"]], "pyecsca.ec.configuration.Reduction": [[7, 3, 1, "", "BARRETT"], [7, 3, 1, "", "BASE"], [7, 3, 1, "", "MONTGOMERY"]], "pyecsca.ec.configuration.Squaring": [[7, 3, 1, "", "BASE"], [7, 3, 1, "", "COMBA"], [7, 3, 1, "", "KARATSUBA"], [7, 3, 1, "", "TOOM_COOK"]], "pyecsca.ec.configuration.all_configurations.params": [[7, 4, 1, "", "kwargs"]], "pyecsca.ec.context": [[8, 1, 1, "", "Action"], [8, 1, 1, "", "Context"], [8, 1, 1, "", "DefaultContext"], [8, 1, 1, "", "PathContext"], [8, 1, 1, "", "ResultAction"], [8, 1, 1, "", "Tree"], [8, 5, 1, "", "local"]], "pyecsca.ec.context.Action": [[8, 3, 1, "", "inside"]], "pyecsca.ec.context.Context": [[8, 2, 1, "", "enter_action"], [8, 2, 1, "", "exit_action"]], "pyecsca.ec.context.Context.enter_action.params": [[8, 4, 1, "", "action"]], "pyecsca.ec.context.Context.exit_action.params": [[8, 4, 1, "", "action"]], "pyecsca.ec.context.DefaultContext": [[8, 3, 1, "", "actions"], [8, 3, 1, "", "current"], [8, 2, 1, "", "enter_action"], [8, 2, 1, "", "exit_action"]], "pyecsca.ec.context.DefaultContext.enter_action.params": [[8, 4, 1, "", "action"]], "pyecsca.ec.context.DefaultContext.exit_action.params": [[8, 4, 1, "", "action"]], "pyecsca.ec.context.PathContext": [[8, 3, 1, "", "current"], [8, 3, 1, "", "current_depth"], [8, 2, 1, "", "enter_action"], [8, 2, 1, "", "exit_action"], [8, 3, 1, "", "path"], [8, 3, 1, "", "value"]], "pyecsca.ec.context.PathContext.enter_action.params": [[8, 4, 1, "", "action"]], "pyecsca.ec.context.PathContext.exit_action.params": [[8, 4, 1, "", "action"]], "pyecsca.ec.context.PathContext.params": [[8, 4, 1, "", "path"]], "pyecsca.ec.context.ResultAction": [[8, 2, 1, "", "exit"], [8, 3, 1, "", "inside"], [8, 6, 1, "", "result"]], "pyecsca.ec.context.Tree": [[8, 2, 1, "", "clear"], [8, 2, 1, "", "copy"], [8, 2, 1, "", "fromkeys"], [8, 2, 1, "", "get"], [8, 2, 1, "", "get_by_index"], [8, 2, 1, "", "get_by_key"], [8, 2, 1, "", "items"], [8, 2, 1, "", "keys"], [8, 2, 1, "", "move_to_end"], [8, 2, 1, "", "pop"], [8, 2, 1, "", "popitem"], [8, 2, 1, "", "repr"], [8, 2, 1, "", "setdefault"], [8, 2, 1, "", "update"], [8, 2, 1, "", "values"], [8, 2, 1, "", "walk"]], "pyecsca.ec.context.Tree.get_by_index.params": [[8, 4, 1, "", "path"]], "pyecsca.ec.context.Tree.get_by_key.params": [[8, 4, 1, "", "path"]], "pyecsca.ec.context.Tree.repr.params": [[8, 4, 1, "", "depth"]], "pyecsca.ec.context.Tree.walk.params": [[8, 4, 1, "", "callback"]], "pyecsca.ec.context.local.params": [[8, 4, 1, "", "ctx"]], "pyecsca.ec.coordinates": [[9, 1, 1, "", "AffineCoordinateModel"], [9, 1, 1, "", "CoordinateModel"]], "pyecsca.ec.coordinates.AffineCoordinateModel": [[9, 3, 1, "", "assumptions"], [9, 3, 1, "", "curve_model"], [9, 3, 1, "", "formulas"], [9, 3, 1, "", "full_name"], [9, 3, 1, "", "homogweights"], [9, 3, 1, "", "name"], [9, 3, 1, "", "neutral"], [9, 3, 1, "", "parameters"], [9, 3, 1, "", "satisfying"], [9, 3, 1, "", "toaffine"], [9, 3, 1, "", "tosystem"], [9, 3, 1, "", "variables"]], "pyecsca.ec.coordinates.CoordinateModel": [[9, 3, 1, "", "assumptions"], [9, 3, 1, "", "curve_model"], [9, 3, 1, "", "formulas"], [9, 3, 1, "", "full_name"], [9, 3, 1, "", "homogweights"], [9, 3, 1, "", "name"], [9, 3, 1, "", "neutral"], [9, 3, 1, "", "parameters"], [9, 3, 1, "", "satisfying"], [9, 3, 1, "", "toaffine"], [9, 3, 1, "", "tosystem"], [9, 3, 1, "", "variables"]], "pyecsca.ec.curve": [[10, 1, 1, "", "EllipticCurve"]], "pyecsca.ec.curve.EllipticCurve": [[10, 2, 1, "", "affine_add"], [10, 2, 1, "", "affine_double"], [10, 2, 1, "", "affine_lift_x"], [10, 2, 1, "", "affine_multiply"], [10, 2, 1, "", "affine_negate"], [10, 6, 1, "", "affine_neutral"], [10, 2, 1, "", "affine_random"], [10, 3, 1, "", "coordinate_model"], [10, 2, 1, "", "decode_point"], [10, 2, 1, "", "is_neutral"], [10, 2, 1, "", "is_on_curve"], [10, 3, 1, "", "model"], [10, 3, 1, "", "neutral"], [10, 6, 1, "", "neutral_is_affine"], [10, 3, 1, "", "parameters"], [10, 3, 1, "", "prime"], [10, 2, 1, "", "to_affine"], [10, 2, 1, "", "to_coords"]], "pyecsca.ec.curve.EllipticCurve.affine_add.params": [[10, 4, 1, "", "one"], [10, 4, 1, "", "other"]], "pyecsca.ec.curve.EllipticCurve.affine_double.params": [[10, 4, 1, "", "one"]], "pyecsca.ec.curve.EllipticCurve.affine_lift_x.params": [[10, 4, 1, "", "x"]], "pyecsca.ec.curve.EllipticCurve.affine_multiply.params": [[10, 4, 1, "", "point"], [10, 4, 1, "", "scalar"]], "pyecsca.ec.curve.EllipticCurve.affine_negate.params": [[10, 4, 1, "", "one"]], "pyecsca.ec.curve.EllipticCurve.decode_point.params": [[10, 4, 1, "", "encoded"]], "pyecsca.ec.curve.EllipticCurve.is_neutral.params": [[10, 4, 1, "", "point"]], "pyecsca.ec.curve.EllipticCurve.is_on_curve.params": [[10, 4, 1, "", "point"]], "pyecsca.ec.curve.EllipticCurve.to_coords.params": [[10, 4, 1, "", "coordinate_model"]], "pyecsca.ec.divpoly": [[11, 5, 1, "", "a_invariants"], [11, 5, 1, "", "b_invariants"], [11, 5, 1, "", "divpoly"], [11, 5, 1, "", "mult_by_n"]], "pyecsca.ec.divpoly.a_invariants.params": [[11, 4, 1, "", "curve"]], "pyecsca.ec.divpoly.b_invariants.params": [[11, 4, 1, "", "curve"]], "pyecsca.ec.divpoly.divpoly.params": [[11, 4, 1, "", "curve"], [11, 4, 1, "", "n"], [11, 4, 1, "", "two_torsion_multiplicity"]], "pyecsca.ec.divpoly.mult_by_n.params": [[11, 4, 1, "", "curve"], [11, 4, 1, "", "n"], [11, 4, 1, "", "use_pari"], [11, 4, 1, "", "x_only"]], "pyecsca.ec.error": [[12, 7, 1, "", "NonInvertibleError"], [12, 7, 1, "", "NonInvertibleWarning"], [12, 7, 1, "", "NonResidueError"], [12, 7, 1, "", "NonResidueWarning"], [12, 7, 1, "", "UnsatisfiedAssumptionError"], [12, 7, 1, "", "UnsatisfiedAssumptionWarning"]], "pyecsca.ec.error.NonInvertibleError": [[12, 2, 1, "", "add_note"], [12, 3, 1, "", "args"], [12, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.NonInvertibleWarning": [[12, 2, 1, "", "add_note"], [12, 3, 1, "", "args"], [12, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.NonResidueError": [[12, 2, 1, "", "add_note"], [12, 3, 1, "", "args"], [12, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.NonResidueWarning": [[12, 2, 1, "", "add_note"], [12, 3, 1, "", "args"], [12, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.UnsatisfiedAssumptionError": [[12, 2, 1, "", "add_note"], [12, 3, 1, "", "args"], [12, 2, 1, "", "with_traceback"]], "pyecsca.ec.error.UnsatisfiedAssumptionWarning": [[12, 2, 1, "", "add_note"], [12, 3, 1, "", "args"], [12, 2, 1, "", "with_traceback"]], "pyecsca.ec.formula": [[14, 0, 0, "-", "base"], [15, 0, 0, "-", "code"], [16, 0, 0, "-", "efd"], [17, 0, 0, "-", "expand"], [18, 0, 0, "-", "fake"], [19, 0, 0, "-", "fliparoo"], [20, 0, 0, "-", "graph"], [21, 0, 0, "-", "metrics"], [22, 0, 0, "-", "partitions"], [23, 0, 0, "-", "switch_sign"], [24, 0, 0, "-", "unroll"]], "pyecsca.ec.formula.base": [[14, 1, 1, "", "AdditionFormula"], [14, 1, 1, "", "DifferentialAdditionFormula"], [14, 1, 1, "", "DoublingFormula"], [14, 1, 1, "", "Formula"], [14, 1, 1, "", "FormulaAction"], [14, 1, 1, "", "LadderFormula"], [14, 1, 1, "", "NegationFormula"], [14, 1, 1, "", "OpResult"], [14, 1, 1, "", "ScalingFormula"], [14, 1, 1, "", "TriplingFormula"]], "pyecsca.ec.formula.base.AdditionFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.DifferentialAdditionFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.DoublingFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.Formula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.FormulaAction": [[14, 2, 1, "", "add_operation"], [14, 2, 1, "", "add_result"], [14, 2, 1, "", "exit"], [14, 3, 1, "", "formula"], [14, 3, 1, "", "input_points"], [14, 3, 1, "", "inputs"], [14, 3, 1, "", "inside"], [14, 3, 1, "", "intermediates"], [14, 3, 1, "", "op_results"], [14, 3, 1, "", "output_points"], [14, 3, 1, "", "outputs"], [14, 6, 1, "", "result"]], "pyecsca.ec.formula.base.LadderFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.NegationFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.OpResult": [[14, 3, 1, "", "name"], [14, 3, 1, "", "op"], [14, 3, 1, "", "parents"], [14, 3, 1, "", "value"]], "pyecsca.ec.formula.base.ScalingFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.base.TriplingFormula": [[14, 3, 1, "", "assumptions"], [14, 6, 1, "", "assumptions_str"], [14, 3, 1, "", "code"], [14, 3, 1, "", "coordinate_model"], [14, 6, 1, "", "input_index"], [14, 6, 1, "", "inputs"], [14, 3, 1, "", "meta"], [14, 3, 1, "", "name"], [14, 6, 1, "", "num_addsubs"], [14, 6, 1, "", "num_divisions"], [14, 3, 1, "", "num_inputs"], [14, 6, 1, "", "num_inversions"], [14, 6, 1, "", "num_multiplications"], [14, 6, 1, "", "num_operations"], [14, 3, 1, "", "num_outputs"], [14, 6, 1, "", "num_powers"], [14, 6, 1, "", "num_squarings"], [14, 6, 1, "", "output_index"], [14, 6, 1, "", "outputs"], [14, 3, 1, "", "parameters"], [14, 3, 1, "", "shortname"], [14, 3, 1, "", "unified"]], "pyecsca.ec.formula.code": [[15, 1, 1, "", "CodeAdditionFormula"], [15, 1, 1, "", "CodeDifferentialAdditionFormula"], [15, 1, 1, "", "CodeDoublingFormula"], [15, 1, 1, "", "CodeFormula"], [15, 1, 1, "", "CodeLadderFormula"], [15, 1, 1, "", "CodeNegationFormula"], [15, 1, 1, "", "CodeScalingFormula"], [15, 1, 1, "", "CodeTriplingFormula"]], "pyecsca.ec.formula.code.CodeAdditionFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeDoublingFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeLadderFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeNegationFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeScalingFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.code.CodeTriplingFormula": [[15, 3, 1, "", "assumptions"], [15, 6, 1, "", "assumptions_str"], [15, 3, 1, "", "code"], [15, 3, 1, "", "coordinate_model"], [15, 6, 1, "", "input_index"], [15, 6, 1, "", "inputs"], [15, 3, 1, "", "meta"], [15, 3, 1, "", "name"], [15, 6, 1, "", "num_addsubs"], [15, 6, 1, "", "num_divisions"], [15, 3, 1, "", "num_inputs"], [15, 6, 1, "", "num_inversions"], [15, 6, 1, "", "num_multiplications"], [15, 6, 1, "", "num_operations"], [15, 3, 1, "", "num_outputs"], [15, 6, 1, "", "num_powers"], [15, 6, 1, "", "num_squarings"], [15, 6, 1, "", "output_index"], [15, 6, 1, "", "outputs"], [15, 3, 1, "", "parameters"], [15, 3, 1, "", "shortname"], [15, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd": [[16, 1, 1, "", "AdditionEFDFormula"], [16, 1, 1, "", "DifferentialAdditionEFDFormula"], [16, 1, 1, "", "DoublingEFDFormula"], [16, 1, 1, "", "LadderEFDFormula"], [16, 1, 1, "", "NegationEFDFormula"], [16, 1, 1, "", "ScalingEFDFormula"], [16, 1, 1, "", "TriplingEFDFormula"]], "pyecsca.ec.formula.efd.AdditionEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.DoublingEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.LadderEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.NegationEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.ScalingEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.efd.TriplingEFDFormula": [[16, 3, 1, "", "assumptions"], [16, 6, 1, "", "assumptions_str"], [16, 3, 1, "", "code"], [16, 3, 1, "", "coordinate_model"], [16, 6, 1, "", "input_index"], [16, 6, 1, "", "inputs"], [16, 3, 1, "", "meta"], [16, 3, 1, "", "name"], [16, 6, 1, "", "num_addsubs"], [16, 6, 1, "", "num_divisions"], [16, 3, 1, "", "num_inputs"], [16, 6, 1, "", "num_inversions"], [16, 6, 1, "", "num_multiplications"], [16, 6, 1, "", "num_operations"], [16, 3, 1, "", "num_outputs"], [16, 6, 1, "", "num_powers"], [16, 6, 1, "", "num_squarings"], [16, 6, 1, "", "output_index"], [16, 6, 1, "", "outputs"], [16, 3, 1, "", "parameters"], [16, 3, 1, "", "shortname"], [16, 2, 1, "", "to_code"], [16, 3, 1, "", "unified"]], "pyecsca.ec.formula.expand": [[17, 5, 1, "", "expand_formula_set"]], "pyecsca.ec.formula.fake": [[18, 1, 1, "", "FakeAdditionFormula"], [18, 1, 1, "", "FakeDifferentialAdditionFormula"], [18, 1, 1, "", "FakeDoublingFormula"], [18, 1, 1, "", "FakeLadderFormula"], [18, 1, 1, "", "FakeNegationFormula"], [18, 1, 1, "", "FakePoint"], [18, 1, 1, "", "FakeScalingFormula"], [18, 1, 1, "", "FakeTriplingFormula"]], "pyecsca.ec.formula.fake.FakeAdditionFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeDoublingFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeLadderFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeNegationFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakePoint": [[18, 3, 1, "", "coordinate_model"], [18, 3, 1, "", "coords"], [18, 2, 1, "", "equals"], [18, 2, 1, "", "equals_affine"], [18, 2, 1, "", "equals_scaled"], [18, 3, 1, "", "field"], [18, 2, 1, "", "to_affine"], [18, 2, 1, "", "to_model"]], "pyecsca.ec.formula.fake.FakePoint.equals_scaled.params": [[18, 4, 1, "", "other"]], "pyecsca.ec.formula.fake.FakeScalingFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fake.FakeTriplingFormula": [[18, 3, 1, "", "assumptions"], [18, 6, 1, "", "assumptions_str"], [18, 3, 1, "", "code"], [18, 3, 1, "", "coordinate_model"], [18, 6, 1, "", "input_index"], [18, 6, 1, "", "inputs"], [18, 3, 1, "", "meta"], [18, 3, 1, "", "name"], [18, 6, 1, "", "num_addsubs"], [18, 6, 1, "", "num_divisions"], [18, 3, 1, "", "num_inputs"], [18, 6, 1, "", "num_inversions"], [18, 6, 1, "", "num_multiplications"], [18, 6, 1, "", "num_operations"], [18, 3, 1, "", "num_outputs"], [18, 6, 1, "", "num_powers"], [18, 6, 1, "", "num_squarings"], [18, 6, 1, "", "output_index"], [18, 6, 1, "", "outputs"], [18, 3, 1, "", "parameters"], [18, 3, 1, "", "shortname"], [18, 3, 1, "", "unified"]], "pyecsca.ec.formula.fliparoo": [[19, 1, 1, "", "AddFliparoo"], [19, 1, 1, "", "AddSubFliparoo"], [19, 7, 1, "", "BadFliparoo"], [19, 1, 1, "", "DummyNode"], [19, 1, 1, "", "Fliparoo"], [19, 1, 1, "", "MulFliparoo"], [19, 1, 1, "", "SignedNode"], [19, 1, 1, "", "SignedSubGraph"], [19, 5, 1, "", "combine_all_pairs_signed_nodes"], [19, 5, 1, "", "combine_signed_nodes"], [19, 5, 1, "", "disconnect_fliparoo_outputs"], [19, 5, 1, "", "extract_fliparoo_signed_inputs"], [19, 5, 1, "", "find_fliparoos"], [19, 5, 1, "", "generate_fliparood_formulas"], [19, 5, 1, "", "generate_fliparood_graphs"], [19, 5, 1, "", "is_subfliparoo"], [19, 5, 1, "", "largest_fliparoo"], [19, 5, 1, "", "mirror_node"], [19, 5, 1, "", "reconnect_fliparoo_outputs"], [19, 5, 1, "", "recursive_fliparoo"]], "pyecsca.ec.formula.fliparoo.AddFliparoo": [[19, 2, 1, "", "deepcopy"], [19, 6, 1, "", "first"], [19, 3, 1, "", "graph"], [19, 2, 1, "", "input_nodes"], [19, 6, 1, "", "last"], [19, 3, 1, "", "nodes"], [19, 3, 1, "", "operator"], [19, 2, 1, "", "previous"], [19, 2, 1, "", "slice"], [19, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.AddSubFliparoo": [[19, 2, 1, "", "deepcopy"], [19, 6, 1, "", "first"], [19, 3, 1, "", "graph"], [19, 2, 1, "", "input_nodes"], [19, 6, 1, "", "last"], [19, 3, 1, "", "nodes"], [19, 3, 1, "", "operator"], [19, 2, 1, "", "previous"], [19, 2, 1, "", "slice"], [19, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.BadFliparoo": [[19, 2, 1, "", "add_note"], [19, 3, 1, "", "args"], [19, 2, 1, "", "with_traceback"]], "pyecsca.ec.formula.fliparoo.DummyNode": [[19, 6, 1, "", "is_add"], [19, 6, 1, "", "is_div"], [19, 6, 1, "", "is_id"], [19, 6, 1, "", "is_inv"], [19, 6, 1, "", "is_mul"], [19, 6, 1, "", "is_neg"], [19, 6, 1, "", "is_pow"], [19, 6, 1, "", "is_sqr"], [19, 6, 1, "", "is_sub"], [19, 6, 1, "", "label"], [19, 2, 1, "", "reconnect_outgoing_nodes"], [19, 6, 1, "", "result"]], "pyecsca.ec.formula.fliparoo.Fliparoo": [[19, 2, 1, "", "deepcopy"], [19, 6, 1, "", "first"], [19, 3, 1, "", "graph"], [19, 2, 1, "", "input_nodes"], [19, 6, 1, "", "last"], [19, 3, 1, "", "nodes"], [19, 3, 1, "", "operator"], [19, 2, 1, "", "previous"], [19, 2, 1, "", "slice"], [19, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.MulFliparoo": [[19, 2, 1, "", "deepcopy"], [19, 6, 1, "", "first"], [19, 3, 1, "", "graph"], [19, 2, 1, "", "input_nodes"], [19, 6, 1, "", "last"], [19, 3, 1, "", "nodes"], [19, 3, 1, "", "operator"], [19, 2, 1, "", "previous"], [19, 2, 1, "", "slice"], [19, 2, 1, "", "verify_chain"]], "pyecsca.ec.formula.fliparoo.SignedNode": [[19, 3, 1, "", "node"], [19, 3, 1, "", "sign"]], "pyecsca.ec.formula.fliparoo.SignedSubGraph": [[19, 2, 1, "", "add_node"], [19, 2, 1, "", "change_signs"], [19, 6, 1, "", "components"], [19, 2, 1, "", "deepcopy"], [19, 2, 1, "", "remove_node"]], "pyecsca.ec.formula.graph": [[20, 1, 1, "", "CodeOpNode"], [20, 1, 1, "", "ConstantNode"], [20, 1, 1, "", "FormulaGraph"], [20, 1, 1, "", "InputNode"], [20, 1, 1, "", "Node"], [20, 5, 1, "", "formula_input_variables"], [20, 5, 1, "", "rename_ivs"]], "pyecsca.ec.formula.graph.CodeOpNode": [[20, 3, 1, "", "color"], [20, 2, 1, "", "from_str"], [20, 6, 1, "", "is_add"], [20, 6, 1, "", "is_div"], [20, 6, 1, "", "is_id"], [20, 6, 1, "", "is_inv"], [20, 6, 1, "", "is_mul"], [20, 6, 1, "", "is_neg"], [20, 6, 1, "", "is_pow"], [20, 6, 1, "", "is_sqr"], [20, 6, 1, "", "is_sub"], [20, 6, 1, "", "label"], [20, 6, 1, "", "optype"], [20, 2, 1, "", "reconnect_outgoing_nodes"], [20, 6, 1, "", "result"]], "pyecsca.ec.formula.graph.ConstantNode": [[20, 3, 1, "", "color"], [20, 6, 1, "", "is_add"], [20, 6, 1, "", "is_div"], [20, 6, 1, "", "is_id"], [20, 6, 1, "", "is_inv"], [20, 6, 1, "", "is_mul"], [20, 6, 1, "", "is_neg"], [20, 6, 1, "", "is_pow"], [20, 6, 1, "", "is_sqr"], [20, 6, 1, "", "is_sub"], [20, 6, 1, "", "label"], [20, 2, 1, "", "reconnect_outgoing_nodes"], [20, 6, 1, "", "result"]], "pyecsca.ec.formula.graph.FormulaGraph": [[20, 2, 1, "", "add_node"], [20, 3, 1, "", "assumptions"], [20, 3, 1, "", "coordinate_model"], [20, 2, 1, "", "deepcopy"], [20, 2, 1, "", "draw"], [20, 2, 1, "", "find_all_paths"], [20, 3, 1, "", "input_nodes"], [20, 2, 1, "", "levels"], [20, 3, 1, "", "name"], [20, 2, 1, "", "networkx_graph"], [20, 2, 1, "", "node_index"], [20, 3, 1, "", "nodes"], [20, 3, 1, "", "output_names"], [20, 2, 1, "", "output_nodes"], [20, 3, 1, "", "parameters"], [20, 2, 1, "", "planar_positions"], [20, 2, 1, "", "print"], [20, 2, 1, "", "reindex"], [20, 2, 1, "", "remove_node"], [20, 2, 1, "", "reorder"], [20, 3, 1, "", "roots"], [20, 3, 1, "", "shortname"], [20, 2, 1, "", "to_formula"], [20, 2, 1, "", "update"]], "pyecsca.ec.formula.graph.InputNode": [[20, 3, 1, "", "color"], [20, 6, 1, "", "is_add"], [20, 6, 1, "", "is_div"], [20, 6, 1, "", "is_id"], [20, 6, 1, "", "is_inv"], [20, 6, 1, "", "is_mul"], [20, 6, 1, "", "is_neg"], [20, 6, 1, "", "is_pow"], [20, 6, 1, "", "is_sqr"], [20, 6, 1, "", "is_sub"], [20, 6, 1, "", "label"], [20, 2, 1, "", "reconnect_outgoing_nodes"], [20, 6, 1, "", "result"]], "pyecsca.ec.formula.graph.Node": [[20, 6, 1, "", "is_add"], [20, 6, 1, "", "is_div"], [20, 6, 1, "", "is_id"], [20, 6, 1, "", "is_inv"], [20, 6, 1, "", "is_mul"], [20, 6, 1, "", "is_neg"], [20, 6, 1, "", "is_pow"], [20, 6, 1, "", "is_sqr"], [20, 6, 1, "", "is_sub"], [20, 6, 1, "", "label"], [20, 2, 1, "", "reconnect_outgoing_nodes"], [20, 6, 1, "", "result"]], "pyecsca.ec.formula.metrics": [[21, 5, 1, "", "formula_ivs"], [21, 5, 1, "", "formula_similarity"], [21, 5, 1, "", "formula_similarity_abs"], [21, 5, 1, "", "formula_similarity_fuzz"], [21, 5, 1, "", "ivs_norm"]], "pyecsca.ec.formula.partitions": [[22, 1, 1, "", "Partition"], [22, 5, 1, "", "compute_partitions"], [22, 5, 1, "", "expand_all_muls"], [22, 5, 1, "", "expand_all_nopower2_muls"], [22, 5, 1, "", "expand_mul"], [22, 5, 1, "", "find_all_XplusX"], [22, 5, 1, "", "find_constant_mul_fliparoos"], [22, 5, 1, "", "find_expansion_nodes"], [22, 5, 1, "", "find_single_input_add_fliparoos"], [22, 5, 1, "", "generate_all_node_partitions"], [22, 5, 1, "", "generate_partitioned_formulas"], [22, 5, 1, "", "is_power_of_2"], [22, 5, 1, "", "partition_node"], [22, 5, 1, "", "reduce_XplusX"], [22, 5, 1, "", "reduce_add_fliparoo"], [22, 5, 1, "", "reduce_all_XplusX"], [22, 5, 1, "", "reduce_all_adds"], [22, 5, 1, "", "reduce_mul_fliparoo"]], "pyecsca.ec.formula.partitions.Partition": [[22, 6, 1, "", "is_final"], [22, 3, 1, "", "parts"], [22, 3, 1, "", "value"]], "pyecsca.ec.formula.switch_sign": [[23, 7, 1, "", "BadSignSwitch"], [23, 5, 1, "", "change_operator"], [23, 5, 1, "", "change_sides"], [23, 5, 1, "", "generate_switched_formulas"], [23, 5, 1, "", "powerlist"], [23, 5, 1, "", "sign_test"], [23, 5, 1, "", "subnode_lists"], [23, 5, 1, "", "switch_sign"], [23, 5, 1, "", "switch_sign_propagate"]], "pyecsca.ec.formula.switch_sign.BadSignSwitch": [[23, 2, 1, "", "add_note"], [23, 3, 1, "", "args"], [23, 2, 1, "", "with_traceback"]], "pyecsca.ec.formula.unroll": [[24, 5, 1, "", "unroll_formula"], [24, 5, 1, "", "unroll_formula_expr"]], "pyecsca.ec.formula.unroll.unroll_formula.params": [[24, 4, 1, "", "formula"]], "pyecsca.ec.formula.unroll.unroll_formula_expr.params": [[24, 4, 1, "", "formula"]], "pyecsca.ec.key_agreement": [[25, 1, 1, "", "ECDHAction"], [25, 1, 1, "", "ECDH_NONE"], [25, 1, 1, "", "ECDH_SHA1"], [25, 1, 1, "", "ECDH_SHA224"], [25, 1, 1, "", "ECDH_SHA256"], [25, 1, 1, "", "ECDH_SHA384"], [25, 1, 1, "", "ECDH_SHA512"], [25, 1, 1, "", "KeyAgreement"]], "pyecsca.ec.key_agreement.ECDHAction": [[25, 2, 1, "", "exit"], [25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "inside"], [25, 3, 1, "", "params"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"], [25, 6, 1, "", "result"]], "pyecsca.ec.key_agreement.ECDH_NONE": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA1": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA224": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA256": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA384": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.ECDH_SHA512": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_agreement.KeyAgreement": [[25, 3, 1, "", "hash_algo"], [25, 3, 1, "", "mult"], [25, 3, 1, "", "params"], [25, 2, 1, "", "perform"], [25, 2, 1, "", "perform_raw"], [25, 3, 1, "", "privkey"], [25, 3, 1, "", "pubkey"]], "pyecsca.ec.key_generation": [[26, 1, 1, "", "KeyGeneration"], [26, 1, 1, "", "KeygenAction"]], "pyecsca.ec.key_generation.KeyGeneration": [[26, 3, 1, "", "affine"], [26, 2, 1, "", "generate"], [26, 3, 1, "", "mult"], [26, 3, 1, "", "params"]], "pyecsca.ec.key_generation.KeyGeneration.params": [[26, 4, 1, "", "affine"], [26, 4, 1, "", "mult"], [26, 4, 1, "", "params"]], "pyecsca.ec.key_generation.KeygenAction": [[26, 2, 1, "", "exit"], [26, 3, 1, "", "inside"], [26, 3, 1, "", "params"], [26, 6, 1, "", "result"]], "pyecsca.ec.mod": [[27, 1, 1, "", "GMPMod"], [27, 1, 1, "", "Mod"], [27, 1, 1, "", "RandomModAction"], [27, 1, 1, "", "RawMod"], [27, 1, 1, "", "SymbolicMod"], [27, 1, 1, "", "Undefined"], [27, 5, 1, "", "extgcd"], [27, 5, 1, "", "gcd"], [27, 5, 1, "", "jacobi"], [27, 5, 1, "", "miller_rabin"]], "pyecsca.ec.mod.GMPMod": [[27, 2, 1, "", "inverse"], [27, 2, 1, "", "is_residue"], [27, 3, 1, "", "n"], [27, 2, 1, "", "random"], [27, 2, 1, "", "sqrt"], [27, 3, 1, "", "x"]], "pyecsca.ec.mod.GMPMod.random.params": [[27, 4, 1, "", "n"]], "pyecsca.ec.mod.Mod": [[27, 2, 1, "", "inverse"], [27, 2, 1, "", "is_residue"], [27, 3, 1, "", "n"], [27, 2, 1, "", "random"], [27, 2, 1, "", "sqrt"], [27, 3, 1, "", "x"]], "pyecsca.ec.mod.Mod.random.params": [[27, 4, 1, "", "n"]], "pyecsca.ec.mod.RandomModAction": [[27, 2, 1, "", "exit"], [27, 3, 1, "", "inside"], [27, 3, 1, "", "order"], [27, 6, 1, "", "result"]], "pyecsca.ec.mod.RawMod": [[27, 2, 1, "", "inverse"], [27, 2, 1, "", "is_residue"], [27, 3, 1, "", "n"], [27, 2, 1, "", "random"], [27, 2, 1, "", "sqrt"], [27, 3, 1, "", "x"]], "pyecsca.ec.mod.RawMod.random.params": [[27, 4, 1, "", "n"]], "pyecsca.ec.mod.SymbolicMod": [[27, 2, 1, "", "inverse"], [27, 2, 1, "", "is_residue"], [27, 3, 1, "", "n"], [27, 2, 1, "", "random"], [27, 2, 1, "", "sqrt"], [27, 3, 1, "", "x"]], "pyecsca.ec.mod.SymbolicMod.random.params": [[27, 4, 1, "", "n"]], "pyecsca.ec.mod.Undefined": [[27, 2, 1, "", "inverse"], [27, 2, 1, "", "is_residue"], [27, 3, 1, "", "n"], [27, 2, 1, "", "random"], [27, 2, 1, "", "sqrt"], [27, 3, 1, "", "x"]], "pyecsca.ec.mod.Undefined.random.params": [[27, 4, 1, "", "n"]], "pyecsca.ec.model": [[28, 1, 1, "", "CurveModel"], [28, 1, 1, "", "EdwardsModel"], [28, 1, 1, "", "MontgomeryModel"], [28, 1, 1, "", "ShortWeierstrassModel"], [28, 1, 1, "", "TwistedEdwardsModel"]], "pyecsca.ec.model.CurveModel": [[28, 3, 1, "", "base_addition"], [28, 3, 1, "", "base_doubling"], [28, 3, 1, "", "base_negation"], [28, 3, 1, "", "base_neutral"], [28, 3, 1, "", "coordinate_names"], [28, 3, 1, "", "coordinates"], [28, 3, 1, "", "equation"], [28, 3, 1, "", "from_weierstrass"], [28, 3, 1, "", "full_weierstrass"], [28, 3, 1, "", "name"], [28, 3, 1, "", "parameter_names"], [28, 3, 1, "", "shortname"], [28, 3, 1, "", "to_weierstrass"], [28, 3, 1, "", "ysquared"]], "pyecsca.ec.model.EdwardsModel": [[28, 3, 1, "", "base_addition"], [28, 3, 1, "", "base_doubling"], [28, 3, 1, "", "base_negation"], [28, 3, 1, "", "base_neutral"], [28, 3, 1, "", "coordinate_names"], [28, 3, 1, "", "coordinates"], [28, 3, 1, "", "equation"], [28, 3, 1, "", "from_weierstrass"], [28, 3, 1, "", "full_weierstrass"], [28, 3, 1, "", "name"], [28, 3, 1, "", "parameter_names"], [28, 3, 1, "", "shortname"], [28, 3, 1, "", "to_weierstrass"], [28, 3, 1, "", "ysquared"]], "pyecsca.ec.model.MontgomeryModel": [[28, 3, 1, "", "base_addition"], [28, 3, 1, "", "base_doubling"], [28, 3, 1, "", "base_negation"], [28, 3, 1, "", "base_neutral"], [28, 3, 1, "", "coordinate_names"], [28, 3, 1, "", "coordinates"], [28, 3, 1, "", "equation"], [28, 3, 1, "", "from_weierstrass"], [28, 3, 1, "", "full_weierstrass"], [28, 3, 1, "", "name"], [28, 3, 1, "", "parameter_names"], [28, 3, 1, "", "shortname"], [28, 3, 1, "", "to_weierstrass"], [28, 3, 1, "", "ysquared"]], "pyecsca.ec.model.ShortWeierstrassModel": [[28, 3, 1, "", "base_addition"], [28, 3, 1, "", "base_doubling"], [28, 3, 1, "", "base_negation"], [28, 3, 1, "", "base_neutral"], [28, 3, 1, "", "coordinate_names"], [28, 3, 1, "", "coordinates"], [28, 3, 1, "", "equation"], [28, 3, 1, "", "from_weierstrass"], [28, 3, 1, "", "full_weierstrass"], [28, 3, 1, "", "name"], [28, 3, 1, "", "parameter_names"], [28, 3, 1, "", "shortname"], [28, 3, 1, "", "to_weierstrass"], [28, 3, 1, "", "ysquared"]], "pyecsca.ec.model.TwistedEdwardsModel": [[28, 3, 1, "", "base_addition"], [28, 3, 1, "", "base_doubling"], [28, 3, 1, "", "base_negation"], [28, 3, 1, "", "base_neutral"], [28, 3, 1, "", "coordinate_names"], [28, 3, 1, "", "coordinates"], [28, 3, 1, "", "equation"], [28, 3, 1, "", "from_weierstrass"], [28, 3, 1, "", "full_weierstrass"], [28, 3, 1, "", "name"], [28, 3, 1, "", "parameter_names"], [28, 3, 1, "", "shortname"], [28, 3, 1, "", "to_weierstrass"], [28, 3, 1, "", "ysquared"]], "pyecsca.ec.mult": [[30, 0, 0, "-", "base"], [31, 0, 0, "-", "binary"], [32, 0, 0, "-", "comb"], [33, 0, 0, "-", "fixed"], [34, 0, 0, "-", "ladder"], [35, 0, 0, "-", "naf"], [36, 0, 0, "-", "window"]], "pyecsca.ec.mult.base": [[30, 1, 1, "", "AccumulationOrder"], [30, 1, 1, "", "AccumulatorMultiplier"], [30, 1, 1, "", "PrecomputationAction"], [30, 1, 1, "", "ProcessingDirection"], [30, 1, 1, "", "ScalarMultiplicationAction"], [30, 1, 1, "", "ScalarMultiplier"]], "pyecsca.ec.mult.base.AccumulationOrder": [[30, 3, 1, "", "PeqPR"], [30, 3, 1, "", "PeqRP"]], "pyecsca.ec.mult.base.AccumulatorMultiplier": [[30, 3, 1, "", "accumulation_order"], [30, 3, 1, "", "formulas"], [30, 2, 1, "", "init"], [30, 2, 1, "", "multiply"], [30, 3, 1, "", "optionals"], [30, 3, 1, "", "requires"], [30, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.base.AccumulatorMultiplier.init.params": [[30, 4, 1, "", "params"], [30, 4, 1, "", "point"]], "pyecsca.ec.mult.base.AccumulatorMultiplier.multiply.params": [[30, 4, 1, "", "scalar"]], "pyecsca.ec.mult.base.AccumulatorMultiplier.params": [[30, 4, 1, "", "accumulation_order"]], "pyecsca.ec.mult.base.PrecomputationAction": [[30, 3, 1, "", "inside"], [30, 3, 1, "", "params"], [30, 3, 1, "", "point"]], "pyecsca.ec.mult.base.ProcessingDirection": [[30, 3, 1, "", "LTR"], [30, 3, 1, "", "RTL"]], "pyecsca.ec.mult.base.ScalarMultiplicationAction": [[30, 2, 1, "", "exit"], [30, 3, 1, "", "inside"], [30, 3, 1, "", "point"], [30, 6, 1, "", "result"], [30, 3, 1, "", "scalar"]], "pyecsca.ec.mult.base.ScalarMultiplier": [[30, 3, 1, "", "formulas"], [30, 2, 1, "", "init"], [30, 2, 1, "", "multiply"], [30, 3, 1, "", "optionals"], [30, 3, 1, "", "requires"], [30, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.base.ScalarMultiplier.init.params": [[30, 4, 1, "", "params"], [30, 4, 1, "", "point"]], "pyecsca.ec.mult.base.ScalarMultiplier.multiply.params": [[30, 4, 1, "", "scalar"]], "pyecsca.ec.mult.base.ScalarMultiplier.params": [[30, 4, 1, "", "formulas"], [30, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary": [[31, 1, 1, "", "CoronMultiplier"], [31, 1, 1, "", "DoubleAndAddMultiplier"], [31, 1, 1, "", "LTRMultiplier"], [31, 1, 1, "", "RTLMultiplier"]], "pyecsca.ec.mult.binary.CoronMultiplier": [[31, 3, 1, "", "formulas"], [31, 2, 1, "", "init"], [31, 2, 1, "", "multiply"], [31, 3, 1, "", "optionals"], [31, 3, 1, "", "requires"], [31, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.CoronMultiplier.init.params": [[31, 4, 1, "", "params"], [31, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.CoronMultiplier.multiply.params": [[31, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.CoronMultiplier.params": [[31, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier": [[31, 3, 1, "", "accumulation_order"], [31, 3, 1, "", "always"], [31, 3, 1, "", "complete"], [31, 3, 1, "", "direction"], [31, 3, 1, "", "formulas"], [31, 2, 1, "", "init"], [31, 2, 1, "", "multiply"], [31, 3, 1, "", "optionals"], [31, 3, 1, "", "requires"], [31, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.init.params": [[31, 4, 1, "", "params"], [31, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.multiply.params": [[31, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.params": [[31, 4, 1, "", "accumulation_order"], [31, 4, 1, "", "always"], [31, 4, 1, "", "complete"], [31, 4, 1, "", "direction"], [31, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.LTRMultiplier": [[31, 3, 1, "", "accumulation_order"], [31, 3, 1, "", "always"], [31, 3, 1, "", "complete"], [31, 3, 1, "", "direction"], [31, 3, 1, "", "formulas"], [31, 2, 1, "", "init"], [31, 2, 1, "", "multiply"], [31, 3, 1, "", "optionals"], [31, 3, 1, "", "requires"], [31, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.LTRMultiplier.init.params": [[31, 4, 1, "", "params"], [31, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.LTRMultiplier.multiply.params": [[31, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.LTRMultiplier.params": [[31, 4, 1, "", "accumulation_order"], [31, 4, 1, "", "always"], [31, 4, 1, "", "complete"], [31, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.RTLMultiplier": [[31, 3, 1, "", "accumulation_order"], [31, 3, 1, "", "always"], [31, 3, 1, "", "complete"], [31, 3, 1, "", "direction"], [31, 3, 1, "", "formulas"], [31, 2, 1, "", "init"], [31, 2, 1, "", "multiply"], [31, 3, 1, "", "optionals"], [31, 3, 1, "", "requires"], [31, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.binary.RTLMultiplier.init.params": [[31, 4, 1, "", "params"], [31, 4, 1, "", "point"]], "pyecsca.ec.mult.binary.RTLMultiplier.multiply.params": [[31, 4, 1, "", "scalar"]], "pyecsca.ec.mult.binary.RTLMultiplier.params": [[31, 4, 1, "", "accumulation_order"], [31, 4, 1, "", "always"], [31, 4, 1, "", "complete"], [31, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.comb": [[32, 1, 1, "", "BGMWMultiplier"], [32, 1, 1, "", "CombMultiplier"]], "pyecsca.ec.mult.comb.BGMWMultiplier": [[32, 3, 1, "", "accumulation_order"], [32, 3, 1, "", "direction"], [32, 3, 1, "", "formulas"], [32, 2, 1, "", "init"], [32, 2, 1, "", "multiply"], [32, 3, 1, "", "optionals"], [32, 3, 1, "", "requires"], [32, 3, 1, "", "short_circuit"], [32, 3, 1, "", "width"]], "pyecsca.ec.mult.comb.BGMWMultiplier.init.params": [[32, 4, 1, "", "params"], [32, 4, 1, "", "point"]], "pyecsca.ec.mult.comb.BGMWMultiplier.multiply.params": [[32, 4, 1, "", "scalar"]], "pyecsca.ec.mult.comb.BGMWMultiplier.params": [[32, 4, 1, "", "accumulation_order"], [32, 4, 1, "", "direction"], [32, 4, 1, "", "width"]], "pyecsca.ec.mult.comb.CombMultiplier": [[32, 3, 1, "", "accumulation_order"], [32, 3, 1, "", "formulas"], [32, 2, 1, "", "init"], [32, 2, 1, "", "multiply"], [32, 3, 1, "", "optionals"], [32, 3, 1, "", "requires"], [32, 3, 1, "", "short_circuit"], [32, 3, 1, "", "width"]], "pyecsca.ec.mult.comb.CombMultiplier.init.params": [[32, 4, 1, "", "params"], [32, 4, 1, "", "point"]], "pyecsca.ec.mult.comb.CombMultiplier.multiply.params": [[32, 4, 1, "", "scalar"]], "pyecsca.ec.mult.comb.CombMultiplier.params": [[32, 4, 1, "", "accumulation_order"], [32, 4, 1, "", "width"]], "pyecsca.ec.mult.fixed": [[33, 1, 1, "", "FullPrecompMultiplier"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier": [[33, 3, 1, "", "accumulation_order"], [33, 3, 1, "", "always"], [33, 3, 1, "", "complete"], [33, 3, 1, "", "direction"], [33, 3, 1, "", "formulas"], [33, 2, 1, "", "init"], [33, 2, 1, "", "multiply"], [33, 3, 1, "", "optionals"], [33, 3, 1, "", "requires"], [33, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier.init.params": [[33, 4, 1, "", "params"], [33, 4, 1, "", "point"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier.multiply.params": [[33, 4, 1, "", "scalar"]], "pyecsca.ec.mult.fixed.FullPrecompMultiplier.params": [[33, 4, 1, "", "accumulation_order"], [33, 4, 1, "", "always"], [33, 4, 1, "", "complete"], [33, 4, 1, "", "direction"]], "pyecsca.ec.mult.ladder": [[34, 1, 1, "", "DifferentialLadderMultiplier"], [34, 1, 1, "", "LadderMultiplier"], [34, 1, 1, "", "SimpleLadderMultiplier"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier": [[34, 3, 1, "", "complete"], [34, 3, 1, "", "formulas"], [34, 2, 1, "", "init"], [34, 2, 1, "", "multiply"], [34, 3, 1, "", "optionals"], [34, 3, 1, "", "requires"], [34, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.init.params": [[34, 4, 1, "", "params"], [34, 4, 1, "", "point"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.multiply.params": [[34, 4, 1, "", "scalar"]], "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.params": [[34, 4, 1, "", "complete"], [34, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.LadderMultiplier": [[34, 3, 1, "", "complete"], [34, 3, 1, "", "formulas"], [34, 2, 1, "", "init"], [34, 2, 1, "", "multiply"], [34, 3, 1, "", "optionals"], [34, 3, 1, "", "requires"], [34, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.LadderMultiplier.init.params": [[34, 4, 1, "", "params"], [34, 4, 1, "", "point"]], "pyecsca.ec.mult.ladder.LadderMultiplier.multiply.params": [[34, 4, 1, "", "scalar"]], "pyecsca.ec.mult.ladder.LadderMultiplier.params": [[34, 4, 1, "", "complete"], [34, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier": [[34, 3, 1, "", "complete"], [34, 3, 1, "", "formulas"], [34, 2, 1, "", "init"], [34, 2, 1, "", "multiply"], [34, 3, 1, "", "optionals"], [34, 3, 1, "", "requires"], [34, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.init.params": [[34, 4, 1, "", "params"], [34, 4, 1, "", "point"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.multiply.params": [[34, 4, 1, "", "scalar"]], "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.params": [[34, 4, 1, "", "complete"], [34, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.naf": [[35, 1, 1, "", "BinaryNAFMultiplier"], [35, 1, 1, "", "WindowNAFMultiplier"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier": [[35, 3, 1, "", "accumulation_order"], [35, 3, 1, "", "direction"], [35, 3, 1, "", "formulas"], [35, 2, 1, "", "init"], [35, 2, 1, "", "multiply"], [35, 3, 1, "", "optionals"], [35, 3, 1, "", "requires"], [35, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier.init.params": [[35, 4, 1, "", "params"], [35, 4, 1, "", "point"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier.multiply.params": [[35, 4, 1, "", "scalar"]], "pyecsca.ec.mult.naf.BinaryNAFMultiplier.params": [[35, 4, 1, "", "accumulation_order"], [35, 4, 1, "", "direction"], [35, 4, 1, "", "short_circuit"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier": [[35, 3, 1, "", "accumulation_order"], [35, 3, 1, "", "formulas"], [35, 2, 1, "", "init"], [35, 2, 1, "", "multiply"], [35, 3, 1, "", "optionals"], [35, 3, 1, "", "precompute_negation"], [35, 3, 1, "", "requires"], [35, 3, 1, "", "short_circuit"], [35, 3, 1, "", "width"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier.init.params": [[35, 4, 1, "", "params"], [35, 4, 1, "", "point"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier.multiply.params": [[35, 4, 1, "", "scalar"]], "pyecsca.ec.mult.naf.WindowNAFMultiplier.params": [[35, 4, 1, "", "accumulation_order"], [35, 4, 1, "", "precompute_negation"], [35, 4, 1, "", "short_circuit"], [35, 4, 1, "", "width"]], "pyecsca.ec.mult.window": [[36, 1, 1, "", "FixedWindowLTRMultiplier"], [36, 1, 1, "", "SlidingWindowMultiplier"], [36, 1, 1, "", "WindowBoothMultiplier"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier": [[36, 3, 1, "", "accumulation_order"], [36, 3, 1, "", "formulas"], [36, 2, 1, "", "init"], [36, 3, 1, "", "m"], [36, 2, 1, "", "multiply"], [36, 3, 1, "", "optionals"], [36, 3, 1, "", "requires"], [36, 3, 1, "", "short_circuit"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.init.params": [[36, 4, 1, "", "params"], [36, 4, 1, "", "point"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.multiply.params": [[36, 4, 1, "", "scalar"]], "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.params": [[36, 4, 1, "", "accumulation_order"], [36, 4, 1, "", "m"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier": [[36, 3, 1, "", "accumulation_order"], [36, 3, 1, "", "formulas"], [36, 2, 1, "", "init"], [36, 2, 1, "", "multiply"], [36, 3, 1, "", "optionals"], [36, 3, 1, "", "recoding_direction"], [36, 3, 1, "", "requires"], [36, 3, 1, "", "short_circuit"], [36, 3, 1, "", "width"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier.init.params": [[36, 4, 1, "", "params"], [36, 4, 1, "", "point"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier.multiply.params": [[36, 4, 1, "", "scalar"]], "pyecsca.ec.mult.window.SlidingWindowMultiplier.params": [[36, 4, 1, "", "accumulation_order"], [36, 4, 1, "", "recoding_direction"], [36, 4, 1, "", "width"]], "pyecsca.ec.mult.window.WindowBoothMultiplier": [[36, 3, 1, "", "accumulation_order"], [36, 3, 1, "", "formulas"], [36, 2, 1, "", "init"], [36, 2, 1, "", "multiply"], [36, 3, 1, "", "optionals"], [36, 3, 1, "", "precompute_negation"], [36, 3, 1, "", "requires"], [36, 3, 1, "", "short_circuit"], [36, 3, 1, "", "width"]], "pyecsca.ec.mult.window.WindowBoothMultiplier.init.params": [[36, 4, 1, "", "params"], [36, 4, 1, "", "point"]], "pyecsca.ec.mult.window.WindowBoothMultiplier.multiply.params": [[36, 4, 1, "", "scalar"]], "pyecsca.ec.mult.window.WindowBoothMultiplier.params": [[36, 4, 1, "", "accumulation_order"], [36, 4, 1, "", "precompute_negation"], [36, 4, 1, "", "short_circuit"], [36, 4, 1, "", "width"]], "pyecsca.ec.op": [[37, 1, 1, "", "CodeOp"], [37, 1, 1, "", "OpType"]], "pyecsca.ec.op.CodeOp": [[37, 3, 1, "", "code"], [37, 3, 1, "", "compiled"], [37, 3, 1, "", "constants"], [37, 3, 1, "", "operator"], [37, 3, 1, "", "parameters"], [37, 6, 1, "", "parents"], [37, 3, 1, "", "result"], [37, 3, 1, "", "variables"]], "pyecsca.ec.op.OpType": [[37, 3, 1, "", "Add"], [37, 3, 1, "", "Div"], [37, 3, 1, "", "Id"], [37, 3, 1, "", "Inv"], [37, 3, 1, "", "Mult"], [37, 3, 1, "", "Neg"], [37, 3, 1, "", "Pow"], [37, 3, 1, "", "Sqr"], [37, 3, 1, "", "Sub"]], "pyecsca.ec.params": [[38, 1, 1, "", "DomainParameterCategory"], [38, 1, 1, "", "DomainParameters"], [38, 5, 1, "", "get_category"], [38, 5, 1, "", "get_params"], [38, 5, 1, "", "load_category"], [38, 5, 1, "", "load_params"], [38, 5, 1, "", "load_params_ecgen"], [38, 5, 1, "", "load_params_ectester"]], "pyecsca.ec.params.DomainParameterCategory": [[38, 3, 1, "", "curves"], [38, 3, 1, "", "description"], [38, 3, 1, "", "name"]], "pyecsca.ec.params.DomainParameters": [[38, 3, 1, "", "category"], [38, 3, 1, "", "cofactor"], [38, 3, 1, "", "curve"], [38, 3, 1, "", "generator"], [38, 3, 1, "", "name"], [38, 3, 1, "", "order"], [38, 2, 1, "", "to_affine"], [38, 2, 1, "", "to_coords"]], "pyecsca.ec.params.DomainParameters.to_coords.params": [[38, 4, 1, "", "coordinate_model"]], "pyecsca.ec.params.get_category.params": [[38, 4, 1, "", "category"], [38, 4, 1, "", "coords"], [38, 4, 1, "", "infty"]], "pyecsca.ec.params.get_params.params": [[38, 4, 1, "", "category"], [38, 4, 1, "", "coords"], [38, 4, 1, "", "infty"], [38, 4, 1, "", "name"]], "pyecsca.ec.params.load_category.params": [[38, 4, 1, "", "coords"], [38, 4, 1, "", "file"], [38, 4, 1, "", "infty"]], "pyecsca.ec.params.load_params.params": [[38, 4, 1, "", "coords"], [38, 4, 1, "", "file"], [38, 4, 1, "", "infty"]], "pyecsca.ec.params.load_params_ecgen.params": [[38, 4, 1, "", "coords"], [38, 4, 1, "", "file"], [38, 4, 1, "", "infty"]], "pyecsca.ec.params.load_params_ectester.params": [[38, 4, 1, "", "coords"], [38, 4, 1, "", "file"], [38, 4, 1, "", "infty"]], "pyecsca.ec.point": [[39, 1, 1, "", "CoordinateMappingAction"], [39, 1, 1, "", "InfinityPoint"], [39, 1, 1, "", "Point"]], "pyecsca.ec.point.CoordinateMappingAction": [[39, 2, 1, "", "exit"], [39, 3, 1, "", "inside"], [39, 3, 1, "", "model_from"], [39, 3, 1, "", "model_to"], [39, 3, 1, "", "point"], [39, 6, 1, "", "result"]], "pyecsca.ec.point.InfinityPoint": [[39, 3, 1, "", "coordinate_model"], [39, 3, 1, "", "coords"], [39, 2, 1, "", "equals"], [39, 2, 1, "", "equals_affine"], [39, 2, 1, "", "equals_scaled"], [39, 3, 1, "", "field"], [39, 2, 1, "", "to_affine"], [39, 2, 1, "", "to_model"]], "pyecsca.ec.point.InfinityPoint.equals_scaled.params": [[39, 4, 1, "", "other"]], "pyecsca.ec.point.Point": [[39, 3, 1, "", "coordinate_model"], [39, 3, 1, "", "coords"], [39, 2, 1, "", "equals"], [39, 2, 1, "", "equals_affine"], [39, 2, 1, "", "equals_scaled"], [39, 3, 1, "", "field"], [39, 2, 1, "", "to_affine"], [39, 2, 1, "", "to_model"]], "pyecsca.ec.point.Point.equals_scaled.params": [[39, 4, 1, "", "other"]], "pyecsca.ec.scalar": [[40, 5, 1, "", "booth"], [40, 5, 1, "", "booth_window"], [40, 5, 1, "", "booth_word"], [40, 5, 1, "", "convert_base"], [40, 5, 1, "", "naf"], [40, 5, 1, "", "sliding_window_ltr"], [40, 5, 1, "", "sliding_window_rtl"], [40, 5, 1, "", "wnaf"]], "pyecsca.ec.scalar.booth.params": [[40, 4, 1, "", "k"]], "pyecsca.ec.scalar.booth_window.params": [[40, 4, 1, "", "blen"], [40, 4, 1, "", "k"], [40, 4, 1, "", "w"]], "pyecsca.ec.scalar.booth_word.params": [[40, 4, 1, "", "digit"], [40, 4, 1, "", "w"]], "pyecsca.ec.scalar.convert_base.params": [[40, 4, 1, "", "base"], [40, 4, 1, "", "i"]], "pyecsca.ec.scalar.naf.params": [[40, 4, 1, "", "k"]], "pyecsca.ec.scalar.sliding_window_ltr.params": [[40, 4, 1, "", "i"], [40, 4, 1, "", "w"]], "pyecsca.ec.scalar.sliding_window_rtl.params": [[40, 4, 1, "", "i"], [40, 4, 1, "", "w"]], "pyecsca.ec.scalar.wnaf.params": [[40, 4, 1, "", "k"], [40, 4, 1, "", "w"]], "pyecsca.ec.signature": [[41, 1, 1, "", "ECDSAAction"], [41, 1, 1, "", "ECDSASignAction"], [41, 1, 1, "", "ECDSAVerifyAction"], [41, 1, 1, "", "ECDSA_NONE"], [41, 1, 1, "", "ECDSA_SHA1"], [41, 1, 1, "", "ECDSA_SHA224"], [41, 1, 1, "", "ECDSA_SHA256"], [41, 1, 1, "", "ECDSA_SHA384"], [41, 1, 1, "", "ECDSA_SHA512"], [41, 1, 1, "", "Signature"], [41, 1, 1, "", "SignatureResult"]], "pyecsca.ec.signature.ECDSAAction": [[41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "inside"], [41, 3, 1, "", "msg"], [41, 3, 1, "", "params"]], "pyecsca.ec.signature.ECDSASignAction": [[41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "inside"], [41, 3, 1, "", "msg"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"]], "pyecsca.ec.signature.ECDSAVerifyAction": [[41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "inside"], [41, 3, 1, "", "msg"], [41, 3, 1, "", "params"], [41, 3, 1, "", "pubkey"], [41, 3, 1, "", "signature"]], "pyecsca.ec.signature.ECDSA_NONE": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA1": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA224": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA256": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA384": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.ECDSA_SHA512": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.Signature": [[41, 3, 1, "", "add"], [41, 6, 1, "", "can_sign"], [41, 6, 1, "", "can_verify"], [41, 3, 1, "", "hash_algo"], [41, 3, 1, "", "mult"], [41, 3, 1, "", "params"], [41, 3, 1, "", "privkey"], [41, 3, 1, "", "pubkey"], [41, 2, 1, "", "sign_data"], [41, 2, 1, "", "sign_hash"], [41, 2, 1, "", "verify_data"], [41, 2, 1, "", "verify_hash"]], "pyecsca.ec.signature.SignatureResult": [[41, 2, 1, "", "from_DER"], [41, 3, 1, "", "r"], [41, 3, 1, "", "s"], [41, 2, 1, "", "to_DER"]], "pyecsca.ec.transformations": [[42, 5, 1, "", "M2E"], [42, 5, 1, "", "M2SW"], [42, 5, 1, "", "M2TE"], [42, 5, 1, "", "SW2E"], [42, 5, 1, "", "SW2M"], [42, 5, 1, "", "SW2TE"], [42, 5, 1, "", "TE2E"], [42, 5, 1, "", "TE2M"], [42, 5, 1, "", "TE2SW"]], "pyecsca.ec.transformations.M2E.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.M2SW.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.M2TE.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.SW2E.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.SW2M.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.SW2TE.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.TE2E.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.TE2M.params": [[42, 4, 1, "", "params"]], "pyecsca.ec.transformations.TE2SW.params": [[42, 4, 1, "", "params"]], "pyecsca.misc": [[44, 0, 0, "-", "cache"], [45, 0, 0, "-", "cfg"], [46, 0, 0, "-", "utils"]], "pyecsca.misc.cache": [[44, 5, 1, "", "simplify"], [44, 5, 1, "", "sympify"]], "pyecsca.misc.cfg": [[45, 1, 1, "", "Config"], [45, 1, 1, "", "ECConfig"], [45, 1, 1, "", "LoggingConfig"], [45, 1, 1, "", "TemporaryConfig"], [45, 5, 1, "", "getconfig"], [45, 5, 1, "", "resetconfig"], [45, 5, 1, "", "setconfig"]], "pyecsca.misc.cfg.Config": [[45, 3, 1, "", "ec"], [45, 3, 1, "", "log"]], "pyecsca.misc.cfg.ECConfig": [[45, 6, 1, "", "mod_implementation"], [45, 6, 1, "", "no_inverse_action"], [45, 6, 1, "", "non_residue_action"], [45, 6, 1, "", "unsatisfied_coordinate_assumption_action"], [45, 6, 1, "", "unsatisfied_formula_assumption_action"]], "pyecsca.misc.cfg.LoggingConfig": [[45, 3, 1, "", "enabled"]], "pyecsca.misc.cfg.TemporaryConfig": [[45, 3, 1, "", "token"]], "pyecsca.misc.cfg.resetconfig.params": [[45, 4, 1, "", "token"]], "pyecsca.misc.cfg.setconfig.params": [[45, 4, 1, "", "cfg"]], "pyecsca.misc.utils": [[46, 1, 1, "", "TaskExecutor"], [46, 5, 1, "", "in_notebook"], [46, 5, 1, "", "log"], [46, 5, 1, "", "peval"], [46, 5, 1, "", "pexec"], [46, 5, 1, "", "silent"], [46, 5, 1, "", "warn"]], "pyecsca.misc.utils.TaskExecutor": [[46, 2, 1, "", "as_completed"], [46, 3, 1, "", "futures"], [46, 3, 1, "", "keys"], [46, 2, 1, "", "map"], [46, 2, 1, "", "shutdown"], [46, 2, 1, "", "submit"], [46, 2, 1, "", "submit_task"], [46, 6, 1, "", "tasks"]], "pyecsca.sca": [[48, 0, 0, "-", "attack"], [52, 0, 0, "-", "re"], [59, 0, 0, "-", "scope"], [64, 0, 0, "-", "stacked_traces"], [67, 0, 0, "-", "target"], [79, 0, 0, "-", "trace"], [90, 0, 0, "-", "trace_set"]], "pyecsca.sca.attack": [[49, 0, 0, "-", "CPA"], [50, 0, 0, "-", "DPA"], [51, 0, 0, "-", "leakage_model"]], "pyecsca.sca.attack.CPA": [[49, 1, 1, "", "CPA"]], "pyecsca.sca.attack.CPA.CPA": [[49, 2, 1, "", "compute_correlation_trace"], [49, 2, 1, "", "compute_intermediate_value"], [49, 3, 1, "", "correlations"], [49, 3, 1, "", "leakage_model"], [49, 3, 1, "", "mult"], [49, 3, 1, "", "params"], [49, 2, 1, "", "perform"], [49, 2, 1, "", "plot_correlations"], [49, 3, 1, "", "points"], [49, 2, 1, "", "recover_bit"], [49, 3, 1, "", "traces"]], "pyecsca.sca.attack.CPA.CPA.params": [[49, 4, 1, "", "mult"], [49, 4, 1, "", "params"], [49, 4, 1, "", "points"], [49, 4, 1, "", "traces"]], "pyecsca.sca.attack.DPA": [[50, 1, 1, "", "DPA"]], "pyecsca.sca.attack.DPA.DPA": [[50, 2, 1, "", "calculate_difference_of_means"], [50, 2, 1, "", "compute_split_point"], [50, 3, 1, "", "doms"], [50, 3, 1, "", "mult"], [50, 3, 1, "", "params"], [50, 2, 1, "", "perform"], [50, 2, 1, "", "plot_difference_of_means"], [50, 3, 1, "", "points"], [50, 2, 1, "", "recover_bit"], [50, 2, 1, "", "split_traces"], [50, 3, 1, "", "traces"]], "pyecsca.sca.attack.DPA.DPA.params": [[50, 4, 1, "", "mult"], [50, 4, 1, "", "params"], [50, 4, 1, "", "points"], [50, 4, 1, "", "traces"]], "pyecsca.sca.attack.leakage_model": [[51, 1, 1, "", "Bit"], [51, 1, 1, "", "BitLength"], [51, 1, 1, "", "HammingDistance"], [51, 1, 1, "", "HammingWeight"], [51, 1, 1, "", "Identity"], [51, 1, 1, "", "LeakageModel"], [51, 1, 1, "", "Noise"], [51, 1, 1, "", "NormalNoice"], [51, 1, 1, "", "Slice"], [51, 1, 1, "", "ZeroNoise"]], "pyecsca.sca.attack.leakage_model.Bit": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.BitLength": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.HammingDistance": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.HammingWeight": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.Identity": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.LeakageModel": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.attack.leakage_model.Slice": [[51, 3, 1, "", "num_args"]], "pyecsca.sca.re": [[53, 0, 0, "-", "base"], [55, 0, 0, "-", "rpa"], [56, 0, 0, "-", "structural"], [57, 0, 0, "-", "tree"], [58, 0, 0, "-", "zvp"]], "pyecsca.sca.re.base": [[53, 1, 1, "", "RE"]], "pyecsca.sca.re.base.RE": [[53, 2, 1, "", "build_tree"], [53, 3, 1, "", "configs"], [53, 2, 1, "", "run"], [53, 3, 1, "", "tree"]], "pyecsca.sca.re.rpa": [[55, 1, 1, "", "MultipleContext"], [55, 1, 1, "", "RPA"], [55, 5, 1, "", "rpa_distinguish"], [55, 5, 1, "", "rpa_input_point"], [55, 5, 1, "", "rpa_point_0y"], [55, 5, 1, "", "rpa_point_x0"]], "pyecsca.sca.re.rpa.MultipleContext": [[55, 3, 1, "", "base"], [55, 2, 1, "", "enter_action"], [55, 2, 1, "", "exit_action"], [55, 3, 1, "", "formulas"], [55, 3, 1, "", "inside"], [55, 3, 1, "", "parents"], [55, 3, 1, "", "points"]], "pyecsca.sca.re.rpa.MultipleContext.enter_action.params": [[55, 4, 1, "", "action"]], "pyecsca.sca.re.rpa.MultipleContext.exit_action.params": [[55, 4, 1, "", "action"]], "pyecsca.sca.re.rpa.RPA": [[55, 3, 1, "", "P0"], [55, 2, 1, "", "build_tree"], [55, 3, 1, "", "configs"], [55, 3, 1, "", "params"], [55, 2, 1, "", "run"], [55, 3, 1, "", "scalars"], [55, 3, 1, "", "tree"]], "pyecsca.sca.re.rpa.rpa_distinguish.params": [[55, 4, 1, "", "bound"], [55, 4, 1, "", "majority"], [55, 4, 1, "", "multipliers"], [55, 4, 1, "", "oracle"], [55, 4, 1, "", "params"], [55, 4, 1, "", "tries"], [55, 4, 1, "", "use_init"], [55, 4, 1, "", "use_multiply"]], "pyecsca.sca.re.tree": [[57, 1, 1, "", "Map"], [57, 1, 1, "", "Node"], [57, 1, 1, "", "Tree"]], "pyecsca.sca.re.tree.Map": [[57, 3, 1, "", "cfg_map"], [57, 6, 1, "", "cfgs"], [57, 3, 1, "", "codomain"], [57, 2, 1, "", "deduplicate"], [57, 2, 1, "", "describe"], [57, 3, 1, "", "domain"], [57, 2, 1, "", "from_io_maps"], [57, 2, 1, "", "from_sets"], [57, 3, 1, "", "mapping"], [57, 2, 1, "", "merge"]], "pyecsca.sca.re.tree.Node": [[57, 6, 1, "", "ancestors"], [57, 6, 1, "", "anchestors"], [57, 3, 1, "", "cfgs"], [57, 6, 1, "", "children"], [57, 6, 1, "", "depth"], [57, 6, 1, "", "descendants"], [57, 3, 1, "", "dmap_index"], [57, 3, 1, "", "dmap_input"], [57, 6, 1, "", "height"], [57, 6, 1, "", "is_leaf"], [57, 6, 1, "", "is_root"], [57, 2, 1, "", "iter_path_reverse"], [57, 6, 1, "", "leaves"], [57, 6, 1, "", "parent"], [57, 6, 1, "", "path"], [57, 3, 1, "", "response"], [57, 6, 1, "", "root"], [57, 3, 1, "", "separator"], [57, 6, 1, "", "siblings"], [57, 6, 1, "", "size"]], "pyecsca.sca.re.tree.Tree": [[57, 2, 1, "", "build"], [57, 2, 1, "", "describe"], [57, 2, 1, "", "expand"], [57, 6, 1, "", "height"], [57, 6, 1, "", "leaves"], [57, 3, 1, "", "maps"], [57, 6, 1, "", "precise"], [57, 2, 1, "", "render"], [57, 2, 1, "", "render_basic"], [57, 3, 1, "", "root"], [57, 6, 1, "", "size"]], "pyecsca.sca.re.zvp": [[58, 5, 1, "", "compute_factor_set"], [58, 5, 1, "", "map_to_affine"], [58, 5, 1, "", "zvp_points"]], "pyecsca.sca.re.zvp.compute_factor_set.params": [[58, 4, 1, "", "affine"], [58, 4, 1, "", "filter_nonhomo"], [58, 4, 1, "", "formula"], [58, 4, 1, "", "xonly"]], "pyecsca.sca.re.zvp.map_to_affine.params": [[58, 4, 1, "", "formula"], [58, 4, 1, "", "polys"]], "pyecsca.sca.re.zvp.zvp_points.params": [[58, 4, 1, "", "curve"], [58, 4, 1, "", "k"], [58, 4, 1, "", "n"], [58, 4, 1, "", "poly"]], "pyecsca.sca.scope": [[60, 0, 0, "-", "base"], [61, 0, 0, "-", "chipwhisperer"], [62, 0, 0, "-", "picoscope_alt"], [63, 0, 0, "-", "picoscope_sdk"]], "pyecsca.sca.scope.base": [[60, 1, 1, "", "SampleType"], [60, 1, 1, "", "Scope"]], "pyecsca.sca.scope.base.SampleType": [[60, 3, 1, "", "Raw"], [60, 3, 1, "", "Volt"]], "pyecsca.sca.scope.base.Scope": [[60, 2, 1, "", "arm"], [60, 2, 1, "", "capture"], [60, 6, 1, "", "channels"], [60, 2, 1, "", "close"], [60, 2, 1, "", "open"], [60, 2, 1, "", "retrieve"], [60, 2, 1, "", "setup_capture"], [60, 2, 1, "", "setup_channel"], [60, 2, 1, "", "setup_frequency"], [60, 2, 1, "", "setup_trigger"], [60, 2, 1, "", "stop"]], "pyecsca.sca.scope.base.Scope.capture.params": [[60, 4, 1, "", "timeout"]], "pyecsca.sca.scope.base.Scope.retrieve.params": [[60, 4, 1, "", "channel"], [60, 4, 1, "", "dtype"], [60, 4, 1, "", "type"]], "pyecsca.sca.scope.base.Scope.setup_capture.params": [[60, 4, 1, "", "channel"], [60, 4, 1, "", "enable"]], "pyecsca.sca.scope.base.Scope.setup_channel.params": [[60, 4, 1, "", "channel"], [60, 4, 1, "", "coupling"], [60, 4, 1, "", "enable"], [60, 4, 1, "", "offset"], [60, 4, 1, "", "range"]], "pyecsca.sca.scope.base.Scope.setup_frequency.params": [[60, 4, 1, "", "frequency"], [60, 4, 1, "", "posttrig"], [60, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.base.Scope.setup_trigger.params": [[60, 4, 1, "", "channel"], [60, 4, 1, "", "delay"], [60, 4, 1, "", "direction"], [60, 4, 1, "", "enable"], [60, 4, 1, "", "threshold"], [60, 4, 1, "", "timeout"]], "pyecsca.sca.scope.chipwhisperer": [[61, 1, 1, "", "ChipWhispererScope"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope": [[61, 2, 1, "", "arm"], [61, 2, 1, "", "capture"], [61, 6, 1, "", "channels"], [61, 2, 1, "", "close"], [61, 2, 1, "", "open"], [61, 2, 1, "", "retrieve"], [61, 2, 1, "", "setup_capture"], [61, 2, 1, "", "setup_channel"], [61, 2, 1, "", "setup_frequency"], [61, 2, 1, "", "setup_trigger"], [61, 2, 1, "", "stop"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.capture.params": [[61, 4, 1, "", "timeout"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.retrieve.params": [[61, 4, 1, "", "channel"], [61, 4, 1, "", "dtype"], [61, 4, 1, "", "type"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_capture.params": [[61, 4, 1, "", "channel"], [61, 4, 1, "", "enable"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_channel.params": [[61, 4, 1, "", "channel"], [61, 4, 1, "", "coupling"], [61, 4, 1, "", "enable"], [61, 4, 1, "", "offset"], [61, 4, 1, "", "range"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_frequency.params": [[61, 4, 1, "", "frequency"], [61, 4, 1, "", "posttrig"], [61, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_trigger.params": [[61, 4, 1, "", "channel"], [61, 4, 1, "", "delay"], [61, 4, 1, "", "direction"], [61, 4, 1, "", "enable"], [61, 4, 1, "", "threshold"], [61, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_alt": [[62, 1, 1, "", "PicoScopeAlt"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt": [[62, 2, 1, "", "arm"], [62, 2, 1, "", "capture"], [62, 6, 1, "", "channels"], [62, 2, 1, "", "close"], [62, 2, 1, "", "open"], [62, 2, 1, "", "retrieve"], [62, 2, 1, "", "setup_capture"], [62, 2, 1, "", "setup_channel"], [62, 2, 1, "", "setup_frequency"], [62, 2, 1, "", "setup_trigger"], [62, 2, 1, "", "stop"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.capture.params": [[62, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.params": [[62, 4, 1, "", "ps"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.retrieve.params": [[62, 4, 1, "", "channel"], [62, 4, 1, "", "dtype"], [62, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_capture.params": [[62, 4, 1, "", "channel"], [62, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_channel.params": [[62, 4, 1, "", "channel"], [62, 4, 1, "", "coupling"], [62, 4, 1, "", "enable"], [62, 4, 1, "", "offset"], [62, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_frequency.params": [[62, 4, 1, "", "frequency"], [62, 4, 1, "", "posttrig"], [62, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_trigger.params": [[62, 4, 1, "", "channel"], [62, 4, 1, "", "delay"], [62, 4, 1, "", "direction"], [62, 4, 1, "", "enable"], [62, 4, 1, "", "threshold"], [62, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk": [[63, 1, 1, "", "PS3000Scope"], [63, 1, 1, "", "PS3000aScope"], [63, 1, 1, "", "PS4000Scope"], [63, 1, 1, "", "PS5000Scope"], [63, 1, 1, "", "PS6000Scope"], [63, 1, 1, "", "PicoScopeSdk"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope": [[63, 3, 1, "", "CHANNELS"], [63, 3, 1, "", "COUPLING"], [63, 3, 1, "", "MAX_ADC_VALUE"], [63, 3, 1, "", "MIN_ADC_VALUE"], [63, 3, 1, "", "MODULE"], [63, 3, 1, "", "PREFIX"], [63, 3, 1, "", "RANGES"], [63, 3, 1, "", "TIME_UNITS"], [63, 3, 1, "", "TRIGGERS"], [63, 2, 1, "", "arm"], [63, 3, 1, "", "buffers"], [63, 2, 1, "", "capture"], [63, 6, 1, "", "channels"], [63, 2, 1, "", "close"], [63, 3, 1, "", "frequency"], [63, 2, 1, "", "get_variant"], [63, 3, 1, "", "handle"], [63, 2, 1, "", "open"], [63, 3, 1, "", "posttrig"], [63, 3, 1, "", "pretrig"], [63, 3, 1, "", "ranges"], [63, 2, 1, "", "retrieve"], [63, 3, 1, "", "samples"], [63, 2, 1, "", "set_buffer"], [63, 2, 1, "", "set_channel"], [63, 2, 1, "", "set_frequency"], [63, 2, 1, "", "set_trigger"], [63, 2, 1, "", "setup_capture"], [63, 2, 1, "", "setup_channel"], [63, 2, 1, "", "setup_frequency"], [63, 2, 1, "", "setup_trigger"], [63, 2, 1, "", "stop"], [63, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.capture.params": [[63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.retrieve.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "dtype"], [63, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_capture.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_channel.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "coupling"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "offset"], [63, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_frequency.params": [[63, 4, 1, "", "frequency"], [63, 4, 1, "", "posttrig"], [63, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_trigger.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "delay"], [63, 4, 1, "", "direction"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "threshold"], [63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope": [[63, 3, 1, "", "CHANNELS"], [63, 3, 1, "", "COUPLING"], [63, 3, 1, "", "MAX_ADC_VALUE"], [63, 3, 1, "", "MIN_ADC_VALUE"], [63, 3, 1, "", "MODULE"], [63, 3, 1, "", "PREFIX"], [63, 3, 1, "", "RANGES"], [63, 3, 1, "", "TIME_UNITS"], [63, 3, 1, "", "TRIGGERS"], [63, 2, 1, "", "arm"], [63, 3, 1, "", "buffers"], [63, 2, 1, "", "capture"], [63, 6, 1, "", "channels"], [63, 2, 1, "", "close"], [63, 3, 1, "", "frequency"], [63, 2, 1, "", "get_variant"], [63, 3, 1, "", "handle"], [63, 2, 1, "", "open"], [63, 3, 1, "", "posttrig"], [63, 3, 1, "", "pretrig"], [63, 3, 1, "", "ranges"], [63, 2, 1, "", "retrieve"], [63, 3, 1, "", "samples"], [63, 2, 1, "", "set_buffer"], [63, 2, 1, "", "set_channel"], [63, 2, 1, "", "set_frequency"], [63, 2, 1, "", "set_trigger"], [63, 2, 1, "", "setup_capture"], [63, 2, 1, "", "setup_channel"], [63, 2, 1, "", "setup_frequency"], [63, 2, 1, "", "setup_trigger"], [63, 2, 1, "", "stop"], [63, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.capture.params": [[63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.retrieve.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "dtype"], [63, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_capture.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_channel.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "coupling"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "offset"], [63, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_frequency.params": [[63, 4, 1, "", "frequency"], [63, 4, 1, "", "posttrig"], [63, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_trigger.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "delay"], [63, 4, 1, "", "direction"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "threshold"], [63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope": [[63, 3, 1, "", "CHANNELS"], [63, 3, 1, "", "COUPLING"], [63, 3, 1, "", "MAX_ADC_VALUE"], [63, 3, 1, "", "MIN_ADC_VALUE"], [63, 3, 1, "", "MODULE"], [63, 3, 1, "", "PREFIX"], [63, 3, 1, "", "RANGES"], [63, 3, 1, "", "TIME_UNITS"], [63, 3, 1, "", "TRIGGERS"], [63, 2, 1, "", "arm"], [63, 3, 1, "", "buffers"], [63, 2, 1, "", "capture"], [63, 6, 1, "", "channels"], [63, 2, 1, "", "close"], [63, 3, 1, "", "frequency"], [63, 2, 1, "", "get_variant"], [63, 3, 1, "", "handle"], [63, 2, 1, "", "open"], [63, 3, 1, "", "posttrig"], [63, 3, 1, "", "pretrig"], [63, 3, 1, "", "ranges"], [63, 2, 1, "", "retrieve"], [63, 3, 1, "", "samples"], [63, 2, 1, "", "set_buffer"], [63, 2, 1, "", "set_channel"], [63, 2, 1, "", "set_frequency"], [63, 2, 1, "", "set_trigger"], [63, 2, 1, "", "setup_capture"], [63, 2, 1, "", "setup_channel"], [63, 2, 1, "", "setup_frequency"], [63, 2, 1, "", "setup_trigger"], [63, 2, 1, "", "stop"], [63, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.capture.params": [[63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.retrieve.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "dtype"], [63, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_capture.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_channel.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "coupling"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "offset"], [63, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_frequency.params": [[63, 4, 1, "", "frequency"], [63, 4, 1, "", "posttrig"], [63, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_trigger.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "delay"], [63, 4, 1, "", "direction"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "threshold"], [63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope": [[63, 3, 1, "", "CHANNELS"], [63, 3, 1, "", "COUPLING"], [63, 3, 1, "", "MAX_ADC_VALUE"], [63, 3, 1, "", "MIN_ADC_VALUE"], [63, 3, 1, "", "MODULE"], [63, 3, 1, "", "PREFIX"], [63, 3, 1, "", "RANGES"], [63, 3, 1, "", "TIME_UNITS"], [63, 3, 1, "", "TRIGGERS"], [63, 2, 1, "", "arm"], [63, 3, 1, "", "buffers"], [63, 2, 1, "", "capture"], [63, 6, 1, "", "channels"], [63, 2, 1, "", "close"], [63, 3, 1, "", "frequency"], [63, 2, 1, "", "get_variant"], [63, 3, 1, "", "handle"], [63, 2, 1, "", "open"], [63, 3, 1, "", "posttrig"], [63, 3, 1, "", "pretrig"], [63, 3, 1, "", "ranges"], [63, 2, 1, "", "retrieve"], [63, 3, 1, "", "samples"], [63, 2, 1, "", "set_buffer"], [63, 2, 1, "", "set_channel"], [63, 2, 1, "", "set_frequency"], [63, 2, 1, "", "set_trigger"], [63, 2, 1, "", "setup_capture"], [63, 2, 1, "", "setup_channel"], [63, 2, 1, "", "setup_frequency"], [63, 2, 1, "", "setup_trigger"], [63, 2, 1, "", "stop"], [63, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.capture.params": [[63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.retrieve.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "dtype"], [63, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_capture.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_channel.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "coupling"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "offset"], [63, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_frequency.params": [[63, 4, 1, "", "frequency"], [63, 4, 1, "", "posttrig"], [63, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_trigger.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "delay"], [63, 4, 1, "", "direction"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "threshold"], [63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope": [[63, 3, 1, "", "CHANNELS"], [63, 3, 1, "", "COUPLING"], [63, 3, 1, "", "MAX_ADC_VALUE"], [63, 3, 1, "", "MIN_ADC_VALUE"], [63, 3, 1, "", "MODULE"], [63, 3, 1, "", "PREFIX"], [63, 3, 1, "", "RANGES"], [63, 3, 1, "", "TIME_UNITS"], [63, 3, 1, "", "TRIGGERS"], [63, 2, 1, "", "arm"], [63, 3, 1, "", "buffers"], [63, 2, 1, "", "capture"], [63, 6, 1, "", "channels"], [63, 2, 1, "", "close"], [63, 3, 1, "", "frequency"], [63, 2, 1, "", "get_variant"], [63, 3, 1, "", "handle"], [63, 2, 1, "", "open"], [63, 3, 1, "", "posttrig"], [63, 3, 1, "", "pretrig"], [63, 3, 1, "", "ranges"], [63, 2, 1, "", "retrieve"], [63, 3, 1, "", "samples"], [63, 2, 1, "", "set_buffer"], [63, 2, 1, "", "set_channel"], [63, 2, 1, "", "set_frequency"], [63, 2, 1, "", "set_trigger"], [63, 2, 1, "", "setup_capture"], [63, 2, 1, "", "setup_channel"], [63, 2, 1, "", "setup_frequency"], [63, 2, 1, "", "setup_trigger"], [63, 2, 1, "", "stop"], [63, 3, 1, "", "timebase"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.capture.params": [[63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.retrieve.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "dtype"], [63, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_capture.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_channel.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "coupling"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "offset"], [63, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_frequency.params": [[63, 4, 1, "", "frequency"], [63, 4, 1, "", "posttrig"], [63, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_trigger.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "delay"], [63, 4, 1, "", "direction"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "threshold"], [63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk": [[63, 3, 1, "", "CHANNELS"], [63, 3, 1, "", "COUPLING"], [63, 3, 1, "", "MAX_ADC_VALUE"], [63, 3, 1, "", "MIN_ADC_VALUE"], [63, 3, 1, "", "MODULE"], [63, 3, 1, "", "PREFIX"], [63, 3, 1, "", "RANGES"], [63, 3, 1, "", "TIME_UNITS"], [63, 3, 1, "", "TRIGGERS"], [63, 2, 1, "", "arm"], [63, 2, 1, "", "capture"], [63, 6, 1, "", "channels"], [63, 2, 1, "", "close"], [63, 2, 1, "", "get_variant"], [63, 2, 1, "", "open"], [63, 2, 1, "", "retrieve"], [63, 2, 1, "", "set_buffer"], [63, 2, 1, "", "set_channel"], [63, 2, 1, "", "set_frequency"], [63, 2, 1, "", "set_trigger"], [63, 2, 1, "", "setup_capture"], [63, 2, 1, "", "setup_channel"], [63, 2, 1, "", "setup_frequency"], [63, 2, 1, "", "setup_trigger"], [63, 2, 1, "", "stop"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.capture.params": [[63, 4, 1, "", "timeout"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.retrieve.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "dtype"], [63, 4, 1, "", "type"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_capture.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "enable"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_channel.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "coupling"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "offset"], [63, 4, 1, "", "range"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_frequency.params": [[63, 4, 1, "", "frequency"], [63, 4, 1, "", "posttrig"], [63, 4, 1, "", "pretrig"]], "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_trigger.params": [[63, 4, 1, "", "channel"], [63, 4, 1, "", "delay"], [63, 4, 1, "", "direction"], [63, 4, 1, "", "enable"], [63, 4, 1, "", "threshold"], [63, 4, 1, "", "timeout"]], "pyecsca.sca.stacked_traces": [[65, 0, 0, "-", "combine"], [66, 0, 0, "-", "stacked_traces"]], "pyecsca.sca.stacked_traces.combine": [[65, 1, 1, "", "BaseTraceManager"], [65, 1, 1, "", "CPUTraceManager"], [65, 1, 1, "", "GPUTraceManager"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager": [[65, 2, 1, "", "add"], [65, 2, 1, "", "average"], [65, 2, 1, "", "average_and_variance"], [65, 2, 1, "", "conditional_average"], [65, 2, 1, "", "standard_deviation"], [65, 2, 1, "", "variance"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.add.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average_and_variance.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.conditional_average.params": [[65, 4, 1, "", "condition"], [65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.standard_deviation.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.BaseTraceManager.variance.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager": [[65, 2, 1, "", "add"], [65, 2, 1, "", "average"], [65, 2, 1, "", "average_and_variance"], [65, 2, 1, "", "conditional_average"], [65, 2, 1, "", "pearson_corr"], [65, 2, 1, "", "standard_deviation"], [65, 3, 1, "", "traces"], [65, 2, 1, "", "variance"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.add.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average_and_variance.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.conditional_average.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.pearson_corr.params": [[65, 4, 1, "", "intermediate_values"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.standard_deviation.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.CPUTraceManager.variance.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager": [[65, 2, 1, "", "add"], [65, 2, 1, "", "average"], [65, 2, 1, "", "average_and_variance"], [65, 2, 1, "", "chunk_size_from_ratio"], [65, 2, 1, "", "conditional_average"], [65, 2, 1, "", "pearson_corr"], [65, 2, 1, "", "run"], [65, 2, 1, "", "standard_deviation"], [65, 6, 1, "", "traces_shape"], [65, 2, 1, "", "variance"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.add.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average_and_variance.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.conditional_average.params": [[65, 4, 1, "", "condition"], [65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.params": [[65, 4, 1, "", "chunk"], [65, 4, 1, "", "chunk_memory_ratio"], [65, 4, 1, "", "chunk_size"], [65, 4, 1, "", "stream_count"], [65, 4, 1, "", "tpb"], [65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.standard_deviation.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.combine.GPUTraceManager.variance.params": [[65, 4, 1, "", "traces"]], "pyecsca.sca.stacked_traces.stacked_traces": [[66, 1, 1, "", "StackedTraces"]], "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces": [[66, 2, 1, "", "fromarray"], [66, 2, 1, "", "fromtraceset"], [66, 3, 1, "", "meta"], [66, 3, 1, "", "samples"]], "pyecsca.sca.target": [[68, 0, 0, "-", "ISO7816"], [69, 0, 0, "-", "PCSC"], [70, 0, 0, "-", "base"], [71, 0, 0, "-", "binary"], [72, 0, 0, "-", "chipwhisperer"], [73, 0, 0, "-", "ectester"], [74, 0, 0, "-", "flash"], [75, 0, 0, "-", "leakage"], [76, 0, 0, "-", "leia"], [77, 0, 0, "-", "serial"], [78, 0, 0, "-", "simpleserial"]], "pyecsca.sca.target.ISO7816": [[68, 7, 1, "", "CardConnectionException"], [68, 1, 1, "", "CardProtocol"], [68, 1, 1, "", "CommandAPDU"], [68, 1, 1, "", "ISO7816"], [68, 1, 1, "", "ISO7816Target"], [68, 1, 1, "", "ResponseAPDU"]], "pyecsca.sca.target.ISO7816.CardConnectionException": [[68, 2, 1, "", "add_note"], [68, 3, 1, "", "args"], [68, 2, 1, "", "with_traceback"]], "pyecsca.sca.target.ISO7816.CardProtocol": [[68, 3, 1, "", "T0"], [68, 3, 1, "", "T1"], [68, 2, 1, "", "as_integer_ratio"], [68, 2, 1, "", "bit_count"], [68, 2, 1, "", "bit_length"], [68, 2, 1, "", "conjugate"], [68, 3, 1, "", "denominator"], [68, 2, 1, "", "from_bytes"], [68, 3, 1, "", "imag"], [68, 3, 1, "", "numerator"], [68, 3, 1, "", "real"], [68, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ISO7816.CommandAPDU": [[68, 3, 1, "", "cls"], [68, 3, 1, "", "data"], [68, 3, 1, "", "ins"], [68, 3, 1, "", "ne"], [68, 3, 1, "", "p1"], [68, 3, 1, "", "p2"]], "pyecsca.sca.target.ISO7816.ISO7816": [[68, 3, 1, "", "SW_APPLET_SELECT_FAILED"], [68, 3, 1, "", "SW_BYTES_REMAINING_00"], [68, 3, 1, "", "SW_CLA_NOT_SUPPORTED"], [68, 3, 1, "", "SW_COMMAND_NOT_ALLOWED"], [68, 3, 1, "", "SW_CONDITIONS_NOT_SATISFIED"], [68, 3, 1, "", "SW_CORRECT_LENGTH_00"], [68, 3, 1, "", "SW_DATA_INVALID"], [68, 3, 1, "", "SW_FILE_FULL"], [68, 3, 1, "", "SW_FILE_INVALID"], [68, 3, 1, "", "SW_FILE_NOT_FOUND"], [68, 3, 1, "", "SW_FUNC_NOT_SUPPORTED"], [68, 3, 1, "", "SW_INCORRECT_P1P2"], [68, 3, 1, "", "SW_INS_NOT_SUPPORTED"], [68, 3, 1, "", "SW_NO_ERROR"], [68, 3, 1, "", "SW_RECORD_NOT_FOUND"], [68, 3, 1, "", "SW_SECURITY_STATUS_NOT_SATISFIED"], [68, 3, 1, "", "SW_UNKNOWN"], [68, 3, 1, "", "SW_WRONG_DATA"], [68, 3, 1, "", "SW_WRONG_LENGTH"], [68, 3, 1, "", "SW_WRONG_P1P2"]], "pyecsca.sca.target.ISO7816.ISO7816Target": [[68, 6, 1, "", "atr"], [68, 2, 1, "", "connect"], [68, 2, 1, "", "disconnect"], [68, 2, 1, "", "select"], [68, 2, 1, "", "send_apdu"]], "pyecsca.sca.target.ISO7816.ISO7816Target.connect.params": [[68, 4, 1, "", "protocol"]], "pyecsca.sca.target.ISO7816.ISO7816Target.select.params": [[68, 4, 1, "", "aid"]], "pyecsca.sca.target.ISO7816.ISO7816Target.send_apdu.params": [[68, 4, 1, "", "apdu"]], "pyecsca.sca.target.ISO7816.ResponseAPDU": [[68, 3, 1, "", "data"], [68, 3, 1, "", "sw"]], "pyecsca.sca.target.PCSC": [[69, 1, 1, "", "PCSCTarget"]], "pyecsca.sca.target.PCSC.PCSCTarget": [[69, 6, 1, "", "atr"], [69, 2, 1, "", "connect"], [69, 2, 1, "", "disconnect"], [69, 2, 1, "", "select"], [69, 2, 1, "", "send_apdu"]], "pyecsca.sca.target.PCSC.PCSCTarget.connect.params": [[69, 4, 1, "", "protocol"]], "pyecsca.sca.target.PCSC.PCSCTarget.select.params": [[69, 4, 1, "", "aid"]], "pyecsca.sca.target.PCSC.PCSCTarget.send_apdu.params": [[69, 4, 1, "", "apdu"]], "pyecsca.sca.target.base": [[70, 1, 1, "", "Target"]], "pyecsca.sca.target.base.Target": [[70, 2, 1, "", "connect"], [70, 2, 1, "", "disconnect"]], "pyecsca.sca.target.binary": [[71, 1, 1, "", "BinaryTarget"]], "pyecsca.sca.target.binary.BinaryTarget": [[71, 3, 1, "", "binary"], [71, 2, 1, "", "connect"], [71, 3, 1, "", "debug_output"], [71, 2, 1, "", "disconnect"], [71, 3, 1, "", "process"], [71, 2, 1, "", "read"], [71, 2, 1, "", "write"]], "pyecsca.sca.target.binary.BinaryTarget.read.params": [[71, 4, 1, "", "num"], [71, 4, 1, "", "timeout"]], "pyecsca.sca.target.binary.BinaryTarget.write.params": [[71, 4, 1, "", "data"]], "pyecsca.sca.target.chipwhisperer": [[72, 1, 1, "", "ChipWhispererTarget"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget": [[72, 2, 1, "", "connect"], [72, 2, 1, "", "disconnect"], [72, 2, 1, "", "flash"], [72, 2, 1, "", "read"], [72, 2, 1, "", "recv_msgs"], [72, 2, 1, "", "reset"], [72, 2, 1, "", "send_cmd"], [72, 2, 1, "", "write"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.flash.params": [[72, 4, 1, "", "fw_path"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.read.params": [[72, 4, 1, "", "num"], [72, 4, 1, "", "timeout"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.recv_msgs.params": [[72, 4, 1, "", "timeout"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.send_cmd.params": [[72, 4, 1, "", "cmd"], [72, 4, 1, "", "timeout"]], "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.write.params": [[72, 4, 1, "", "data"]], "pyecsca.sca.target.ectester": [[73, 1, 1, "", "AllocateKaResponse"], [73, 1, 1, "", "AllocateResponse"], [73, 1, 1, "", "AllocateSigResponse"], [73, 1, 1, "", "AppletBaseEnum"], [73, 7, 1, "", "ChunkingException"], [73, 1, 1, "", "CleanupResponse"], [73, 1, 1, "", "ClearResponse"], [73, 1, 1, "", "CurveEnum"], [73, 1, 1, "", "ECDHResponse"], [73, 1, 1, "", "ECDSAResponse"], [73, 1, 1, "", "ECTesterTarget"], [73, 1, 1, "", "ECTesterTargetLEIA"], [73, 1, 1, "", "ECTesterTargetPCSC"], [73, 1, 1, "", "ExportEnum"], [73, 1, 1, "", "ExportResponse"], [73, 1, 1, "", "FormatEnum"], [73, 1, 1, "", "GenerateResponse"], [73, 1, 1, "", "InstructionEnum"], [73, 1, 1, "", "KeyAgreementEnum"], [73, 1, 1, "", "KeyBuildEnum"], [73, 1, 1, "", "KeyClassEnum"], [73, 1, 1, "", "KeyEnum"], [73, 1, 1, "", "KeypairEnum"], [73, 1, 1, "", "ParameterEnum"], [73, 1, 1, "", "RunModeEnum"], [73, 1, 1, "", "RunModeResponse"], [73, 1, 1, "", "SetResponse"], [73, 1, 1, "", "SignatureEnum"], [73, 1, 1, "", "TransformResponse"], [73, 1, 1, "", "TransformationEnum"]], "pyecsca.sca.target.ectester.AllocateKaResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.AllocateResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.AllocateSigResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.AppletBaseEnum": [[73, 3, 1, "", "BASE_221"], [73, 3, 1, "", "BASE_222"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ChunkingException": [[73, 2, 1, "", "add_note"], [73, 3, 1, "", "args"], [73, 2, 1, "", "with_traceback"]], "pyecsca.sca.target.ectester.CleanupResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.ClearResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.CurveEnum": [[73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "default"], [73, 3, 1, "", "denominator"], [73, 3, 1, "", "external"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 3, 1, "", "secp112r1"], [73, 3, 1, "", "secp128r1"], [73, 3, 1, "", "secp160r1"], [73, 3, 1, "", "secp192r1"], [73, 3, 1, "", "secp224r1"], [73, 3, 1, "", "secp256r1"], [73, 3, 1, "", "secp384r1"], [73, 3, 1, "", "secp521r1"], [73, 3, 1, "", "sect163r1"], [73, 3, 1, "", "sect233r1"], [73, 3, 1, "", "sect283r1"], [73, 3, 1, "", "sect409r1"], [73, 3, 1, "", "sect571r1"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ECDHResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 6, 1, "", "secret"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.ECDSAResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 6, 1, "", "signature"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.ECTesterTarget": [[73, 3, 1, "", "AID_CURRENT_VERSION"], [73, 3, 1, "", "AID_PREFIX"], [73, 3, 1, "", "AID_SUFFIX_221"], [73, 3, 1, "", "AID_SUFFIX_222"], [73, 3, 1, "", "AID_SUFFIX_304"], [73, 3, 1, "", "CLA_ECTESTER"], [73, 2, 1, "", "allocate"], [73, 2, 1, "", "allocate_ka"], [73, 2, 1, "", "allocate_sig"], [73, 6, 1, "", "atr"], [73, 3, 1, "", "chunking"], [73, 2, 1, "", "cleanup"], [73, 2, 1, "", "clear"], [73, 2, 1, "", "connect"], [73, 2, 1, "", "disconnect"], [73, 2, 1, "", "ecdh"], [73, 2, 1, "", "ecdh_direct"], [73, 2, 1, "", "ecdsa"], [73, 2, 1, "", "ecdsa_sign"], [73, 2, 1, "", "ecdsa_verify"], [73, 2, 1, "", "encode_parameters"], [73, 2, 1, "", "export"], [73, 2, 1, "", "generate"], [73, 2, 1, "", "info"], [73, 2, 1, "", "run_mode"], [73, 2, 1, "", "select"], [73, 2, 1, "", "select_applet"], [73, 2, 1, "", "send"], [73, 2, 1, "", "send_apdu"], [73, 2, 1, "", "set"], [73, 2, 1, "", "transform"]], "pyecsca.sca.target.ectester.ECTesterTarget.allocate.params": [[73, 4, 1, "", "builder"], [73, 4, 1, "", "key_class"], [73, 4, 1, "", "key_length"], [73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTarget.allocate_ka.params": [[73, 4, 1, "", "ka_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.allocate_sig.params": [[73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.clear.params": [[73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTarget.connect.params": [[73, 4, 1, "", "protocol"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdh.params": [[73, 4, 1, "", "export"], [73, 4, 1, "", "ka_type"], [73, 4, 1, "", "privkey"], [73, 4, 1, "", "pubkey"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdh_direct.params": [[73, 4, 1, "", "export"], [73, 4, 1, "", "ka_type"], [73, 4, 1, "", "privkey"], [73, 4, 1, "", "pubkey"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "export"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_sign.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "export"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_verify.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTarget.export.params": [[73, 4, 1, "", "key"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"]], "pyecsca.sca.target.ectester.ECTesterTarget.generate.params": [[73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTarget.select.params": [[73, 4, 1, "", "aid"]], "pyecsca.sca.target.ectester.ECTesterTarget.select_applet.params": [[73, 4, 1, "", "count_back"], [73, 4, 1, "", "latest_version"]], "pyecsca.sca.target.ectester.ECTesterTarget.send_apdu.params": [[73, 4, 1, "", "apdu"]], "pyecsca.sca.target.ectester.ECTesterTarget.set.params": [[73, 4, 1, "", "curve"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"], [73, 4, 1, "", "values"]], "pyecsca.sca.target.ectester.ECTesterTarget.transform.params": [[73, 4, 1, "", "key"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA": [[73, 3, 1, "", "AID_CURRENT_VERSION"], [73, 3, 1, "", "AID_PREFIX"], [73, 3, 1, "", "AID_SUFFIX_221"], [73, 3, 1, "", "AID_SUFFIX_222"], [73, 3, 1, "", "AID_SUFFIX_304"], [73, 3, 1, "", "CLA_ECTESTER"], [73, 2, 1, "", "allocate"], [73, 2, 1, "", "allocate_ka"], [73, 2, 1, "", "allocate_sig"], [73, 6, 1, "", "atr"], [73, 6, 1, "", "card_present"], [73, 3, 1, "", "chunking"], [73, 2, 1, "", "cleanup"], [73, 2, 1, "", "clear"], [73, 2, 1, "", "connect"], [73, 2, 1, "", "disconnect"], [73, 2, 1, "", "ecdh"], [73, 2, 1, "", "ecdh_direct"], [73, 2, 1, "", "ecdsa"], [73, 2, 1, "", "ecdsa_sign"], [73, 2, 1, "", "ecdsa_verify"], [73, 2, 1, "", "encode_parameters"], [73, 2, 1, "", "export"], [73, 2, 1, "", "generate"], [73, 2, 1, "", "info"], [73, 2, 1, "", "run_mode"], [73, 2, 1, "", "select"], [73, 2, 1, "", "select_applet"], [73, 2, 1, "", "send"], [73, 2, 1, "", "send_apdu"], [73, 2, 1, "", "set"], [73, 2, 1, "", "transform"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate.params": [[73, 4, 1, "", "builder"], [73, 4, 1, "", "key_class"], [73, 4, 1, "", "key_length"], [73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_ka.params": [[73, 4, 1, "", "ka_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_sig.params": [[73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.clear.params": [[73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.connect.params": [[73, 4, 1, "", "protocol"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh.params": [[73, 4, 1, "", "export"], [73, 4, 1, "", "ka_type"], [73, 4, 1, "", "privkey"], [73, 4, 1, "", "pubkey"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh_direct.params": [[73, 4, 1, "", "export"], [73, 4, 1, "", "ka_type"], [73, 4, 1, "", "privkey"], [73, 4, 1, "", "pubkey"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "export"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_sign.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "export"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_verify.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.export.params": [[73, 4, 1, "", "key"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.generate.params": [[73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select.params": [[73, 4, 1, "", "aid"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select_applet.params": [[73, 4, 1, "", "count_back"], [73, 4, 1, "", "latest_version"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.send_apdu.params": [[73, 4, 1, "", "apdu"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.set.params": [[73, 4, 1, "", "curve"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"], [73, 4, 1, "", "values"]], "pyecsca.sca.target.ectester.ECTesterTargetLEIA.transform.params": [[73, 4, 1, "", "key"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC": [[73, 3, 1, "", "AID_CURRENT_VERSION"], [73, 3, 1, "", "AID_PREFIX"], [73, 3, 1, "", "AID_SUFFIX_221"], [73, 3, 1, "", "AID_SUFFIX_222"], [73, 3, 1, "", "AID_SUFFIX_304"], [73, 3, 1, "", "CLA_ECTESTER"], [73, 2, 1, "", "allocate"], [73, 2, 1, "", "allocate_ka"], [73, 2, 1, "", "allocate_sig"], [73, 6, 1, "", "atr"], [73, 3, 1, "", "chunking"], [73, 2, 1, "", "cleanup"], [73, 2, 1, "", "clear"], [73, 2, 1, "", "connect"], [73, 2, 1, "", "disconnect"], [73, 2, 1, "", "ecdh"], [73, 2, 1, "", "ecdh_direct"], [73, 2, 1, "", "ecdsa"], [73, 2, 1, "", "ecdsa_sign"], [73, 2, 1, "", "ecdsa_verify"], [73, 2, 1, "", "encode_parameters"], [73, 2, 1, "", "export"], [73, 2, 1, "", "generate"], [73, 2, 1, "", "info"], [73, 2, 1, "", "run_mode"], [73, 2, 1, "", "select"], [73, 2, 1, "", "select_applet"], [73, 2, 1, "", "send"], [73, 2, 1, "", "send_apdu"], [73, 2, 1, "", "set"], [73, 2, 1, "", "transform"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate.params": [[73, 4, 1, "", "builder"], [73, 4, 1, "", "key_class"], [73, 4, 1, "", "key_length"], [73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_ka.params": [[73, 4, 1, "", "ka_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_sig.params": [[73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.clear.params": [[73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.connect.params": [[73, 4, 1, "", "protocol"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh.params": [[73, 4, 1, "", "export"], [73, 4, 1, "", "ka_type"], [73, 4, 1, "", "privkey"], [73, 4, 1, "", "pubkey"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh_direct.params": [[73, 4, 1, "", "export"], [73, 4, 1, "", "ka_type"], [73, 4, 1, "", "privkey"], [73, 4, 1, "", "pubkey"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "export"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_sign.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "export"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_verify.params": [[73, 4, 1, "", "data"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "sig"], [73, 4, 1, "", "sig_type"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.export.params": [[73, 4, 1, "", "key"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.generate.params": [[73, 4, 1, "", "keypair"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select.params": [[73, 4, 1, "", "aid"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select_applet.params": [[73, 4, 1, "", "count_back"], [73, 4, 1, "", "latest_version"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.send_apdu.params": [[73, 4, 1, "", "apdu"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.set.params": [[73, 4, 1, "", "curve"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"], [73, 4, 1, "", "values"]], "pyecsca.sca.target.ectester.ECTesterTargetPCSC.transform.params": [[73, 4, 1, "", "key"], [73, 4, 1, "", "keypair"], [73, 4, 1, "", "params"], [73, 4, 1, "", "transformation"]], "pyecsca.sca.target.ectester.ExportEnum": [[73, 3, 1, "", "EXPORT_FALSE"], [73, 3, 1, "", "EXPORT_TRUE"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bool"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ExportResponse": [[73, 3, 1, "", "error"], [73, 2, 1, "", "get_index"], [73, 2, 1, "", "get_param"], [73, 3, 1, "", "key"], [73, 3, 1, "", "keypair"], [73, 3, 1, "", "parameters"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.FormatEnum": [[73, 3, 1, "", "COMPRESSED"], [73, 3, 1, "", "HYBRID"], [73, 3, 1, "", "UNCOMPRESSED"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.GenerateResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.InstructionEnum": [[73, 3, 1, "", "INS_ALLOCATE"], [73, 3, 1, "", "INS_ALLOCATE_KA"], [73, 3, 1, "", "INS_ALLOCATE_SIG"], [73, 3, 1, "", "INS_BUFFER"], [73, 3, 1, "", "INS_CLEANUP"], [73, 3, 1, "", "INS_CLEAR"], [73, 3, 1, "", "INS_ECDH"], [73, 3, 1, "", "INS_ECDH_DIRECT"], [73, 3, 1, "", "INS_ECDSA"], [73, 3, 1, "", "INS_ECDSA_SIGN"], [73, 3, 1, "", "INS_ECDSA_VERIFY"], [73, 3, 1, "", "INS_EXPORT"], [73, 3, 1, "", "INS_GENERATE"], [73, 3, 1, "", "INS_GET_INFO"], [73, 3, 1, "", "INS_PERFORM"], [73, 3, 1, "", "INS_SET"], [73, 3, 1, "", "INS_SET_DRY_RUN_MODE"], [73, 3, 1, "", "INS_TRANSFORM"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyAgreementEnum": [[73, 3, 1, "", "ALG_EC_PACE_GM"], [73, 3, 1, "", "ALG_EC_SVDP_DH"], [73, 3, 1, "", "ALG_EC_SVDP_DHC"], [73, 3, 1, "", "ALG_EC_SVDP_DHC_KDF"], [73, 3, 1, "", "ALG_EC_SVDP_DHC_PLAIN"], [73, 3, 1, "", "ALG_EC_SVDP_DH_KDF"], [73, 3, 1, "", "ALG_EC_SVDP_DH_PLAIN"], [73, 3, 1, "", "ALG_EC_SVDP_DH_PLAIN_XY"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyBuildEnum": [[73, 3, 1, "", "BUILD_KEYBUILDER"], [73, 3, 1, "", "BUILD_KEYPAIR"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyClassEnum": [[73, 3, 1, "", "ALG_EC_F2M"], [73, 3, 1, "", "ALG_EC_FP"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeyEnum": [[73, 3, 1, "", "BOTH"], [73, 3, 1, "", "PRIVATE"], [73, 3, 1, "", "PUBLIC"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.KeypairEnum": [[73, 3, 1, "", "KEYPAIR_BOTH"], [73, 3, 1, "", "KEYPAIR_LOCAL"], [73, 3, 1, "", "KEYPAIR_REMOTE"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.ParameterEnum": [[73, 3, 1, "", "A"], [73, 3, 1, "", "ALL"], [73, 3, 1, "", "B"], [73, 3, 1, "", "DOMAIN_F2M"], [73, 3, 1, "", "DOMAIN_FP"], [73, 3, 1, "", "F2M"], [73, 3, 1, "", "FP"], [73, 3, 1, "", "G"], [73, 3, 1, "", "K"], [73, 3, 1, "", "KEYPAIR"], [73, 3, 1, "", "NONE"], [73, 3, 1, "", "R"], [73, 3, 1, "", "S"], [73, 3, 1, "", "W"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.RunModeEnum": [[73, 3, 1, "", "MODE_DRY_RUN"], [73, 3, 1, "", "MODE_NORMAL"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.RunModeResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.SetResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.SignatureEnum": [[73, 3, 1, "", "ALG_ECDSA_SHA"], [73, 3, 1, "", "ALG_ECDSA_SHA_224"], [73, 3, 1, "", "ALG_ECDSA_SHA_256"], [73, 3, 1, "", "ALG_ECDSA_SHA_384"], [73, 3, 1, "", "ALG_ECDSA_SHA_512"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.ectester.TransformResponse": [[73, 3, 1, "", "error"], [73, 3, 1, "", "params"], [73, 3, 1, "", "resp"], [73, 3, 1, "", "success"], [73, 3, 1, "", "sws"]], "pyecsca.sca.target.ectester.TransformationEnum": [[73, 3, 1, "", "COMPRESS"], [73, 3, 1, "", "COMPRESS_HYBRID"], [73, 3, 1, "", "FIXED"], [73, 3, 1, "", "FULLRANDOM"], [73, 3, 1, "", "INCREMENT"], [73, 3, 1, "", "INFINITY"], [73, 3, 1, "", "MASK_04"], [73, 3, 1, "", "MAX"], [73, 3, 1, "", "NONE"], [73, 3, 1, "", "ONE"], [73, 3, 1, "", "ONEBYTERANDOM"], [73, 3, 1, "", "ZERO"], [73, 2, 1, "", "as_integer_ratio"], [73, 2, 1, "", "bit_count"], [73, 2, 1, "", "bit_length"], [73, 2, 1, "", "conjugate"], [73, 3, 1, "", "denominator"], [73, 2, 1, "", "from_bytes"], [73, 3, 1, "", "imag"], [73, 3, 1, "", "numerator"], [73, 3, 1, "", "real"], [73, 2, 1, "", "to_bytes"]], "pyecsca.sca.target.flash": [[74, 1, 1, "", "Flashable"]], "pyecsca.sca.target.flash.Flashable": [[74, 2, 1, "", "flash"]], "pyecsca.sca.target.flash.Flashable.flash.params": [[74, 4, 1, "", "fw_path"]], "pyecsca.sca.target.leakage": [[75, 1, 1, "", "LeakageTarget"]], "pyecsca.sca.target.leakage.LeakageTarget": [[75, 2, 1, "", "connect"], [75, 3, 1, "", "coords"], [75, 2, 1, "", "debug"], [75, 2, 1, "", "disconnect"], [75, 2, 1, "", "ecdh"], [75, 2, 1, "", "ecdsa_sign"], [75, 2, 1, "", "ecdsa_verify"], [75, 2, 1, "", "generate"], [75, 2, 1, "", "get_trace"], [75, 3, 1, "", "leakage_model"], [75, 3, 1, "", "model"], [75, 3, 1, "", "mult"], [75, 3, 1, "", "params"], [75, 3, 1, "", "privkey"], [75, 3, 1, "", "pubkey"], [75, 2, 1, "", "quit"], [75, 2, 1, "", "scalar_mult"], [75, 2, 1, "", "set_leakage_model"], [75, 2, 1, "", "set_params"], [75, 2, 1, "", "set_privkey"], [75, 2, 1, "", "set_pubkey"], [75, 2, 1, "", "set_trigger"], [75, 2, 1, "", "simulate_ecdh_traces"], [75, 2, 1, "", "simulate_scalar_mult_traces"]], "pyecsca.sca.target.leia": [[76, 1, 1, "", "LEIATarget"]], "pyecsca.sca.target.leia.LEIATarget": [[76, 6, 1, "", "atr"], [76, 6, 1, "", "card_present"], [76, 2, 1, "", "connect"], [76, 2, 1, "", "disconnect"], [76, 2, 1, "", "select"], [76, 2, 1, "", "send_apdu"]], "pyecsca.sca.target.leia.LEIATarget.connect.params": [[76, 4, 1, "", "protocol"]], "pyecsca.sca.target.leia.LEIATarget.select.params": [[76, 4, 1, "", "aid"]], "pyecsca.sca.target.leia.LEIATarget.send_apdu.params": [[76, 4, 1, "", "apdu"]], "pyecsca.sca.target.serial": [[77, 1, 1, "", "SerialTarget"]], "pyecsca.sca.target.serial.SerialTarget": [[77, 2, 1, "", "connect"], [77, 2, 1, "", "disconnect"], [77, 2, 1, "", "read"], [77, 2, 1, "", "write"]], "pyecsca.sca.target.serial.SerialTarget.read.params": [[77, 4, 1, "", "num"], [77, 4, 1, "", "timeout"]], "pyecsca.sca.target.serial.SerialTarget.write.params": [[77, 4, 1, "", "data"]], "pyecsca.sca.target.simpleserial": [[78, 1, 1, "", "SimpleSerialMessage"], [78, 1, 1, "", "SimpleSerialTarget"]], "pyecsca.sca.target.simpleserial.SimpleSerialMessage": [[78, 3, 1, "", "char"], [78, 3, 1, "", "data"], [78, 2, 1, "", "from_raw"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget": [[78, 2, 1, "", "connect"], [78, 2, 1, "", "disconnect"], [78, 2, 1, "", "read"], [78, 2, 1, "", "recv_msgs"], [78, 2, 1, "", "send_cmd"], [78, 2, 1, "", "write"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.read.params": [[78, 4, 1, "", "num"], [78, 4, 1, "", "timeout"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.recv_msgs.params": [[78, 4, 1, "", "timeout"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.send_cmd.params": [[78, 4, 1, "", "cmd"], [78, 4, 1, "", "timeout"]], "pyecsca.sca.target.simpleserial.SimpleSerialTarget.write.params": [[78, 4, 1, "", "data"]], "pyecsca.sca.trace": [[80, 0, 0, "-", "align"], [81, 0, 0, "-", "combine"], [82, 0, 0, "-", "edit"], [83, 0, 0, "-", "filter"], [84, 0, 0, "-", "match"], [85, 0, 0, "-", "plot"], [86, 0, 0, "-", "process"], [87, 0, 0, "-", "sampling"], [88, 0, 0, "-", "test"], [89, 0, 0, "-", "trace"]], "pyecsca.sca.trace.align": [[80, 5, 1, "", "align_correlation"], [80, 5, 1, "", "align_dtw"], [80, 5, 1, "", "align_dtw_scale"], [80, 5, 1, "", "align_offset"], [80, 5, 1, "", "align_peaks"], [80, 5, 1, "", "align_sad"]], "pyecsca.sca.trace.align.align_correlation.params": [[80, 4, 1, "", "max_offset"], [80, 4, 1, "", "min_correlation"], [80, 4, 1, "", "reference"], [80, 4, 1, "", "reference_length"], [80, 4, 1, "", "reference_offset"], [80, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_dtw.params": [[80, 4, 1, "", "fast"], [80, 4, 1, "", "radius"], [80, 4, 1, "", "reference"], [80, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_dtw_scale.params": [[80, 4, 1, "", "fast"], [80, 4, 1, "", "radius"], [80, 4, 1, "", "reference"], [80, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_offset.params": [[80, 4, 1, "", "dist_func"], [80, 4, 1, "", "max_dist"], [80, 4, 1, "", "max_offset"], [80, 4, 1, "", "reference"], [80, 4, 1, "", "reference_length"], [80, 4, 1, "", "reference_offset"], [80, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_peaks.params": [[80, 4, 1, "", "max_offset"], [80, 4, 1, "", "reference"], [80, 4, 1, "", "reference_length"], [80, 4, 1, "", "reference_offset"], [80, 4, 1, "", "traces"]], "pyecsca.sca.trace.align.align_sad.params": [[80, 4, 1, "", "max_offset"], [80, 4, 1, "", "reference"], [80, 4, 1, "", "reference_length"], [80, 4, 1, "", "reference_offset"], [80, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine": [[81, 5, 1, "", "add"], [81, 5, 1, "", "average"], [81, 5, 1, "", "average_and_variance"], [81, 5, 1, "", "conditional_average"], [81, 5, 1, "", "standard_deviation"], [81, 5, 1, "", "subtract"], [81, 5, 1, "", "variance"]], "pyecsca.sca.trace.combine.add.params": [[81, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.average.params": [[81, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.average_and_variance.params": [[81, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.conditional_average.params": [[81, 4, 1, "", "condition"], [81, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.standard_deviation.params": [[81, 4, 1, "", "traces"]], "pyecsca.sca.trace.combine.subtract.params": [[81, 4, 1, "", "one"], [81, 4, 1, "", "other"]], "pyecsca.sca.trace.combine.variance.params": [[81, 4, 1, "", "traces"]], "pyecsca.sca.trace.edit": [[82, 5, 1, "", "pad"], [82, 5, 1, "", "reverse"], [82, 5, 1, "", "stretch"], [82, 5, 1, "", "trim"]], "pyecsca.sca.trace.edit.pad.params": [[82, 4, 1, "", "lengths"], [82, 4, 1, "", "trace"], [82, 4, 1, "", "values"]], "pyecsca.sca.trace.edit.reverse.params": [[82, 4, 1, "", "trace"]], "pyecsca.sca.trace.edit.stretch.params": [[82, 4, 1, "", "length"], [82, 4, 1, "", "trace"]], "pyecsca.sca.trace.edit.trim.params": [[82, 4, 1, "", "end"], [82, 4, 1, "", "start"], [82, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter": [[83, 5, 1, "", "filter_bandpass"], [83, 5, 1, "", "filter_bandstop"], [83, 5, 1, "", "filter_highpass"], [83, 5, 1, "", "filter_lowpass"]], "pyecsca.sca.trace.filter.filter_bandpass.params": [[83, 4, 1, "", "high"], [83, 4, 1, "", "low"], [83, 4, 1, "", "sampling_frequency"], [83, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter.filter_bandstop.params": [[83, 4, 1, "", "high"], [83, 4, 1, "", "low"], [83, 4, 1, "", "sampling_frequency"], [83, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter.filter_highpass.params": [[83, 4, 1, "", "cutoff"], [83, 4, 1, "", "sampling_frequency"], [83, 4, 1, "", "trace"]], "pyecsca.sca.trace.filter.filter_lowpass.params": [[83, 4, 1, "", "cutoff"], [83, 4, 1, "", "sampling_frequency"], [83, 4, 1, "", "trace"]], "pyecsca.sca.trace.match": [[84, 5, 1, "", "match_part"], [84, 5, 1, "", "match_pattern"]], "pyecsca.sca.trace.match.match_part.params": [[84, 4, 1, "", "length"], [84, 4, 1, "", "offset"], [84, 4, 1, "", "threshold"], [84, 4, 1, "", "trace"]], "pyecsca.sca.trace.match.match_pattern.params": [[84, 4, 1, "", "pattern"], [84, 4, 1, "", "threshold"], [84, 4, 1, "", "trace"]], "pyecsca.sca.trace.plot": [[85, 5, 1, "", "plot_trace"], [85, 5, 1, "", "plot_traces"], [85, 5, 1, "", "save_figure"], [85, 5, 1, "", "save_figure_png"], [85, 5, 1, "", "save_figure_svg"]], "pyecsca.sca.trace.process": [[86, 5, 1, "", "absolute"], [86, 5, 1, "", "invert"], [86, 5, 1, "", "normalize"], [86, 5, 1, "", "normalize_wl"], [86, 5, 1, "", "offset"], [86, 5, 1, "", "recenter"], [86, 5, 1, "", "rolling_mean"], [86, 5, 1, "", "threshold"], [86, 5, 1, "", "transform"]], "pyecsca.sca.trace.process.absolute.params": [[86, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.invert.params": [[86, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.normalize.params": [[86, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.normalize_wl.params": [[86, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.offset.params": [[86, 4, 1, "", "offset"], [86, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.recenter.params": [[86, 4, 1, "", "trace"]], "pyecsca.sca.trace.process.rolling_mean.params": [[86, 4, 1, "", "trace"], [86, 4, 1, "", "window"]], "pyecsca.sca.trace.process.threshold.params": [[86, 4, 1, "", "trace"], [86, 4, 1, "", "value"]], "pyecsca.sca.trace.process.transform.params": [[86, 4, 1, "", "max_value"], [86, 4, 1, "", "min_value"], [86, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling": [[87, 5, 1, "", "downsample_average"], [87, 5, 1, "", "downsample_decimate"], [87, 5, 1, "", "downsample_max"], [87, 5, 1, "", "downsample_min"], [87, 5, 1, "", "downsample_pick"]], "pyecsca.sca.trace.sampling.downsample_average.params": [[87, 4, 1, "", "factor"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_decimate.params": [[87, 4, 1, "", "factor"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_max.params": [[87, 4, 1, "", "factor"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_min.params": [[87, 4, 1, "", "factor"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.sampling.downsample_pick.params": [[87, 4, 1, "", "factor"], [87, 4, 1, "", "offset"], [87, 4, 1, "", "trace"]], "pyecsca.sca.trace.test": [[88, 5, 1, "", "ks_test"], [88, 5, 1, "", "student_ttest"], [88, 5, 1, "", "welch_ttest"]], "pyecsca.sca.trace.test.ks_test.params": [[88, 4, 1, "", "first_set"], [88, 4, 1, "", "second_set"]], "pyecsca.sca.trace.test.student_ttest.params": [[88, 4, 1, "", "first_set"], [88, 4, 1, "", "second_set"]], "pyecsca.sca.trace.test.welch_ttest.params": [[88, 4, 1, "", "dof"], [88, 4, 1, "", "first_set"], [88, 4, 1, "", "p_value"], [88, 4, 1, "", "second_set"]], "pyecsca.sca.trace.trace": [[89, 1, 1, "", "CombinedTrace"], [89, 1, 1, "", "Trace"]], "pyecsca.sca.trace.trace.CombinedTrace": [[89, 2, 1, "", "astype"], [89, 3, 1, "", "meta"], [89, 3, 1, "", "samples"], [89, 6, 1, "", "trace_set"], [89, 2, 1, "", "with_samples"]], "pyecsca.sca.trace.trace.CombinedTrace.astype.params": [[89, 4, 1, "", "dtype"]], "pyecsca.sca.trace.trace.CombinedTrace.params": [[89, 4, 1, "", "meta"], [89, 4, 1, "", "samples"], [89, 4, 1, "", "trace_set"]], "pyecsca.sca.trace.trace.CombinedTrace.with_samples.params": [[89, 4, 1, "", "samples"]], "pyecsca.sca.trace.trace.Trace": [[89, 2, 1, "", "astype"], [89, 3, 1, "", "meta"], [89, 3, 1, "", "samples"], [89, 6, 1, "", "trace_set"], [89, 2, 1, "", "with_samples"]], "pyecsca.sca.trace.trace.Trace.astype.params": [[89, 4, 1, "", "dtype"]], "pyecsca.sca.trace.trace.Trace.params": [[89, 4, 1, "", "meta"], [89, 4, 1, "", "samples"], [89, 4, 1, "", "trace_set"]], "pyecsca.sca.trace.trace.Trace.with_samples.params": [[89, 4, 1, "", "samples"]], "pyecsca.sca.trace_set": [[91, 0, 0, "-", "base"], [92, 0, 0, "-", "chipwhisperer"], [93, 0, 0, "-", "hdf5"], [94, 0, 0, "-", "inspector"], [95, 0, 0, "-", "pickle"]], "pyecsca.sca.trace_set.base": [[91, 1, 1, "", "TraceSet"]], "pyecsca.sca.trace_set.base.TraceSet": [[91, 2, 1, "", "inplace"], [91, 2, 1, "", "read"], [91, 2, 1, "", "write"]], "pyecsca.sca.trace_set.chipwhisperer": [[92, 1, 1, "", "ChipWhispererTraceSet"]], "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet": [[92, 2, 1, "", "inplace"], [92, 2, 1, "", "read"], [92, 2, 1, "", "write"]], "pyecsca.sca.trace_set.hdf5": [[93, 1, 1, "", "HDF5Meta"], [93, 1, 1, "", "HDF5TraceSet"]], "pyecsca.sca.trace_set.hdf5.HDF5Meta": [[93, 2, 1, "", "clear"], [93, 2, 1, "", "get"], [93, 2, 1, "", "items"], [93, 2, 1, "", "keys"], [93, 2, 1, "", "pop"], [93, 2, 1, "", "popitem"], [93, 2, 1, "", "setdefault"], [93, 2, 1, "", "update"], [93, 2, 1, "", "values"]], "pyecsca.sca.trace_set.hdf5.HDF5TraceSet": [[93, 2, 1, "", "append"], [93, 2, 1, "", "close"], [93, 2, 1, "", "get"], [93, 2, 1, "", "inplace"], [93, 2, 1, "", "read"], [93, 2, 1, "", "remove"], [93, 2, 1, "", "save"], [93, 2, 1, "", "write"]], "pyecsca.sca.trace_set.inspector": [[94, 1, 1, "", "InspectorTraceSet"], [94, 1, 1, "", "Parsers"], [94, 1, 1, "", "SampleCoding"]], "pyecsca.sca.trace_set.inspector.InspectorTraceSet": [[94, 3, 1, "", "data_space"], [94, 3, 1, "", "description"], [94, 3, 1, "", "external_clock"], [94, 3, 1, "", "external_clock_frequencty"], [94, 3, 1, "", "external_clock_multiplier"], [94, 3, 1, "", "external_clock_phase_shift"], [94, 3, 1, "", "external_clock_resampler_enabled"], [94, 3, 1, "", "external_clock_resampler_mask"], [94, 3, 1, "", "external_clock_threshold"], [94, 3, 1, "", "external_clock_time_base"], [94, 3, 1, "", "filter_frequency"], [94, 3, 1, "", "filter_range"], [94, 3, 1, "", "filter_type"], [94, 3, 1, "", "global_title"], [94, 2, 1, "", "inplace"], [94, 3, 1, "", "log_scale"], [94, 3, 1, "", "num_samples"], [94, 3, 1, "", "num_traces"], [94, 2, 1, "", "read"], [94, 3, 1, "", "sample_coding"], [94, 6, 1, "", "sampling_frequency"], [94, 3, 1, "", "scope_coupling"], [94, 3, 1, "", "scope_id"], [94, 3, 1, "", "scope_impedance"], [94, 3, 1, "", "scope_offset"], [94, 3, 1, "", "scope_range"], [94, 3, 1, "", "title_space"], [94, 3, 1, "", "trace_offset"], [94, 2, 1, "", "write"], [94, 3, 1, "", "x_label"], [94, 3, 1, "", "x_offset"], [94, 3, 1, "", "x_scale"], [94, 3, 1, "", "y_label"], [94, 3, 1, "", "y_scale"]], "pyecsca.sca.trace_set.inspector.InspectorTraceSet.read.params": [[94, 4, 1, "", "input"]], "pyecsca.sca.trace_set.inspector.InspectorTraceSet.write.params": [[94, 4, 1, "", "output"]], "pyecsca.sca.trace_set.inspector.Parsers": [[94, 2, 1, "", "read_bool"], [94, 2, 1, "", "read_float"], [94, 2, 1, "", "read_int"], [94, 2, 1, "", "read_str"], [94, 2, 1, "", "write_bool"], [94, 2, 1, "", "write_float"], [94, 2, 1, "", "write_int"], [94, 2, 1, "", "write_str"]], "pyecsca.sca.trace_set.inspector.SampleCoding": [[94, 3, 1, "", "Float16"], [94, 3, 1, "", "Float32"], [94, 3, 1, "", "Float8"], [94, 3, 1, "", "Int16"], [94, 3, 1, "", "Int32"], [94, 3, 1, "", "Int8"], [94, 2, 1, "", "as_integer_ratio"], [94, 2, 1, "", "bit_count"], [94, 2, 1, "", "bit_length"], [94, 2, 1, "", "conjugate"], [94, 3, 1, "", "denominator"], [94, 2, 1, "", "dtype"], [94, 2, 1, "", "from_bytes"], [94, 3, 1, "", "imag"], [94, 3, 1, "", "numerator"], [94, 3, 1, "", "real"], [94, 2, 1, "", "to_bytes"]], "pyecsca.sca.trace_set.pickle": [[95, 1, 1, "", "PickleTraceSet"]], "pyecsca.sca.trace_set.pickle.PickleTraceSet": [[95, 2, 1, "", "inplace"], [95, 2, 1, "", "read"], [95, 2, 1, "", "write"]]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:attribute", "4": "py:parameter", "5": "py:function", "6": "py:property", "7": "py:exception"}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "attribute", "Python attribute"], "4": ["py", "parameter", "Python parameter"], "5": ["py", "function", "Python function"], "6": ["py", "property", "Python property"], "7": ["py", "exception", "Python exception"]}, "titleterms": {"pyecsca": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96], "codegen": [0, 1, 2, 3, 4, 5], "packag": [0, 5, 6, 13, 29, 43, 47, 48, 52, 59, 64, 67, 79, 90], "subpackag": [0, 6, 47], "submodul": [0, 6, 13, 29, 43, 48, 52, 59, 64, 67, 79, 90], "builder": 1, "modul": [1, 2, 3, 4, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 49, 50, 51, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 93, 94, 95], "client": 2, "common": 3, "render": 4, "templat": 5, "ec": [6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42], "configur": [7, 101], "context": 8, "coordin": [9, 101], "curv": 10, "divpoli": 11, "error": 12, "formula": [13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 105, 107, 108], "base": [14, 30, 53, 60, 70, 91, 104, 106, 108], "code": [15, 100], "efd": 16, "expand": [17, 105], "fake": 18, "fliparoo": 19, "graph": 20, "metric": 21, "partit": 22, "switch_sign": 23, "unrol": 24, "key_agr": 25, "key_gener": 26, "mod": 27, "model": [28, 101], "mult": [29, 30, 31, 32, 33, 34, 35, 36], "binari": [31, 71], "comb": 32, "fix": [33, 98, 99], "ladder": 34, "naf": 35, "window": 36, "op": 37, "param": 38, "point": [39, 108], "scalar": [40, 101, 102, 107], "signatur": 41, "transform": 42, "misc": [43, 44, 45, 46], "cach": 44, "cfg": 45, "util": 46, "sca": [47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95], "attack": [48, 49, 50, 51, 98, 99], "cpa": 49, "dpa": [50, 99], "leakage_model": 51, "re": [52, 53, 54, 55, 56, 57, 58], "epa": [54, 104], "rpa": [55, 106], "structur": [56, 107], "tree": [57, 108], "zvp": [58, 108], "scope": [59, 60, 61, 62, 63], "chipwhisper": [61, 72, 92], "picoscope_alt": 62, "picoscope_sdk": 63, "stacked_trac": [64, 65, 66], "combin": [65, 81], "target": [67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78], "iso7816": 68, "pcsc": [69, 110], "ectest": [73, 110], "flash": 74, "leakag": [75, 99, 102], "leia": [76, 110], "serial": 77, "simpleseri": 78, "trace": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 98, 99, 102, 109], "align": 80, "edit": 82, "filter": 83, "match": 84, "plot": 85, "process": 86, "sampl": 87, "test": 88, "trace_set": [90, 91, 92, 93, 94, 95], "hdf5": 93, "inspector": 94, "pickl": 95, "p\u026a\u025btska": 96, "notebook": 96, "api": 96, "refer": [96, 112], "miscellan": [96, 104, 108], "requir": 96, "licens": 96, "ecc": [97, 105], "librari": [97, 105], "tabl": 97, "content": 97, "bouncycastl": 97, "primit": 97, "ecdh": [97, 102], "ecdsa": [97, 102], "x25519": 97, "ed25519": 97, "boringssl": 97, "p": 97, "224": 97, "256": 97, "384": 97, "521": 97, "botan": 97, "symcrypt": 97, "fastecdsa": 97, "micro": 97, "intel": 97, "ipp": 97, "cryptographi": 97, "libressl": 97, "libtomcrypt": 97, "wolfssl": 97, "openssl": 97, "nss": 97, "from": 97, "hacl": 97, "libsecp256k1": 97, "nettl": 97, "pippeng": 97, "paramet": 97, "mbedtl": 97, "sunec": 97, "go": 97, "libgcrypt": 97, "eddsa": 97, "bearssl": 97, "correl": 98, "power": [98, 99], "analysi": [98, 99, 105, 108], "initialis": [98, 99, 102, 109], "perform": [98, 99], "evalu": [98, 99, 108], "effect": [98, 99], "success": [98, 99], "rate": [98, 99], "chang": [98, 99], "number": [98, 99], "nois": [98, 99, 106], "differenti": 99, "simul": [99, 102, 106, 109], "emulatortarget": 99, "gener": [100, 102, 109], "build": [100, 108], "run": 100, "host": 100, "space": 101, "enumer": 101, "system": 101, "multipli": [101, 107], "emul": 102, "function": 102, "multipl": 102, "kei": [102, 109], "set": [102, 108], "privat": 102, "public": 102, "spa": 102, "measur": 103, "oscilloscop": 103, "setup": 103, "devic": 103, "visual": [103, 111], "revers": [104, 106, 107, 108], "engin": [104, 106, 107, 108], "explor": [104, 105, 106, 108], "open": 105, "sourc": 105, "The": 105, "oracl": 106, "what": 106, "about": 106, "symmetr": 106, "asymmetr": 106, "method": 106, "comput": 108, "addit": 108, "chain": 108, "load": 108, "factor": 108, "accumul": 108, "polynomi": 108, "remap": 108, "distinguish": 108, "map": 108, "sign": 109, "agreement": 109, "walk": 109, "smartcard": 110}, "envversion": {"sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.todo": 2, "sphinx.ext.viewcode": 1, "nbsphinx": 4, "sphinx": 60}, "alltitles": {"pyecsca.codegen package": [[0, "module-pyecsca.codegen"]], "Subpackages": [[0, "subpackages"], [6, "subpackages"], [47, "subpackages"]], "Submodules": [[0, "submodules"], [6, "submodules"], [13, "submodules"], [29, "submodules"], [43, "submodules"], [48, "submodules"], [52, "submodules"], [59, "submodules"], [64, "submodules"], [67, "submodules"], [79, "submodules"], [90, "submodules"]], "pyecsca.codegen.builder module": [[1, "module-pyecsca.codegen.builder"]], "pyecsca.codegen.client module": [[2, "module-pyecsca.codegen.client"]], "pyecsca.codegen.common module": [[3, "module-pyecsca.codegen.common"]], "pyecsca.codegen.render module": [[4, "module-pyecsca.codegen.render"]], "pyecsca.codegen.templates package": [[5, "module-pyecsca.codegen.templates"]], "pyecsca.ec package": [[6, "module-pyecsca.ec"]], "pyecsca.ec.configuration module": [[7, "module-pyecsca.ec.configuration"]], "pyecsca.ec.context module": [[8, "module-pyecsca.ec.context"]], "pyecsca.ec.coordinates module": [[9, "module-pyecsca.ec.coordinates"]], "pyecsca.ec.curve module": [[10, "module-pyecsca.ec.curve"]], "pyecsca.ec.divpoly module": [[11, "module-pyecsca.ec.divpoly"]], "pyecsca.ec.error module": [[12, "module-pyecsca.ec.error"]], "pyecsca.ec.formula package": [[13, "module-pyecsca.ec.formula"]], "pyecsca.ec.formula.base module": [[14, "module-pyecsca.ec.formula.base"]], "pyecsca.ec.formula.code module": [[15, "module-pyecsca.ec.formula.code"]], "pyecsca.ec.formula.efd module": [[16, "module-pyecsca.ec.formula.efd"]], "pyecsca.ec.formula.expand module": [[17, "module-pyecsca.ec.formula.expand"]], "pyecsca.ec.formula.fake module": [[18, "module-pyecsca.ec.formula.fake"]], "pyecsca.ec.formula.fliparoo module": [[19, "module-pyecsca.ec.formula.fliparoo"]], "pyecsca.ec.formula.graph module": [[20, "module-pyecsca.ec.formula.graph"]], "pyecsca.ec.formula.metrics module": [[21, "module-pyecsca.ec.formula.metrics"]], "pyecsca.ec.formula.partitions module": [[22, "module-pyecsca.ec.formula.partitions"]], "pyecsca.ec.formula.switch_sign module": [[23, "module-pyecsca.ec.formula.switch_sign"]], "pyecsca.ec.formula.unroll module": [[24, "module-pyecsca.ec.formula.unroll"]], "pyecsca.ec.key_agreement module": [[25, "module-pyecsca.ec.key_agreement"]], "pyecsca.ec.key_generation module": [[26, "module-pyecsca.ec.key_generation"]], "pyecsca.ec.mod module": [[27, "module-pyecsca.ec.mod"]], "pyecsca.ec.model module": [[28, "module-pyecsca.ec.model"]], "pyecsca.ec.mult package": [[29, "module-pyecsca.ec.mult"]], "pyecsca.ec.mult.base module": [[30, "module-pyecsca.ec.mult.base"]], "pyecsca.ec.mult.binary module": [[31, "module-pyecsca.ec.mult.binary"]], "pyecsca.ec.mult.comb module": [[32, "module-pyecsca.ec.mult.comb"]], "pyecsca.ec.mult.fixed module": [[33, "module-pyecsca.ec.mult.fixed"]], "pyecsca.ec.mult.ladder module": [[34, "module-pyecsca.ec.mult.ladder"]], "pyecsca.ec.mult.naf module": [[35, "module-pyecsca.ec.mult.naf"]], "pyecsca.ec.mult.window module": [[36, "module-pyecsca.ec.mult.window"]], "pyecsca.ec.op module": [[37, "module-pyecsca.ec.op"]], "pyecsca.ec.params module": [[38, "module-pyecsca.ec.params"]], "pyecsca.ec.point module": [[39, "module-pyecsca.ec.point"]], "pyecsca.ec.scalar module": [[40, "module-pyecsca.ec.scalar"]], "pyecsca.ec.signature module": [[41, "module-pyecsca.ec.signature"]], "pyecsca.ec.transformations module": [[42, "module-pyecsca.ec.transformations"]], "pyecsca.misc package": [[43, "module-pyecsca.misc"]], "pyecsca.misc.cache module": [[44, "module-pyecsca.misc.cache"]], "pyecsca.misc.cfg module": [[45, "module-pyecsca.misc.cfg"]], "pyecsca.misc.utils module": [[46, "module-pyecsca.misc.utils"]], "pyecsca.sca package": [[47, "module-pyecsca.sca"]], "pyecsca.sca.attack package": [[48, "module-pyecsca.sca.attack"]], "pyecsca.sca.attack.CPA module": [[49, "module-pyecsca.sca.attack.CPA"]], "pyecsca.sca.attack.DPA module": [[50, "module-pyecsca.sca.attack.DPA"]], "pyecsca.sca.attack.leakage_model module": [[51, "module-pyecsca.sca.attack.leakage_model"]], "pyecsca.sca.re package": [[52, "module-pyecsca.sca.re"]], "pyecsca.sca.re.base module": [[53, "module-pyecsca.sca.re.base"]], "pyecsca.sca.re.epa module": [[54, "pyecsca-sca-re-epa-module"]], "pyecsca.sca.re.rpa module": [[55, "module-pyecsca.sca.re.rpa"]], "pyecsca.sca.re.structural module": [[56, "module-pyecsca.sca.re.structural"]], "pyecsca.sca.re.tree module": [[57, "module-pyecsca.sca.re.tree"]], "pyecsca.sca.re.zvp module": [[58, "module-pyecsca.sca.re.zvp"]], "pyecsca.sca.scope package": [[59, "module-pyecsca.sca.scope"]], "pyecsca.sca.scope.base module": [[60, "module-pyecsca.sca.scope.base"]], "pyecsca.sca.scope.chipwhisperer module": [[61, "module-pyecsca.sca.scope.chipwhisperer"]], "pyecsca.sca.scope.picoscope_alt module": [[62, "module-pyecsca.sca.scope.picoscope_alt"]], "pyecsca.sca.scope.picoscope_sdk module": [[63, "module-pyecsca.sca.scope.picoscope_sdk"]], "pyecsca.sca.stacked_traces package": [[64, "module-pyecsca.sca.stacked_traces"]], "pyecsca.sca.stacked_traces.combine module": [[65, "module-pyecsca.sca.stacked_traces.combine"]], "pyecsca.sca.stacked_traces.stacked_traces module": [[66, "module-pyecsca.sca.stacked_traces.stacked_traces"]], "pyecsca.sca.target package": [[67, "module-pyecsca.sca.target"]], "pyecsca.sca.target.ISO7816 module": [[68, "module-pyecsca.sca.target.ISO7816"]], "pyecsca.sca.target.PCSC module": [[69, "module-pyecsca.sca.target.PCSC"]], "pyecsca.sca.target.base module": [[70, "module-pyecsca.sca.target.base"]], "pyecsca.sca.target.binary module": [[71, "module-pyecsca.sca.target.binary"]], "pyecsca.sca.target.chipwhisperer module": [[72, "module-pyecsca.sca.target.chipwhisperer"]], "pyecsca.sca.target.ectester module": [[73, "module-pyecsca.sca.target.ectester"]], "pyecsca.sca.target.flash module": [[74, "module-pyecsca.sca.target.flash"]], "pyecsca.sca.target.leakage module": [[75, "module-pyecsca.sca.target.leakage"]], "pyecsca.sca.target.leia module": [[76, "module-pyecsca.sca.target.leia"]], "pyecsca.sca.target.serial module": [[77, "module-pyecsca.sca.target.serial"]], "pyecsca.sca.target.simpleserial module": [[78, "module-pyecsca.sca.target.simpleserial"]], "pyecsca.sca.trace package": [[79, "module-pyecsca.sca.trace"]], "pyecsca.sca.trace.align module": [[80, "module-pyecsca.sca.trace.align"]], "pyecsca.sca.trace.combine module": [[81, "module-pyecsca.sca.trace.combine"]], "pyecsca.sca.trace.edit module": [[82, "module-pyecsca.sca.trace.edit"]], "pyecsca.sca.trace.filter module": [[83, "module-pyecsca.sca.trace.filter"]], "pyecsca.sca.trace.match module": [[84, "module-pyecsca.sca.trace.match"]], "pyecsca.sca.trace.plot module": [[85, "module-pyecsca.sca.trace.plot"]], "pyecsca.sca.trace.process module": [[86, "module-pyecsca.sca.trace.process"]], "pyecsca.sca.trace.sampling module": [[87, "module-pyecsca.sca.trace.sampling"]], "pyecsca.sca.trace.test module": [[88, "module-pyecsca.sca.trace.test"]], "pyecsca.sca.trace.trace module": [[89, "module-pyecsca.sca.trace.trace"]], "pyecsca.sca.trace_set package": [[90, "module-pyecsca.sca.trace_set"]], "pyecsca.sca.trace_set.base module": [[91, "module-pyecsca.sca.trace_set.base"]], "pyecsca.sca.trace_set.chipwhisperer module": [[92, "module-pyecsca.sca.trace_set.chipwhisperer"]], "pyecsca.sca.trace_set.hdf5 module": [[93, "module-pyecsca.sca.trace_set.hdf5"]], "pyecsca.sca.trace_set.inspector module": [[94, "module-pyecsca.sca.trace_set.inspector"]], "pyecsca.sca.trace_set.pickle module": [[95, "module-pyecsca.sca.trace_set.pickle"]], "pyecsca [p\u026a\u025btska]": [[96, "pyecsca-ptska"]], " Notebooks": [[96, "notebooks"]], "Notebooks": [[96, null]], " API reference": [[96, "api-reference"]], "API reference": [[96, null]], " Miscellaneous": [[96, "miscellaneous"]], "Miscellaneous": [[96, null], [104, "Miscellaneous"]], "Requirements": [[96, "requirements"]], "License": [[96, "license"]], "ECC in Libraries": [[97, "ecc-in-libraries"]], "Table of Contents": [[97, "table-of-contents"]], "BouncyCastle": [[97, "bouncycastle"]], "Primitives": [[97, "primitives"], [97, "id1"], [97, "id6"], [97, "id11"], [97, "id15"], [97, "id17"], [97, "id20"], [97, "id25"], [97, "id30"], [97, "id33"], [97, "id39"], [97, "id43"], [97, "id46"], [97, "id49"], [97, "id53"], [97, "id59"], [97, "id64"], [97, "id68"]], "ECDH": [[97, "ecdh"], [97, "id2"], [97, "id7"], [97, "id12"], [97, "id18"], [97, "id21"], [97, "id26"], [97, "id31"], [97, "id34"], [97, "id44"], [97, "id50"], [97, "id55"], [97, "id60"], [97, "id65"], [97, "id69"], [102, "ECDH"]], "ECDSA": [[97, "ecdsa"], [97, "id3"], [97, "id8"], [97, "id13"], [97, "id16"], [97, "id19"], [97, "id22"], [97, "id27"], [97, "id32"], [97, "id36"], [97, "id45"], [97, "id47"], [97, "id51"], [97, "id56"], [97, "id61"], [97, "id66"], [97, "id70"], [102, "ECDSA"]], "X25519": [[97, "x25519"], [97, "id4"], [97, "id9"], [97, "id14"], [97, "id28"], [97, "id62"], [97, "id67"]], "Ed25519": [[97, "ed25519"], [97, "id5"], [97, "id10"], [97, "id24"], [97, "id29"], [97, "id38"], [97, "id48"], [97, "id58"], [97, "id63"]], "BoringSSL": [[97, "boringssl"]], "P-224": [[97, "p-224"]], "P-256": [[97, "p-256"], [97, "id54"]], "P-384": [[97, "p-384"], [97, "id40"]], "P-521": [[97, "p-521"], [97, "id41"]], "Botan": [[97, "botan"]], "SymCrypt": [[97, "symcrypt"]], "fastecdsa": [[97, "fastecdsa"]], "micro-ecc": [[97, "micro-ecc"]], "Intel IPP cryptography": [[97, "intel-ipp-cryptography"]], "x25519": [[97, "id23"], [97, "id37"], [97, "id42"], [97, "id52"], [97, "id57"], [97, "id71"]], "LibreSSL": [[97, "libressl"]], "libtomcrypt": [[97, "libtomcrypt"]], "wolfSSL": [[97, "wolfssl"]], "OpenSSL": [[97, "openssl"]], "NSS": [[97, "nss"]], "P-256 from HACL*": [[97, "p-256-from-hacl"]], "libsecp256k1": [[97, "libsecp256k1"]], "Nettle": [[97, "nettle"]], "Pippenger parameters": [[97, "id72"]], "mbedTLS": [[97, "mbedtls"]], "SunEC": [[97, "sunec"]], "Go": [[97, "go"]], "libgcrypt": [[97, "libgcrypt"]], "EdDSA": [[97, "eddsa"]], "BearSSL": [[97, "bearssl"]], "Correlation Power Analysis": [[98, "Correlation-Power-Analysis"]], "Initialisation": [[98, "Initialisation"], [99, "Initialisation"], [102, "Initialisation"], [109, "Initialisation"]], "Performing the attack": [[98, "Performing-the-attack"], [99, "Performing-the-attack"]], "Evaluating the effectiveness of the attack": [[98, "Evaluating-the-effectiveness-of-the-attack"], [99, "Evaluating-the-effectiveness-of-the-attack"]], "Success rate with changing number of traces": [[98, "Success-rate-with-changing-number-of-traces"], [99, "Success-rate-with-changing-number-of-traces"]], "Success rate with fixed number of traces and changing noise": [[98, "Success-rate-with-fixed-number-of-traces-and-changing-noise"], [99, "Success-rate-with-fixed-number-of-traces-and-changing-noise"]], "Differential Power Analysis": [[99, "Differential-Power-Analysis"]], "DPA on leakage traces simulated by EmulatorTarget.": [[99, "DPA-on-leakage-traces-simulated-by-EmulatorTarget."]], "Code generation": [[100, "Code-generation"]], "Generating": [[100, "Generating"]], "Building": [[100, "Building"]], "Running": [[100, "Running"]], "Running on the host": [[100, "Running-on-the-host"]], "Configuration space": [[101, "Configuration-space"]], "Enumerating configurations": [[101, "Enumerating-configurations"]], "Models": [[101, "Models"]], "Coordinate systems": [[101, "Coordinate-systems"]], "Scalar multipliers": [[101, "Scalar-multipliers"], [107, "Scalar-multipliers"]], "Emulation and leakage simulation": [[102, "Emulation-and-leakage-simulation"]], "Emulator functionality": [[102, "Emulator-functionality"]], "Scalar multiplication": [[102, "Scalar-multiplication"]], "Key generation": [[102, "Key-generation"], [109, "Key-generation"]], "Setting private and public key": [[102, "Setting-private-and-public-key"]], "Leakage simulation": [[102, "Leakage-simulation"]], "Leakage trace of scalar multiplication": [[102, "Leakage-trace-of-scalar-multiplication"]], "SPA": [[102, "SPA"]], "Measurement": [[103, "Measurement"], [103, "id1"]], "Oscilloscope setup": [[103, "Oscilloscope-setup"]], "Device setup": [[103, "Device-setup"]], "Visualization": [[103, "Visualization"], [111, "Visualization"]], "EPA-based reverse engineering": [[104, "EPA-based-reverse-engineering"]], "Exploration": [[104, "Exploration"], [106, "Exploration"], [108, "Exploration"]], "Reverse-engineering": [[104, "Reverse-engineering"], [106, "Reverse-engineering"], [108, "Reverse-engineering"]], "Exploration of formulas in open-source ECC libraries": [[105, "Exploration-of-formulas-in-open-source-ECC-libraries"]], "The formulas": [[105, "The-formulas"]], "Analysis": [[105, "Analysis"]], "Expand": [[105, "Expand"]], "RPA-based reverse-engineering": [[106, "RPA-based-reverse-engineering"]], "Oracle simulation": [[106, "Oracle-simulation"]], "What about (symmetric) noise?": [[106, "What-about-(symmetric)-noise?"]], "What about (asymmetric) noise?": [[106, "What-about-(asymmetric)-noise?"]], "Method simulation": [[106, "Method-simulation"]], "Structural reverse-engineering": [[107, "Structural-reverse-engineering"]], "Formulas": [[107, "Formulas"]], "ZVP-based reverse-engineering": [[108, "ZVP-based-reverse-engineering"]], "Computing addition chains": [[108, "Computing-addition-chains"]], "Loading the formulas": [[108, "Loading-the-formulas"]], "Computing the factor sets": [[108, "Computing-the-factor-sets"]], "Accumulating polynomials": [[108, "Accumulating-polynomials"]], "Computing ZVP points": [[108, "Computing-ZVP-points"]], "Remapping": [[108, "Remapping"]], "Distinguishing map and distinguishing tree building": [[108, "Distinguishing-map-and-distinguishing-tree-building"]], "Evaluation": [[108, "Evaluation"]], "Factor sets": [[108, "Factor-sets"]], "Miscellaneous analysis": [[108, "Miscellaneous-analysis"]], "Simulation": [[109, "Simulation"]], "Signing": [[109, "Signing"]], "Key agreement": [[109, "Key-agreement"]], "Walking the trace": [[109, "Walking-the-trace"]], "Smartcards": [[110, "Smartcards"]], "LEIA": [[110, "LEIA"]], "PCSC": [[110, "PCSC"]], "ECTester": [[110, "ECTester"]], "References": [[112, "references"]]}, "indexentries": {"module": [[0, "module-pyecsca.codegen"], [1, "module-pyecsca.codegen.builder"], [2, "module-pyecsca.codegen.client"], [3, "module-pyecsca.codegen.common"], [4, "module-pyecsca.codegen.render"], [5, "module-pyecsca.codegen.templates"], [6, "module-pyecsca.ec"], [7, "module-pyecsca.ec.configuration"], [8, "module-pyecsca.ec.context"], [9, "module-pyecsca.ec.coordinates"], [10, "module-pyecsca.ec.curve"], [11, "module-pyecsca.ec.divpoly"], [12, "module-pyecsca.ec.error"], [13, "module-pyecsca.ec.formula"], [14, "module-pyecsca.ec.formula.base"], [15, "module-pyecsca.ec.formula.code"], [16, "module-pyecsca.ec.formula.efd"], [17, "module-pyecsca.ec.formula.expand"], [18, "module-pyecsca.ec.formula.fake"], [19, "module-pyecsca.ec.formula.fliparoo"], [20, "module-pyecsca.ec.formula.graph"], [21, "module-pyecsca.ec.formula.metrics"], [22, "module-pyecsca.ec.formula.partitions"], [23, "module-pyecsca.ec.formula.switch_sign"], [24, "module-pyecsca.ec.formula.unroll"], [25, "module-pyecsca.ec.key_agreement"], [26, "module-pyecsca.ec.key_generation"], [27, "module-pyecsca.ec.mod"], [28, "module-pyecsca.ec.model"], [29, "module-pyecsca.ec.mult"], [30, "module-pyecsca.ec.mult.base"], [31, "module-pyecsca.ec.mult.binary"], [32, "module-pyecsca.ec.mult.comb"], [33, "module-pyecsca.ec.mult.fixed"], [34, "module-pyecsca.ec.mult.ladder"], [35, "module-pyecsca.ec.mult.naf"], [36, "module-pyecsca.ec.mult.window"], [37, "module-pyecsca.ec.op"], [38, "module-pyecsca.ec.params"], [39, "module-pyecsca.ec.point"], [40, "module-pyecsca.ec.scalar"], [41, "module-pyecsca.ec.signature"], [42, "module-pyecsca.ec.transformations"], [43, "module-pyecsca.misc"], [44, "module-pyecsca.misc.cache"], [45, "module-pyecsca.misc.cfg"], [46, "module-pyecsca.misc.utils"], [47, "module-pyecsca.sca"], [48, "module-pyecsca.sca.attack"], [49, "module-pyecsca.sca.attack.CPA"], [50, "module-pyecsca.sca.attack.DPA"], [51, "module-pyecsca.sca.attack.leakage_model"], [52, "module-pyecsca.sca.re"], [53, "module-pyecsca.sca.re.base"], [55, "module-pyecsca.sca.re.rpa"], [56, "module-pyecsca.sca.re.structural"], [57, "module-pyecsca.sca.re.tree"], [58, "module-pyecsca.sca.re.zvp"], [59, "module-pyecsca.sca.scope"], [60, "module-pyecsca.sca.scope.base"], [61, "module-pyecsca.sca.scope.chipwhisperer"], [62, "module-pyecsca.sca.scope.picoscope_alt"], [63, "module-pyecsca.sca.scope.picoscope_sdk"], [64, "module-pyecsca.sca.stacked_traces"], [65, "module-pyecsca.sca.stacked_traces.combine"], [66, "module-pyecsca.sca.stacked_traces.stacked_traces"], [67, "module-pyecsca.sca.target"], [68, "module-pyecsca.sca.target.ISO7816"], [69, "module-pyecsca.sca.target.PCSC"], [70, "module-pyecsca.sca.target.base"], [71, "module-pyecsca.sca.target.binary"], [72, "module-pyecsca.sca.target.chipwhisperer"], [73, "module-pyecsca.sca.target.ectester"], [74, "module-pyecsca.sca.target.flash"], [75, "module-pyecsca.sca.target.leakage"], [76, "module-pyecsca.sca.target.leia"], [77, "module-pyecsca.sca.target.serial"], [78, "module-pyecsca.sca.target.simpleserial"], [79, "module-pyecsca.sca.trace"], [80, "module-pyecsca.sca.trace.align"], [81, "module-pyecsca.sca.trace.combine"], [82, "module-pyecsca.sca.trace.edit"], [83, "module-pyecsca.sca.trace.filter"], [84, "module-pyecsca.sca.trace.match"], [85, "module-pyecsca.sca.trace.plot"], [86, "module-pyecsca.sca.trace.process"], [87, "module-pyecsca.sca.trace.sampling"], [88, "module-pyecsca.sca.trace.test"], [89, "module-pyecsca.sca.trace.trace"], [90, "module-pyecsca.sca.trace_set"], [91, "module-pyecsca.sca.trace_set.base"], [92, "module-pyecsca.sca.trace_set.chipwhisperer"], [93, "module-pyecsca.sca.trace_set.hdf5"], [94, "module-pyecsca.sca.trace_set.inspector"], [95, "module-pyecsca.sca.trace_set.pickle"]], "pyecsca.codegen": [[0, "module-pyecsca.codegen"]], "pyecsca.codegen.builder": [[1, "module-pyecsca.codegen.builder"]], "devicetarget (class in pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.DeviceTarget"]], "hosttarget (class in pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.HostTarget"]], "binary (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.binary"]], "cmd_debug() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_debug"]], "cmd_ecdh() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_ecdh"]], "cmd_ecdsa_sign() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_ecdsa_sign"]], "cmd_ecdsa_verify() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_ecdsa_verify"]], "cmd_generate() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_generate"]], "cmd_init_prng() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_init_prng"]], "cmd_scalar_mult() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_scalar_mult"]], "cmd_set_params() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_set_params"]], "cmd_set_privkey() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_set_privkey"]], "cmd_set_pubkey() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_set_pubkey"]], "cmd_set_trigger() (in module pyecsca.codegen.client)": [[2, "pyecsca.codegen.client.cmd_set_trigger"]], "connect() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.connect"]], "connect() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.connect"]], "coords (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.coords"]], "coords (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.coords"]], "debug() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.debug"]], "debug() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.debug"]], "debug_output (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.debug_output"]], "disconnect() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.disconnect"]], "disconnect() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.disconnect"]], "ecdh() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.ecdh"]], "ecdh() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.ecdh"]], "ecdsa_sign() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.ecdsa_sign"]], "ecdsa_sign() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.ecdsa_sign"]], "ecdsa_verify() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.ecdsa_verify"]], "ecdsa_verify() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.ecdsa_verify"]], "flash() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.flash"]], "generate() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.generate"]], "generate() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.generate"]], "init_prng() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.init_prng"]], "init_prng() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.init_prng"]], "model (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.model"]], "model (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.model"]], "params (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.params"]], "params (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.params"]], "privkey (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.privkey"]], "privkey (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.privkey"]], "process (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.process"]], "pubkey (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.pubkey"]], "pubkey (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.pubkey"]], "pyecsca.codegen.client": [[2, "module-pyecsca.codegen.client"]], "quit() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.quit"]], "quit() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.quit"]], "read() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.read"]], "read() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.read"]], "recv_msgs() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.recv_msgs"]], "recv_msgs() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.recv_msgs"]], "reset() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.reset"]], "scalar_mult() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.scalar_mult"]], "scalar_mult() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.scalar_mult"]], "seed (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.seed"]], "seed (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.seed"]], "send_cmd() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.send_cmd"]], "send_cmd() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.send_cmd"]], "set_params() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.set_params"]], "set_params() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.set_params"]], "set_privkey() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.set_privkey"]], "set_privkey() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.set_privkey"]], "set_pubkey() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.set_pubkey"]], "set_pubkey() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.set_pubkey"]], "set_trigger() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.set_trigger"]], "set_trigger() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.set_trigger"]], "timeout (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.timeout"]], "timeout (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.timeout"]], "trigger (pyecsca.codegen.client.devicetarget attribute)": [[2, "pyecsca.codegen.client.DeviceTarget.trigger"]], "trigger (pyecsca.codegen.client.hosttarget attribute)": [[2, "pyecsca.codegen.client.HostTarget.trigger"]], "write() (pyecsca.codegen.client.devicetarget method)": [[2, "pyecsca.codegen.client.DeviceTarget.write"]], "write() (pyecsca.codegen.client.hosttarget method)": [[2, "pyecsca.codegen.client.HostTarget.write"]], "deviceconfiguration (class in pyecsca.codegen.common)": [[3, "pyecsca.codegen.common.DeviceConfiguration"]], "host (pyecsca.codegen.common.platform attribute)": [[3, "pyecsca.codegen.common.Platform.HOST"]], "nano (pyecsca.codegen.common.platform attribute)": [[3, "pyecsca.codegen.common.Platform.NANO"]], "platform (class in pyecsca.codegen.common)": [[3, "pyecsca.codegen.common.Platform"]], "stm32f0 (pyecsca.codegen.common.platform attribute)": [[3, "pyecsca.codegen.common.Platform.STM32F0"]], "stm32f3 (pyecsca.codegen.common.platform attribute)": [[3, "pyecsca.codegen.common.Platform.STM32F3"]], "xmega (pyecsca.codegen.common.platform attribute)": [[3, "pyecsca.codegen.common.Platform.XMEGA"]], "coords (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.coords"]], "defines (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.defines"]], "ecdh (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.ecdh"]], "ecdsa (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.ecdsa"]], "formulas (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.formulas"]], "hash_type (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.hash_type"]], "inv (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.inv"]], "keygen (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.keygen"]], "mod_rand (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.mod_rand"]], "model (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.model"]], "mult (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.mult"]], "platform (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.platform"]], "pyecsca.codegen.common": [[3, "module-pyecsca.codegen.common"]], "red (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.red"]], "scalarmult (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.scalarmult"]], "sqr (pyecsca.codegen.common.deviceconfiguration attribute)": [[3, "pyecsca.codegen.common.DeviceConfiguration.sqr"]], "wrap_enum() (in module pyecsca.codegen.common)": [[3, "pyecsca.codegen.common.wrap_enum"]], "build() (in module pyecsca.codegen.render)": [[4, "pyecsca.codegen.render.build"]], "pyecsca.codegen.render": [[4, "module-pyecsca.codegen.render"]], "render() (in module pyecsca.codegen.render)": [[4, "pyecsca.codegen.render.render"]], "render_and_build() (in module pyecsca.codegen.render)": [[4, "pyecsca.codegen.render.render_and_build"]], "pyecsca.codegen.templates": [[5, "module-pyecsca.codegen.templates"]], "pyecsca.ec": [[6, "module-pyecsca.ec"]], "barrett (pyecsca.ec.configuration.reduction attribute)": [[7, "pyecsca.ec.configuration.Reduction.BARRETT"]], "base (pyecsca.ec.configuration.multiplication attribute)": [[7, "pyecsca.ec.configuration.Multiplication.BASE"]], "base (pyecsca.ec.configuration.reduction attribute)": [[7, "pyecsca.ec.configuration.Reduction.BASE"]], "base (pyecsca.ec.configuration.squaring attribute)": [[7, "pyecsca.ec.configuration.Squaring.BASE"]], "comba (pyecsca.ec.configuration.multiplication attribute)": [[7, "pyecsca.ec.configuration.Multiplication.COMBA"]], "comba (pyecsca.ec.configuration.squaring attribute)": [[7, "pyecsca.ec.configuration.Squaring.COMBA"]], "configuration (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.Configuration"]], "euler (pyecsca.ec.configuration.inversion attribute)": [[7, "pyecsca.ec.configuration.Inversion.EULER"]], "enumdefine (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.EnumDefine"]], "gcd (pyecsca.ec.configuration.inversion attribute)": [[7, "pyecsca.ec.configuration.Inversion.GCD"]], "hashtype (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.HashType"]], "inversion (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.Inversion"]], "karatsuba (pyecsca.ec.configuration.multiplication attribute)": [[7, "pyecsca.ec.configuration.Multiplication.KARATSUBA"]], "karatsuba (pyecsca.ec.configuration.squaring attribute)": [[7, "pyecsca.ec.configuration.Squaring.KARATSUBA"]], "montgomery (pyecsca.ec.configuration.reduction attribute)": [[7, "pyecsca.ec.configuration.Reduction.MONTGOMERY"]], "multiplication (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.Multiplication"]], "none (pyecsca.ec.configuration.hashtype attribute)": [[7, "pyecsca.ec.configuration.HashType.NONE"]], "reduce (pyecsca.ec.configuration.randommod attribute)": [[7, "pyecsca.ec.configuration.RandomMod.REDUCE"]], "randommod (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.RandomMod"]], "reduction (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.Reduction"]], "sample (pyecsca.ec.configuration.randommod attribute)": [[7, "pyecsca.ec.configuration.RandomMod.SAMPLE"]], "sha1 (pyecsca.ec.configuration.hashtype attribute)": [[7, "pyecsca.ec.configuration.HashType.SHA1"]], "sha224 (pyecsca.ec.configuration.hashtype attribute)": [[7, "pyecsca.ec.configuration.HashType.SHA224"]], "sha256 (pyecsca.ec.configuration.hashtype attribute)": [[7, "pyecsca.ec.configuration.HashType.SHA256"]], "sha384 (pyecsca.ec.configuration.hashtype attribute)": [[7, "pyecsca.ec.configuration.HashType.SHA384"]], "sha512 (pyecsca.ec.configuration.hashtype attribute)": [[7, "pyecsca.ec.configuration.HashType.SHA512"]], "squaring (class in pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.Squaring"]], "toom_cook (pyecsca.ec.configuration.multiplication attribute)": [[7, "pyecsca.ec.configuration.Multiplication.TOOM_COOK"]], "toom_cook (pyecsca.ec.configuration.squaring attribute)": [[7, "pyecsca.ec.configuration.Squaring.TOOM_COOK"]], "all_configurations() (in module pyecsca.ec.configuration)": [[7, "pyecsca.ec.configuration.all_configurations"]], "coords (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.coords"]], "formulas (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.formulas"]], "hash_type (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.hash_type"]], "inv (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.inv"]], "mod_rand (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.mod_rand"]], "model (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.model"]], "mult (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.mult"]], "names() (pyecsca.ec.configuration.enumdefine class method)": [[7, "pyecsca.ec.configuration.EnumDefine.names"]], "pyecsca.ec.configuration": [[7, "module-pyecsca.ec.configuration"]], "red (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.red"]], "scalarmult (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.scalarmult"]], "sqr (pyecsca.ec.configuration.configuration attribute)": [[7, "pyecsca.ec.configuration.Configuration.sqr"]], "values() (pyecsca.ec.configuration.enumdefine class method)": [[7, "pyecsca.ec.configuration.EnumDefine.values"]], "action (class in pyecsca.ec.context)": [[8, "pyecsca.ec.context.Action"]], "context (class in pyecsca.ec.context)": [[8, "pyecsca.ec.context.Context"]], "defaultcontext (class in pyecsca.ec.context)": [[8, "pyecsca.ec.context.DefaultContext"]], "pathcontext (class in pyecsca.ec.context)": [[8, "pyecsca.ec.context.PathContext"]], "resultaction (class in pyecsca.ec.context)": [[8, "pyecsca.ec.context.ResultAction"]], "tree (class in pyecsca.ec.context)": [[8, "pyecsca.ec.context.Tree"]], "actions (pyecsca.ec.context.defaultcontext attribute)": [[8, "pyecsca.ec.context.DefaultContext.actions"]], "clear() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.clear"]], "copy() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.copy"]], "current (pyecsca.ec.context.defaultcontext attribute)": [[8, "pyecsca.ec.context.DefaultContext.current"]], "current (pyecsca.ec.context.pathcontext attribute)": [[8, "pyecsca.ec.context.PathContext.current"]], "current_depth (pyecsca.ec.context.pathcontext attribute)": [[8, "pyecsca.ec.context.PathContext.current_depth"]], "enter_action() (pyecsca.ec.context.context method)": [[8, "pyecsca.ec.context.Context.enter_action"]], "enter_action() (pyecsca.ec.context.defaultcontext method)": [[8, "pyecsca.ec.context.DefaultContext.enter_action"]], "enter_action() (pyecsca.ec.context.pathcontext method)": [[8, "pyecsca.ec.context.PathContext.enter_action"]], "exit() (pyecsca.ec.context.resultaction method)": [[8, "pyecsca.ec.context.ResultAction.exit"]], "exit_action() (pyecsca.ec.context.context method)": [[8, "pyecsca.ec.context.Context.exit_action"]], "exit_action() (pyecsca.ec.context.defaultcontext method)": [[8, "pyecsca.ec.context.DefaultContext.exit_action"]], "exit_action() (pyecsca.ec.context.pathcontext method)": [[8, "pyecsca.ec.context.PathContext.exit_action"]], "fromkeys() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.fromkeys"]], "get() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.get"]], "get_by_index() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.get_by_index"]], "get_by_key() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.get_by_key"]], "inside (pyecsca.ec.context.action attribute)": [[8, "pyecsca.ec.context.Action.inside"]], "inside (pyecsca.ec.context.resultaction attribute)": [[8, "pyecsca.ec.context.ResultAction.inside"]], "items() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.items"]], "keys() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.keys"]], "local() (in module pyecsca.ec.context)": [[8, "pyecsca.ec.context.local"]], "move_to_end() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.move_to_end"]], "path (pyecsca.ec.context.pathcontext attribute)": [[8, "pyecsca.ec.context.PathContext.path"]], "pop() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.pop"]], "popitem() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.popitem"]], "pyecsca.ec.context": [[8, "module-pyecsca.ec.context"]], "repr() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.repr"]], "result (pyecsca.ec.context.resultaction property)": [[8, "pyecsca.ec.context.ResultAction.result"]], "setdefault() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.setdefault"]], "update() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.update"]], "value (pyecsca.ec.context.pathcontext attribute)": [[8, "pyecsca.ec.context.PathContext.value"]], "values() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.values"]], "walk() (pyecsca.ec.context.tree method)": [[8, "pyecsca.ec.context.Tree.walk"]], "affinecoordinatemodel (class in pyecsca.ec.coordinates)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel"]], "coordinatemodel (class in pyecsca.ec.coordinates)": [[9, "pyecsca.ec.coordinates.CoordinateModel"]], "assumptions (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.assumptions"]], "assumptions (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.assumptions"]], "curve_model (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.curve_model"]], "curve_model (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.curve_model"]], "formulas (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.formulas"]], "formulas (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.formulas"]], "full_name (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.full_name"]], "full_name (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.full_name"]], "homogweights (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.homogweights"]], "homogweights (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.homogweights"]], "name (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.name"]], "name (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.name"]], "neutral (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.neutral"]], "neutral (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.neutral"]], "parameters (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.parameters"]], "parameters (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.parameters"]], "pyecsca.ec.coordinates": [[9, "module-pyecsca.ec.coordinates"]], "satisfying (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.satisfying"]], "satisfying (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.satisfying"]], "toaffine (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.toaffine"]], "toaffine (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.toaffine"]], "tosystem (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.tosystem"]], "tosystem (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.tosystem"]], "variables (pyecsca.ec.coordinates.affinecoordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.AffineCoordinateModel.variables"]], "variables (pyecsca.ec.coordinates.coordinatemodel attribute)": [[9, "pyecsca.ec.coordinates.CoordinateModel.variables"]], "ellipticcurve (class in pyecsca.ec.curve)": [[10, "pyecsca.ec.curve.EllipticCurve"]], "affine_add() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_add"]], "affine_double() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_double"]], "affine_lift_x() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_lift_x"]], "affine_multiply() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_multiply"]], "affine_negate() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_negate"]], "affine_neutral (pyecsca.ec.curve.ellipticcurve property)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_neutral"]], "affine_random() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.affine_random"]], "coordinate_model (pyecsca.ec.curve.ellipticcurve attribute)": [[10, "pyecsca.ec.curve.EllipticCurve.coordinate_model"]], "decode_point() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.decode_point"]], "is_neutral() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.is_neutral"]], "is_on_curve() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.is_on_curve"]], "model (pyecsca.ec.curve.ellipticcurve attribute)": [[10, "pyecsca.ec.curve.EllipticCurve.model"]], "neutral (pyecsca.ec.curve.ellipticcurve attribute)": [[10, "pyecsca.ec.curve.EllipticCurve.neutral"]], "neutral_is_affine (pyecsca.ec.curve.ellipticcurve property)": [[10, "pyecsca.ec.curve.EllipticCurve.neutral_is_affine"]], "parameters (pyecsca.ec.curve.ellipticcurve attribute)": [[10, "pyecsca.ec.curve.EllipticCurve.parameters"]], "prime (pyecsca.ec.curve.ellipticcurve attribute)": [[10, "pyecsca.ec.curve.EllipticCurve.prime"]], "pyecsca.ec.curve": [[10, "module-pyecsca.ec.curve"]], "to_affine() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.to_affine"]], "to_coords() (pyecsca.ec.curve.ellipticcurve method)": [[10, "pyecsca.ec.curve.EllipticCurve.to_coords"]], "a_invariants() (in module pyecsca.ec.divpoly)": [[11, "pyecsca.ec.divpoly.a_invariants"]], "b_invariants() (in module pyecsca.ec.divpoly)": [[11, "pyecsca.ec.divpoly.b_invariants"]], "divpoly() (in module pyecsca.ec.divpoly)": [[11, "pyecsca.ec.divpoly.divpoly"]], "mult_by_n() (in module pyecsca.ec.divpoly)": [[11, "pyecsca.ec.divpoly.mult_by_n"]], "pyecsca.ec.divpoly": [[11, "module-pyecsca.ec.divpoly"]], "noninvertibleerror": [[12, "pyecsca.ec.error.NonInvertibleError"]], "noninvertiblewarning": [[12, "pyecsca.ec.error.NonInvertibleWarning"]], "nonresidueerror": [[12, "pyecsca.ec.error.NonResidueError"]], "nonresiduewarning": [[12, "pyecsca.ec.error.NonResidueWarning"]], "unsatisfiedassumptionerror": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionError"]], "unsatisfiedassumptionwarning": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionWarning"]], "add_note() (pyecsca.ec.error.noninvertibleerror method)": [[12, "pyecsca.ec.error.NonInvertibleError.add_note"]], "add_note() (pyecsca.ec.error.noninvertiblewarning method)": [[12, "pyecsca.ec.error.NonInvertibleWarning.add_note"]], "add_note() (pyecsca.ec.error.nonresidueerror method)": [[12, "pyecsca.ec.error.NonResidueError.add_note"]], "add_note() (pyecsca.ec.error.nonresiduewarning method)": [[12, "pyecsca.ec.error.NonResidueWarning.add_note"]], "add_note() (pyecsca.ec.error.unsatisfiedassumptionerror method)": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionError.add_note"]], "add_note() (pyecsca.ec.error.unsatisfiedassumptionwarning method)": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionWarning.add_note"]], "args (pyecsca.ec.error.noninvertibleerror attribute)": [[12, "pyecsca.ec.error.NonInvertibleError.args"]], "args (pyecsca.ec.error.noninvertiblewarning attribute)": [[12, "pyecsca.ec.error.NonInvertibleWarning.args"]], "args (pyecsca.ec.error.nonresidueerror attribute)": [[12, "pyecsca.ec.error.NonResidueError.args"]], "args (pyecsca.ec.error.nonresiduewarning attribute)": [[12, "pyecsca.ec.error.NonResidueWarning.args"]], "args (pyecsca.ec.error.unsatisfiedassumptionerror attribute)": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionError.args"]], "args (pyecsca.ec.error.unsatisfiedassumptionwarning attribute)": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionWarning.args"]], "pyecsca.ec.error": [[12, "module-pyecsca.ec.error"]], "with_traceback() (pyecsca.ec.error.noninvertibleerror method)": [[12, "pyecsca.ec.error.NonInvertibleError.with_traceback"]], "with_traceback() (pyecsca.ec.error.noninvertiblewarning method)": [[12, "pyecsca.ec.error.NonInvertibleWarning.with_traceback"]], "with_traceback() (pyecsca.ec.error.nonresidueerror method)": [[12, "pyecsca.ec.error.NonResidueError.with_traceback"]], "with_traceback() (pyecsca.ec.error.nonresiduewarning method)": [[12, "pyecsca.ec.error.NonResidueWarning.with_traceback"]], "with_traceback() (pyecsca.ec.error.unsatisfiedassumptionerror method)": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionError.with_traceback"]], "with_traceback() (pyecsca.ec.error.unsatisfiedassumptionwarning method)": [[12, "pyecsca.ec.error.UnsatisfiedAssumptionWarning.with_traceback"]], "pyecsca.ec.formula": [[13, "module-pyecsca.ec.formula"]], "additionformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.AdditionFormula"]], "differentialadditionformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula"]], "doublingformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.DoublingFormula"]], "formula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.Formula"]], "formulaaction (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.FormulaAction"]], "ladderformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.LadderFormula"]], "negationformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.NegationFormula"]], "opresult (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.OpResult"]], "scalingformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.ScalingFormula"]], "triplingformula (class in pyecsca.ec.formula.base)": [[14, "pyecsca.ec.formula.base.TriplingFormula"]], "add_operation() (pyecsca.ec.formula.base.formulaaction method)": [[14, "pyecsca.ec.formula.base.FormulaAction.add_operation"]], "add_result() (pyecsca.ec.formula.base.formulaaction method)": [[14, "pyecsca.ec.formula.base.FormulaAction.add_result"]], "assumptions (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.assumptions"]], "assumptions (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.assumptions"]], "assumptions (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.assumptions"]], "assumptions (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.assumptions"]], "assumptions (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.assumptions"]], "assumptions (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.assumptions"]], "assumptions (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.assumptions"]], "assumptions (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.assumptions"]], "assumptions_str (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.assumptions_str"]], "code (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.code"]], "code (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.code"]], "code (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.code"]], "code (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.code"]], "code (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.code"]], "code (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.code"]], "code (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.code"]], "code (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.code"]], "coordinate_model (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.coordinate_model"]], "exit() (pyecsca.ec.formula.base.formulaaction method)": [[14, "pyecsca.ec.formula.base.FormulaAction.exit"]], "formula (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.formula"]], "input_index (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.input_index"]], "input_index (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.input_index"]], "input_index (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.input_index"]], "input_index (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.input_index"]], "input_index (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.input_index"]], "input_index (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.input_index"]], "input_index (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.input_index"]], "input_index (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.input_index"]], "input_points (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.input_points"]], "inputs (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.inputs"]], "inputs (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.inputs"]], "inputs (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.inputs"]], "inputs (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.inputs"]], "inputs (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.inputs"]], "inputs (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.inputs"]], "inputs (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.inputs"]], "inputs (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.inputs"]], "inputs (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.inputs"]], "inside (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.inside"]], "intermediates (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.intermediates"]], "meta (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.meta"]], "meta (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.meta"]], "meta (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.meta"]], "meta (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.meta"]], "meta (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.meta"]], "meta (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.meta"]], "meta (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.meta"]], "meta (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.meta"]], "name (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.name"]], "name (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.name"]], "name (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.name"]], "name (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.name"]], "name (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.name"]], "name (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.name"]], "name (pyecsca.ec.formula.base.opresult attribute)": [[14, "pyecsca.ec.formula.base.OpResult.name"]], "name (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.name"]], "name (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.name"]], "num_addsubs (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_addsubs"]], "num_divisions (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_divisions"]], "num_inputs (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_inputs"]], "num_inversions (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_inversions"]], "num_multiplications (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_multiplications"]], "num_operations (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_operations"]], "num_operations (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_operations"]], "num_operations (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_operations"]], "num_operations (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_operations"]], "num_operations (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_operations"]], "num_operations (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_operations"]], "num_operations (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_operations"]], "num_operations (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_operations"]], "num_outputs (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_outputs"]], "num_powers (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_powers"]], "num_powers (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_powers"]], "num_powers (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_powers"]], "num_powers (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_powers"]], "num_powers (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_powers"]], "num_powers (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_powers"]], "num_powers (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_powers"]], "num_powers (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_powers"]], "num_squarings (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.num_squarings"]], "op (pyecsca.ec.formula.base.opresult attribute)": [[14, "pyecsca.ec.formula.base.OpResult.op"]], "op_results (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.op_results"]], "output_index (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.output_index"]], "output_index (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.output_index"]], "output_index (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.output_index"]], "output_index (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.output_index"]], "output_index (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.output_index"]], "output_index (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.output_index"]], "output_index (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.output_index"]], "output_index (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.output_index"]], "output_points (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.output_points"]], "outputs (pyecsca.ec.formula.base.additionformula property)": [[14, "pyecsca.ec.formula.base.AdditionFormula.outputs"]], "outputs (pyecsca.ec.formula.base.differentialadditionformula property)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.outputs"]], "outputs (pyecsca.ec.formula.base.doublingformula property)": [[14, "pyecsca.ec.formula.base.DoublingFormula.outputs"]], "outputs (pyecsca.ec.formula.base.formula property)": [[14, "pyecsca.ec.formula.base.Formula.outputs"]], "outputs (pyecsca.ec.formula.base.formulaaction attribute)": [[14, "pyecsca.ec.formula.base.FormulaAction.outputs"]], "outputs (pyecsca.ec.formula.base.ladderformula property)": [[14, "pyecsca.ec.formula.base.LadderFormula.outputs"]], "outputs (pyecsca.ec.formula.base.negationformula property)": [[14, "pyecsca.ec.formula.base.NegationFormula.outputs"]], "outputs (pyecsca.ec.formula.base.scalingformula property)": [[14, "pyecsca.ec.formula.base.ScalingFormula.outputs"]], "outputs (pyecsca.ec.formula.base.triplingformula property)": [[14, "pyecsca.ec.formula.base.TriplingFormula.outputs"]], "parameters (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.parameters"]], "parameters (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.parameters"]], "parameters (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.parameters"]], "parameters (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.parameters"]], "parameters (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.parameters"]], "parameters (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.parameters"]], "parameters (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.parameters"]], "parameters (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.parameters"]], "parents (pyecsca.ec.formula.base.opresult attribute)": [[14, "pyecsca.ec.formula.base.OpResult.parents"]], "pyecsca.ec.formula.base": [[14, "module-pyecsca.ec.formula.base"]], "result (pyecsca.ec.formula.base.formulaaction property)": [[14, "pyecsca.ec.formula.base.FormulaAction.result"]], "shortname (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.shortname"]], "shortname (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.shortname"]], "shortname (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.shortname"]], "shortname (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.shortname"]], "shortname (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.shortname"]], "shortname (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.shortname"]], "shortname (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.shortname"]], "shortname (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.shortname"]], "unified (pyecsca.ec.formula.base.additionformula attribute)": [[14, "pyecsca.ec.formula.base.AdditionFormula.unified"]], "unified (pyecsca.ec.formula.base.differentialadditionformula attribute)": [[14, "pyecsca.ec.formula.base.DifferentialAdditionFormula.unified"]], "unified (pyecsca.ec.formula.base.doublingformula attribute)": [[14, "pyecsca.ec.formula.base.DoublingFormula.unified"]], "unified (pyecsca.ec.formula.base.formula attribute)": [[14, "pyecsca.ec.formula.base.Formula.unified"]], "unified (pyecsca.ec.formula.base.ladderformula attribute)": [[14, "pyecsca.ec.formula.base.LadderFormula.unified"]], "unified (pyecsca.ec.formula.base.negationformula attribute)": [[14, "pyecsca.ec.formula.base.NegationFormula.unified"]], "unified (pyecsca.ec.formula.base.scalingformula attribute)": [[14, "pyecsca.ec.formula.base.ScalingFormula.unified"]], "unified (pyecsca.ec.formula.base.triplingformula attribute)": [[14, "pyecsca.ec.formula.base.TriplingFormula.unified"]], "value (pyecsca.ec.formula.base.opresult attribute)": [[14, "pyecsca.ec.formula.base.OpResult.value"]], "codeadditionformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula"]], "codedifferentialadditionformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula"]], "codedoublingformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula"]], "codeformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeFormula"]], "codeladderformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula"]], "codenegationformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula"]], "codescalingformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula"]], "codetriplingformula (class in pyecsca.ec.formula.code)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula"]], "assumptions (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.assumptions"]], "assumptions (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.assumptions"]], "assumptions_str (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.assumptions_str"]], "code (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.code"]], "code (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.code"]], "code (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.code"]], "code (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.code"]], "code (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.code"]], "code (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.code"]], "code (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.code"]], "code (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.code"]], "coordinate_model (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.coordinate_model"]], "input_index (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.input_index"]], "input_index (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.input_index"]], "inputs (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.inputs"]], "inputs (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.inputs"]], "meta (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.meta"]], "meta (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.meta"]], "meta (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.meta"]], "meta (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.meta"]], "meta (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.meta"]], "meta (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.meta"]], "meta (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.meta"]], "meta (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.meta"]], "name (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.name"]], "name (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.name"]], "name (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.name"]], "name (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.name"]], "name (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.name"]], "name (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.name"]], "name (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.name"]], "name (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.name"]], "num_addsubs (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_addsubs"]], "num_divisions (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_divisions"]], "num_inputs (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_inputs"]], "num_inversions (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_inversions"]], "num_multiplications (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_multiplications"]], "num_operations (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_operations"]], "num_operations (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_operations"]], "num_outputs (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_outputs"]], "num_powers (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_powers"]], "num_powers (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_powers"]], "num_squarings (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.num_squarings"]], "output_index (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.output_index"]], "output_index (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.output_index"]], "outputs (pyecsca.ec.formula.code.codeadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codedifferentialadditionformula property)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codedoublingformula property)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codeformula property)": [[15, "pyecsca.ec.formula.code.CodeFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codeladderformula property)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codenegationformula property)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codescalingformula property)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.outputs"]], "outputs (pyecsca.ec.formula.code.codetriplingformula property)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.outputs"]], "parameters (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.parameters"]], "parameters (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.parameters"]], "pyecsca.ec.formula.code": [[15, "module-pyecsca.ec.formula.code"]], "shortname (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.shortname"]], "shortname (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.shortname"]], "unified (pyecsca.ec.formula.code.codeadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeAdditionFormula.unified"]], "unified (pyecsca.ec.formula.code.codedifferentialadditionformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDifferentialAdditionFormula.unified"]], "unified (pyecsca.ec.formula.code.codedoublingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeDoublingFormula.unified"]], "unified (pyecsca.ec.formula.code.codeformula attribute)": [[15, "pyecsca.ec.formula.code.CodeFormula.unified"]], "unified (pyecsca.ec.formula.code.codeladderformula attribute)": [[15, "pyecsca.ec.formula.code.CodeLadderFormula.unified"]], "unified (pyecsca.ec.formula.code.codenegationformula attribute)": [[15, "pyecsca.ec.formula.code.CodeNegationFormula.unified"]], "unified (pyecsca.ec.formula.code.codescalingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeScalingFormula.unified"]], "unified (pyecsca.ec.formula.code.codetriplingformula attribute)": [[15, "pyecsca.ec.formula.code.CodeTriplingFormula.unified"]], "additionefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula"]], "differentialadditionefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula"]], "doublingefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula"]], "ladderefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula"]], "negationefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula"]], "scalingefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula"]], "triplingefdformula (class in pyecsca.ec.formula.efd)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula"]], "assumptions (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.assumptions"]], "assumptions (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.assumptions"]], "assumptions (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.assumptions"]], "assumptions (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.assumptions"]], "assumptions (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.assumptions"]], "assumptions (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.assumptions"]], "assumptions (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.assumptions"]], "assumptions_str (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.assumptions_str"]], "code (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.code"]], "code (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.code"]], "code (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.code"]], "code (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.code"]], "code (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.code"]], "code (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.code"]], "code (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.code"]], "coordinate_model (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.coordinate_model"]], "input_index (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.input_index"]], "input_index (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.input_index"]], "input_index (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.input_index"]], "input_index (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.input_index"]], "input_index (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.input_index"]], "input_index (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.input_index"]], "input_index (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.input_index"]], "inputs (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.inputs"]], "inputs (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.inputs"]], "inputs (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.inputs"]], "inputs (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.inputs"]], "inputs (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.inputs"]], "inputs (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.inputs"]], "inputs (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.inputs"]], "meta (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.meta"]], "meta (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.meta"]], "meta (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.meta"]], "meta (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.meta"]], "meta (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.meta"]], "meta (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.meta"]], "meta (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.meta"]], "name (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.name"]], "name (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.name"]], "name (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.name"]], "name (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.name"]], "name (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.name"]], "name (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.name"]], "name (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.name"]], "num_addsubs (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_addsubs"]], "num_divisions (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_divisions"]], "num_inputs (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_inputs"]], "num_inversions (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_inversions"]], "num_multiplications (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_multiplications"]], "num_operations (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_operations"]], "num_operations (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_operations"]], "num_operations (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_operations"]], "num_operations (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_operations"]], "num_operations (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_operations"]], "num_operations (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_operations"]], "num_operations (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_operations"]], "num_outputs (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_outputs"]], "num_powers (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_powers"]], "num_powers (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_powers"]], "num_powers (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_powers"]], "num_powers (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_powers"]], "num_powers (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_powers"]], "num_powers (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_powers"]], "num_powers (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_powers"]], "num_squarings (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.num_squarings"]], "output_index (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.output_index"]], "output_index (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.output_index"]], "output_index (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.output_index"]], "output_index (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.output_index"]], "output_index (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.output_index"]], "output_index (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.output_index"]], "output_index (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.output_index"]], "outputs (pyecsca.ec.formula.efd.additionefdformula property)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.outputs"]], "outputs (pyecsca.ec.formula.efd.differentialadditionefdformula property)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.outputs"]], "outputs (pyecsca.ec.formula.efd.doublingefdformula property)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.outputs"]], "outputs (pyecsca.ec.formula.efd.ladderefdformula property)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.outputs"]], "outputs (pyecsca.ec.formula.efd.negationefdformula property)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.outputs"]], "outputs (pyecsca.ec.formula.efd.scalingefdformula property)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.outputs"]], "outputs (pyecsca.ec.formula.efd.triplingefdformula property)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.outputs"]], "parameters (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.parameters"]], "parameters (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.parameters"]], "parameters (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.parameters"]], "parameters (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.parameters"]], "parameters (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.parameters"]], "parameters (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.parameters"]], "parameters (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.parameters"]], "pyecsca.ec.formula.efd": [[16, "module-pyecsca.ec.formula.efd"]], "shortname (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.shortname"]], "shortname (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.shortname"]], "shortname (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.shortname"]], "shortname (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.shortname"]], "shortname (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.shortname"]], "shortname (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.shortname"]], "shortname (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.shortname"]], "to_code() (pyecsca.ec.formula.efd.additionefdformula method)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.to_code"]], "to_code() (pyecsca.ec.formula.efd.differentialadditionefdformula method)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.to_code"]], "to_code() (pyecsca.ec.formula.efd.doublingefdformula method)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.to_code"]], "to_code() (pyecsca.ec.formula.efd.ladderefdformula method)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.to_code"]], "to_code() (pyecsca.ec.formula.efd.negationefdformula method)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.to_code"]], "to_code() (pyecsca.ec.formula.efd.scalingefdformula method)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.to_code"]], "to_code() (pyecsca.ec.formula.efd.triplingefdformula method)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.to_code"]], "unified (pyecsca.ec.formula.efd.additionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.AdditionEFDFormula.unified"]], "unified (pyecsca.ec.formula.efd.differentialadditionefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DifferentialAdditionEFDFormula.unified"]], "unified (pyecsca.ec.formula.efd.doublingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.DoublingEFDFormula.unified"]], "unified (pyecsca.ec.formula.efd.ladderefdformula attribute)": [[16, "pyecsca.ec.formula.efd.LadderEFDFormula.unified"]], "unified (pyecsca.ec.formula.efd.negationefdformula attribute)": [[16, "pyecsca.ec.formula.efd.NegationEFDFormula.unified"]], "unified (pyecsca.ec.formula.efd.scalingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.ScalingEFDFormula.unified"]], "unified (pyecsca.ec.formula.efd.triplingefdformula attribute)": [[16, "pyecsca.ec.formula.efd.TriplingEFDFormula.unified"]], "expand_formula_set() (in module pyecsca.ec.formula.expand)": [[17, "pyecsca.ec.formula.expand.expand_formula_set"]], "pyecsca.ec.formula.expand": [[17, "module-pyecsca.ec.formula.expand"]], "fakeadditionformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula"]], "fakedifferentialadditionformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula"]], "fakedoublingformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula"]], "fakeladderformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula"]], "fakenegationformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula"]], "fakepoint (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakePoint"]], "fakescalingformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula"]], "faketriplingformula (class in pyecsca.ec.formula.fake)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula"]], "assumptions (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.assumptions"]], "assumptions (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.assumptions"]], "assumptions (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.assumptions"]], "assumptions (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.assumptions"]], "assumptions (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.assumptions"]], "assumptions (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.assumptions"]], "assumptions (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.assumptions"]], "assumptions_str (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.assumptions_str"]], "assumptions_str (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.assumptions_str"]], "code (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.code"]], "code (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.code"]], "code (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.code"]], "code (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.code"]], "code (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.code"]], "code (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.code"]], "code (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.code"]], "coordinate_model (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.fakepoint attribute)": [[18, "pyecsca.ec.formula.fake.FakePoint.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.coordinate_model"]], "coordinate_model (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.coordinate_model"]], "coords (pyecsca.ec.formula.fake.fakepoint attribute)": [[18, "pyecsca.ec.formula.fake.FakePoint.coords"]], "equals() (pyecsca.ec.formula.fake.fakepoint method)": [[18, "pyecsca.ec.formula.fake.FakePoint.equals"]], "equals_affine() (pyecsca.ec.formula.fake.fakepoint method)": [[18, "pyecsca.ec.formula.fake.FakePoint.equals_affine"]], "equals_scaled() (pyecsca.ec.formula.fake.fakepoint method)": [[18, "pyecsca.ec.formula.fake.FakePoint.equals_scaled"]], "field (pyecsca.ec.formula.fake.fakepoint attribute)": [[18, "pyecsca.ec.formula.fake.FakePoint.field"]], "input_index (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.input_index"]], "input_index (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.input_index"]], "input_index (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.input_index"]], "input_index (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.input_index"]], "input_index (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.input_index"]], "input_index (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.input_index"]], "input_index (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.input_index"]], "inputs (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.inputs"]], "inputs (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.inputs"]], "inputs (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.inputs"]], "inputs (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.inputs"]], "inputs (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.inputs"]], "inputs (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.inputs"]], "inputs (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.inputs"]], "meta (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.meta"]], "meta (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.meta"]], "meta (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.meta"]], "meta (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.meta"]], "meta (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.meta"]], "meta (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.meta"]], "meta (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.meta"]], "name (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.name"]], "name (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.name"]], "name (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.name"]], "name (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.name"]], "name (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.name"]], "name (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.name"]], "name (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.name"]], "num_addsubs (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_addsubs"]], "num_addsubs (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_addsubs"]], "num_divisions (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_divisions"]], "num_divisions (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_divisions"]], "num_inputs (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_inputs"]], "num_inputs (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_inputs"]], "num_inversions (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_inversions"]], "num_inversions (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_inversions"]], "num_multiplications (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_multiplications"]], "num_multiplications (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_multiplications"]], "num_operations (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_operations"]], "num_operations (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_operations"]], "num_operations (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_operations"]], "num_operations (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_operations"]], "num_operations (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_operations"]], "num_operations (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_operations"]], "num_operations (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_operations"]], "num_outputs (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_outputs"]], "num_outputs (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_outputs"]], "num_powers (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_powers"]], "num_powers (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_powers"]], "num_powers (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_powers"]], "num_powers (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_powers"]], "num_powers (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_powers"]], "num_powers (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_powers"]], "num_powers (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_powers"]], "num_squarings (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.num_squarings"]], "num_squarings (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.num_squarings"]], "output_index (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.output_index"]], "output_index (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.output_index"]], "output_index (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.output_index"]], "output_index (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.output_index"]], "output_index (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.output_index"]], "output_index (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.output_index"]], "output_index (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.output_index"]], "outputs (pyecsca.ec.formula.fake.fakeadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.outputs"]], "outputs (pyecsca.ec.formula.fake.fakedifferentialadditionformula property)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.outputs"]], "outputs (pyecsca.ec.formula.fake.fakedoublingformula property)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.outputs"]], "outputs (pyecsca.ec.formula.fake.fakeladderformula property)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.outputs"]], "outputs (pyecsca.ec.formula.fake.fakenegationformula property)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.outputs"]], "outputs (pyecsca.ec.formula.fake.fakescalingformula property)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.outputs"]], "outputs (pyecsca.ec.formula.fake.faketriplingformula property)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.outputs"]], "parameters (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.parameters"]], "parameters (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.parameters"]], "parameters (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.parameters"]], "parameters (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.parameters"]], "parameters (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.parameters"]], "parameters (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.parameters"]], "parameters (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.parameters"]], "pyecsca.ec.formula.fake": [[18, "module-pyecsca.ec.formula.fake"]], "shortname (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.shortname"]], "shortname (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.shortname"]], "shortname (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.shortname"]], "shortname (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.shortname"]], "shortname (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.shortname"]], "shortname (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.shortname"]], "shortname (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.shortname"]], "to_affine() (pyecsca.ec.formula.fake.fakepoint method)": [[18, "pyecsca.ec.formula.fake.FakePoint.to_affine"]], "to_model() (pyecsca.ec.formula.fake.fakepoint method)": [[18, "pyecsca.ec.formula.fake.FakePoint.to_model"]], "unified (pyecsca.ec.formula.fake.fakeadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeAdditionFormula.unified"]], "unified (pyecsca.ec.formula.fake.fakedifferentialadditionformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDifferentialAdditionFormula.unified"]], "unified (pyecsca.ec.formula.fake.fakedoublingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeDoublingFormula.unified"]], "unified (pyecsca.ec.formula.fake.fakeladderformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeLadderFormula.unified"]], "unified (pyecsca.ec.formula.fake.fakenegationformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeNegationFormula.unified"]], "unified (pyecsca.ec.formula.fake.fakescalingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeScalingFormula.unified"]], "unified (pyecsca.ec.formula.fake.faketriplingformula attribute)": [[18, "pyecsca.ec.formula.fake.FakeTriplingFormula.unified"]], "addfliparoo (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo"]], "addsubfliparoo (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo"]], "badfliparoo": [[19, "pyecsca.ec.formula.fliparoo.BadFliparoo"]], "dummynode (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode"]], "fliparoo (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo"]], "mulfliparoo (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo"]], "signednode (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.SignedNode"]], "signedsubgraph (class in pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.SignedSubGraph"]], "add_node() (pyecsca.ec.formula.fliparoo.signedsubgraph method)": [[19, "pyecsca.ec.formula.fliparoo.SignedSubGraph.add_node"]], "add_note() (pyecsca.ec.formula.fliparoo.badfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.BadFliparoo.add_note"]], "args (pyecsca.ec.formula.fliparoo.badfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.BadFliparoo.args"]], "change_signs() (pyecsca.ec.formula.fliparoo.signedsubgraph method)": [[19, "pyecsca.ec.formula.fliparoo.SignedSubGraph.change_signs"]], "combine_all_pairs_signed_nodes() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.combine_all_pairs_signed_nodes"]], "combine_signed_nodes() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.combine_signed_nodes"]], "components (pyecsca.ec.formula.fliparoo.signedsubgraph property)": [[19, "pyecsca.ec.formula.fliparoo.SignedSubGraph.components"]], "deepcopy() (pyecsca.ec.formula.fliparoo.addfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.deepcopy"]], "deepcopy() (pyecsca.ec.formula.fliparoo.addsubfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.deepcopy"]], "deepcopy() (pyecsca.ec.formula.fliparoo.fliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.deepcopy"]], "deepcopy() (pyecsca.ec.formula.fliparoo.mulfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.deepcopy"]], "deepcopy() (pyecsca.ec.formula.fliparoo.signedsubgraph method)": [[19, "pyecsca.ec.formula.fliparoo.SignedSubGraph.deepcopy"]], "disconnect_fliparoo_outputs() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.disconnect_fliparoo_outputs"]], "extract_fliparoo_signed_inputs() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.extract_fliparoo_signed_inputs"]], "find_fliparoos() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.find_fliparoos"]], "first (pyecsca.ec.formula.fliparoo.addfliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.first"]], "first (pyecsca.ec.formula.fliparoo.addsubfliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.first"]], "first (pyecsca.ec.formula.fliparoo.fliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.first"]], "first (pyecsca.ec.formula.fliparoo.mulfliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.first"]], "generate_fliparood_formulas() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.generate_fliparood_formulas"]], "generate_fliparood_graphs() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.generate_fliparood_graphs"]], "graph (pyecsca.ec.formula.fliparoo.addfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.graph"]], "graph (pyecsca.ec.formula.fliparoo.addsubfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.graph"]], "graph (pyecsca.ec.formula.fliparoo.fliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.graph"]], "graph (pyecsca.ec.formula.fliparoo.mulfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.graph"]], "input_nodes() (pyecsca.ec.formula.fliparoo.addfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.input_nodes"]], "input_nodes() (pyecsca.ec.formula.fliparoo.addsubfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.input_nodes"]], "input_nodes() (pyecsca.ec.formula.fliparoo.fliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.input_nodes"]], "input_nodes() (pyecsca.ec.formula.fliparoo.mulfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.input_nodes"]], "is_add (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_add"]], "is_div (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_div"]], "is_id (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_id"]], "is_inv (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_inv"]], "is_mul (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_mul"]], "is_neg (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_neg"]], "is_pow (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_pow"]], "is_sqr (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_sqr"]], "is_sub (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.is_sub"]], "is_subfliparoo() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.is_subfliparoo"]], "label (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.label"]], "largest_fliparoo() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.largest_fliparoo"]], "last (pyecsca.ec.formula.fliparoo.addfliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.last"]], "last (pyecsca.ec.formula.fliparoo.addsubfliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.last"]], "last (pyecsca.ec.formula.fliparoo.fliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.last"]], "last (pyecsca.ec.formula.fliparoo.mulfliparoo property)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.last"]], "mirror_node() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.mirror_node"]], "node (pyecsca.ec.formula.fliparoo.signednode attribute)": [[19, "pyecsca.ec.formula.fliparoo.SignedNode.node"]], "nodes (pyecsca.ec.formula.fliparoo.addfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.nodes"]], "nodes (pyecsca.ec.formula.fliparoo.addsubfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.nodes"]], "nodes (pyecsca.ec.formula.fliparoo.fliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.nodes"]], "nodes (pyecsca.ec.formula.fliparoo.mulfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.nodes"]], "operator (pyecsca.ec.formula.fliparoo.addfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.operator"]], "operator (pyecsca.ec.formula.fliparoo.addsubfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.operator"]], "operator (pyecsca.ec.formula.fliparoo.fliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.operator"]], "operator (pyecsca.ec.formula.fliparoo.mulfliparoo attribute)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.operator"]], "previous() (pyecsca.ec.formula.fliparoo.addfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.previous"]], "previous() (pyecsca.ec.formula.fliparoo.addsubfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.previous"]], "previous() (pyecsca.ec.formula.fliparoo.fliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.previous"]], "previous() (pyecsca.ec.formula.fliparoo.mulfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.previous"]], "pyecsca.ec.formula.fliparoo": [[19, "module-pyecsca.ec.formula.fliparoo"]], "reconnect_fliparoo_outputs() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.reconnect_fliparoo_outputs"]], "reconnect_outgoing_nodes() (pyecsca.ec.formula.fliparoo.dummynode method)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.reconnect_outgoing_nodes"]], "recursive_fliparoo() (in module pyecsca.ec.formula.fliparoo)": [[19, "pyecsca.ec.formula.fliparoo.recursive_fliparoo"]], "remove_node() (pyecsca.ec.formula.fliparoo.signedsubgraph method)": [[19, "pyecsca.ec.formula.fliparoo.SignedSubGraph.remove_node"]], "result (pyecsca.ec.formula.fliparoo.dummynode property)": [[19, "pyecsca.ec.formula.fliparoo.DummyNode.result"]], "sign (pyecsca.ec.formula.fliparoo.signednode attribute)": [[19, "pyecsca.ec.formula.fliparoo.SignedNode.sign"]], "slice() (pyecsca.ec.formula.fliparoo.addfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.slice"]], "slice() (pyecsca.ec.formula.fliparoo.addsubfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.slice"]], "slice() (pyecsca.ec.formula.fliparoo.fliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.slice"]], "slice() (pyecsca.ec.formula.fliparoo.mulfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.slice"]], "verify_chain() (pyecsca.ec.formula.fliparoo.addfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddFliparoo.verify_chain"]], "verify_chain() (pyecsca.ec.formula.fliparoo.addsubfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.AddSubFliparoo.verify_chain"]], "verify_chain() (pyecsca.ec.formula.fliparoo.fliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.Fliparoo.verify_chain"]], "verify_chain() (pyecsca.ec.formula.fliparoo.mulfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.MulFliparoo.verify_chain"]], "with_traceback() (pyecsca.ec.formula.fliparoo.badfliparoo method)": [[19, "pyecsca.ec.formula.fliparoo.BadFliparoo.with_traceback"]], "codeopnode (class in pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.CodeOpNode"]], "constantnode (class in pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.ConstantNode"]], "formulagraph (class in pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.FormulaGraph"]], "inputnode (class in pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.InputNode"]], "node (class in pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.Node"]], "add_node() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.add_node"]], "assumptions (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.assumptions"]], "color (pyecsca.ec.formula.graph.codeopnode attribute)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.color"]], "color (pyecsca.ec.formula.graph.constantnode attribute)": [[20, "pyecsca.ec.formula.graph.ConstantNode.color"]], "color (pyecsca.ec.formula.graph.inputnode attribute)": [[20, "pyecsca.ec.formula.graph.InputNode.color"]], "coordinate_model (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.coordinate_model"]], "deepcopy() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.deepcopy"]], "draw() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.draw"]], "find_all_paths() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.find_all_paths"]], "formula_input_variables() (in module pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.formula_input_variables"]], "from_str() (pyecsca.ec.formula.graph.codeopnode class method)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.from_str"]], "input_nodes (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.input_nodes"]], "is_add (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_add"]], "is_add (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_add"]], "is_add (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_add"]], "is_add (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_add"]], "is_div (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_div"]], "is_div (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_div"]], "is_div (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_div"]], "is_div (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_div"]], "is_id (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_id"]], "is_id (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_id"]], "is_id (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_id"]], "is_id (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_id"]], "is_inv (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_inv"]], "is_inv (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_inv"]], "is_inv (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_inv"]], "is_inv (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_inv"]], "is_mul (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_mul"]], "is_mul (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_mul"]], "is_mul (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_mul"]], "is_mul (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_mul"]], "is_neg (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_neg"]], "is_neg (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_neg"]], "is_neg (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_neg"]], "is_neg (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_neg"]], "is_pow (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_pow"]], "is_pow (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_pow"]], "is_pow (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_pow"]], "is_pow (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_pow"]], "is_sqr (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_sqr"]], "is_sqr (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_sqr"]], "is_sqr (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_sqr"]], "is_sqr (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_sqr"]], "is_sub (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.is_sub"]], "is_sub (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.is_sub"]], "is_sub (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.is_sub"]], "is_sub (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.is_sub"]], "label (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.label"]], "label (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.label"]], "label (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.label"]], "label (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.label"]], "levels() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.levels"]], "name (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.name"]], "networkx_graph() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.networkx_graph"]], "node_index() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.node_index"]], "nodes (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.nodes"]], "optype (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.optype"]], "output_names (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.output_names"]], "output_nodes() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.output_nodes"]], "parameters (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.parameters"]], "planar_positions() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.planar_positions"]], "print() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.print"]], "pyecsca.ec.formula.graph": [[20, "module-pyecsca.ec.formula.graph"]], "reconnect_outgoing_nodes() (pyecsca.ec.formula.graph.codeopnode method)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.reconnect_outgoing_nodes"]], "reconnect_outgoing_nodes() (pyecsca.ec.formula.graph.constantnode method)": [[20, "pyecsca.ec.formula.graph.ConstantNode.reconnect_outgoing_nodes"]], "reconnect_outgoing_nodes() (pyecsca.ec.formula.graph.inputnode method)": [[20, "pyecsca.ec.formula.graph.InputNode.reconnect_outgoing_nodes"]], "reconnect_outgoing_nodes() (pyecsca.ec.formula.graph.node method)": [[20, "pyecsca.ec.formula.graph.Node.reconnect_outgoing_nodes"]], "reindex() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.reindex"]], "remove_node() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.remove_node"]], "rename_ivs() (in module pyecsca.ec.formula.graph)": [[20, "pyecsca.ec.formula.graph.rename_ivs"]], "reorder() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.reorder"]], "result (pyecsca.ec.formula.graph.codeopnode property)": [[20, "pyecsca.ec.formula.graph.CodeOpNode.result"]], "result (pyecsca.ec.formula.graph.constantnode property)": [[20, "pyecsca.ec.formula.graph.ConstantNode.result"]], "result (pyecsca.ec.formula.graph.inputnode property)": [[20, "pyecsca.ec.formula.graph.InputNode.result"]], "result (pyecsca.ec.formula.graph.node property)": [[20, "pyecsca.ec.formula.graph.Node.result"]], "roots (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.roots"]], "shortname (pyecsca.ec.formula.graph.formulagraph attribute)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.shortname"]], "to_formula() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.to_formula"]], "update() (pyecsca.ec.formula.graph.formulagraph method)": [[20, "pyecsca.ec.formula.graph.FormulaGraph.update"]], "formula_ivs() (in module pyecsca.ec.formula.metrics)": [[21, "pyecsca.ec.formula.metrics.formula_ivs"]], "formula_similarity() (in module pyecsca.ec.formula.metrics)": [[21, "pyecsca.ec.formula.metrics.formula_similarity"]], "formula_similarity_abs() (in module pyecsca.ec.formula.metrics)": [[21, "pyecsca.ec.formula.metrics.formula_similarity_abs"]], "formula_similarity_fuzz() (in module pyecsca.ec.formula.metrics)": [[21, "pyecsca.ec.formula.metrics.formula_similarity_fuzz"]], "ivs_norm() (in module pyecsca.ec.formula.metrics)": [[21, "pyecsca.ec.formula.metrics.ivs_norm"]], "pyecsca.ec.formula.metrics": [[21, "module-pyecsca.ec.formula.metrics"]], "partition (class in pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.Partition"]], "compute_partitions() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.compute_partitions"]], "expand_all_muls() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.expand_all_muls"]], "expand_all_nopower2_muls() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.expand_all_nopower2_muls"]], "expand_mul() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.expand_mul"]], "find_all_xplusx() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.find_all_XplusX"]], "find_constant_mul_fliparoos() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.find_constant_mul_fliparoos"]], "find_expansion_nodes() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.find_expansion_nodes"]], "find_single_input_add_fliparoos() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.find_single_input_add_fliparoos"]], "generate_all_node_partitions() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.generate_all_node_partitions"]], "generate_partitioned_formulas() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.generate_partitioned_formulas"]], "is_final (pyecsca.ec.formula.partitions.partition property)": [[22, "pyecsca.ec.formula.partitions.Partition.is_final"]], "is_power_of_2() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.is_power_of_2"]], "partition_node() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.partition_node"]], "parts (pyecsca.ec.formula.partitions.partition attribute)": [[22, "pyecsca.ec.formula.partitions.Partition.parts"]], "pyecsca.ec.formula.partitions": [[22, "module-pyecsca.ec.formula.partitions"]], "reduce_xplusx() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.reduce_XplusX"]], "reduce_add_fliparoo() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.reduce_add_fliparoo"]], "reduce_all_xplusx() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.reduce_all_XplusX"]], "reduce_all_adds() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.reduce_all_adds"]], "reduce_mul_fliparoo() (in module pyecsca.ec.formula.partitions)": [[22, "pyecsca.ec.formula.partitions.reduce_mul_fliparoo"]], "value (pyecsca.ec.formula.partitions.partition attribute)": [[22, "pyecsca.ec.formula.partitions.Partition.value"]], "badsignswitch": [[23, "pyecsca.ec.formula.switch_sign.BadSignSwitch"]], "add_note() (pyecsca.ec.formula.switch_sign.badsignswitch method)": [[23, "pyecsca.ec.formula.switch_sign.BadSignSwitch.add_note"]], "args (pyecsca.ec.formula.switch_sign.badsignswitch attribute)": [[23, "pyecsca.ec.formula.switch_sign.BadSignSwitch.args"]], "change_operator() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.change_operator"]], "change_sides() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.change_sides"]], "generate_switched_formulas() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.generate_switched_formulas"]], "powerlist() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.powerlist"]], "pyecsca.ec.formula.switch_sign": [[23, "module-pyecsca.ec.formula.switch_sign"]], "sign_test() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.sign_test"]], "subnode_lists() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.subnode_lists"]], "switch_sign() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.switch_sign"]], "switch_sign_propagate() (in module pyecsca.ec.formula.switch_sign)": [[23, "pyecsca.ec.formula.switch_sign.switch_sign_propagate"]], "with_traceback() (pyecsca.ec.formula.switch_sign.badsignswitch method)": [[23, "pyecsca.ec.formula.switch_sign.BadSignSwitch.with_traceback"]], "pyecsca.ec.formula.unroll": [[24, "module-pyecsca.ec.formula.unroll"]], "unroll_formula() (in module pyecsca.ec.formula.unroll)": [[24, "pyecsca.ec.formula.unroll.unroll_formula"]], "unroll_formula_expr() (in module pyecsca.ec.formula.unroll)": [[24, "pyecsca.ec.formula.unroll.unroll_formula_expr"]], "ecdhaction (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDHAction"]], "ecdh_none (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE"]], "ecdh_sha1 (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1"]], "ecdh_sha224 (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224"]], "ecdh_sha256 (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256"]], "ecdh_sha384 (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384"]], "ecdh_sha512 (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512"]], "keyagreement (class in pyecsca.ec.key_agreement)": [[25, "pyecsca.ec.key_agreement.KeyAgreement"]], "exit() (pyecsca.ec.key_agreement.ecdhaction method)": [[25, "pyecsca.ec.key_agreement.ECDHAction.exit"]], "hash_algo (pyecsca.ec.key_agreement.ecdhaction attribute)": [[25, "pyecsca.ec.key_agreement.ECDHAction.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.ecdh_none attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.ecdh_sha1 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.ecdh_sha224 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.ecdh_sha256 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.ecdh_sha384 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.ecdh_sha512 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.hash_algo"]], "hash_algo (pyecsca.ec.key_agreement.keyagreement attribute)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.hash_algo"]], "inside (pyecsca.ec.key_agreement.ecdhaction attribute)": [[25, "pyecsca.ec.key_agreement.ECDHAction.inside"]], "mult (pyecsca.ec.key_agreement.ecdh_none attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.mult"]], "mult (pyecsca.ec.key_agreement.ecdh_sha1 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.mult"]], "mult (pyecsca.ec.key_agreement.ecdh_sha224 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.mult"]], "mult (pyecsca.ec.key_agreement.ecdh_sha256 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.mult"]], "mult (pyecsca.ec.key_agreement.ecdh_sha384 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.mult"]], "mult (pyecsca.ec.key_agreement.ecdh_sha512 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.mult"]], "mult (pyecsca.ec.key_agreement.keyagreement attribute)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.mult"]], "params (pyecsca.ec.key_agreement.ecdhaction attribute)": [[25, "pyecsca.ec.key_agreement.ECDHAction.params"]], "params (pyecsca.ec.key_agreement.ecdh_none attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.params"]], "params (pyecsca.ec.key_agreement.ecdh_sha1 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.params"]], "params (pyecsca.ec.key_agreement.ecdh_sha224 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.params"]], "params (pyecsca.ec.key_agreement.ecdh_sha256 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.params"]], "params (pyecsca.ec.key_agreement.ecdh_sha384 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.params"]], "params (pyecsca.ec.key_agreement.ecdh_sha512 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.params"]], "params (pyecsca.ec.key_agreement.keyagreement attribute)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.params"]], "perform() (pyecsca.ec.key_agreement.ecdh_none method)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.perform"]], "perform() (pyecsca.ec.key_agreement.ecdh_sha1 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.perform"]], "perform() (pyecsca.ec.key_agreement.ecdh_sha224 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.perform"]], "perform() (pyecsca.ec.key_agreement.ecdh_sha256 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.perform"]], "perform() (pyecsca.ec.key_agreement.ecdh_sha384 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.perform"]], "perform() (pyecsca.ec.key_agreement.ecdh_sha512 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.perform"]], "perform() (pyecsca.ec.key_agreement.keyagreement method)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.perform"]], "perform_raw() (pyecsca.ec.key_agreement.ecdh_none method)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.perform_raw"]], "perform_raw() (pyecsca.ec.key_agreement.ecdh_sha1 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.perform_raw"]], "perform_raw() (pyecsca.ec.key_agreement.ecdh_sha224 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.perform_raw"]], "perform_raw() (pyecsca.ec.key_agreement.ecdh_sha256 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.perform_raw"]], "perform_raw() (pyecsca.ec.key_agreement.ecdh_sha384 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.perform_raw"]], "perform_raw() (pyecsca.ec.key_agreement.ecdh_sha512 method)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.perform_raw"]], "perform_raw() (pyecsca.ec.key_agreement.keyagreement method)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.perform_raw"]], "privkey (pyecsca.ec.key_agreement.ecdhaction attribute)": [[25, "pyecsca.ec.key_agreement.ECDHAction.privkey"]], "privkey (pyecsca.ec.key_agreement.ecdh_none attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.privkey"]], "privkey (pyecsca.ec.key_agreement.ecdh_sha1 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.privkey"]], "privkey (pyecsca.ec.key_agreement.ecdh_sha224 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.privkey"]], "privkey (pyecsca.ec.key_agreement.ecdh_sha256 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.privkey"]], "privkey (pyecsca.ec.key_agreement.ecdh_sha384 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.privkey"]], "privkey (pyecsca.ec.key_agreement.ecdh_sha512 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.privkey"]], "privkey (pyecsca.ec.key_agreement.keyagreement attribute)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.privkey"]], "pubkey (pyecsca.ec.key_agreement.ecdhaction attribute)": [[25, "pyecsca.ec.key_agreement.ECDHAction.pubkey"]], "pubkey (pyecsca.ec.key_agreement.ecdh_none attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_NONE.pubkey"]], "pubkey (pyecsca.ec.key_agreement.ecdh_sha1 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA1.pubkey"]], "pubkey (pyecsca.ec.key_agreement.ecdh_sha224 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA224.pubkey"]], "pubkey (pyecsca.ec.key_agreement.ecdh_sha256 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA256.pubkey"]], "pubkey (pyecsca.ec.key_agreement.ecdh_sha384 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA384.pubkey"]], "pubkey (pyecsca.ec.key_agreement.ecdh_sha512 attribute)": [[25, "pyecsca.ec.key_agreement.ECDH_SHA512.pubkey"]], "pubkey (pyecsca.ec.key_agreement.keyagreement attribute)": [[25, "pyecsca.ec.key_agreement.KeyAgreement.pubkey"]], "pyecsca.ec.key_agreement": [[25, "module-pyecsca.ec.key_agreement"]], "result (pyecsca.ec.key_agreement.ecdhaction property)": [[25, "pyecsca.ec.key_agreement.ECDHAction.result"]], "keygeneration (class in pyecsca.ec.key_generation)": [[26, "pyecsca.ec.key_generation.KeyGeneration"]], "keygenaction (class in pyecsca.ec.key_generation)": [[26, "pyecsca.ec.key_generation.KeygenAction"]], "affine (pyecsca.ec.key_generation.keygeneration attribute)": [[26, "pyecsca.ec.key_generation.KeyGeneration.affine"]], "exit() (pyecsca.ec.key_generation.keygenaction method)": [[26, "pyecsca.ec.key_generation.KeygenAction.exit"]], "generate() (pyecsca.ec.key_generation.keygeneration method)": [[26, "pyecsca.ec.key_generation.KeyGeneration.generate"]], "inside (pyecsca.ec.key_generation.keygenaction attribute)": [[26, "pyecsca.ec.key_generation.KeygenAction.inside"]], "mult (pyecsca.ec.key_generation.keygeneration attribute)": [[26, "pyecsca.ec.key_generation.KeyGeneration.mult"]], "params (pyecsca.ec.key_generation.keygeneration attribute)": [[26, "pyecsca.ec.key_generation.KeyGeneration.params"]], "params (pyecsca.ec.key_generation.keygenaction attribute)": [[26, "pyecsca.ec.key_generation.KeygenAction.params"]], "pyecsca.ec.key_generation": [[26, "module-pyecsca.ec.key_generation"]], "result (pyecsca.ec.key_generation.keygenaction property)": [[26, "pyecsca.ec.key_generation.KeygenAction.result"]], "gmpmod (class in pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.GMPMod"]], "mod (class in pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.Mod"]], "randommodaction (class in pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.RandomModAction"]], "rawmod (class in pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.RawMod"]], "symbolicmod (class in pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.SymbolicMod"]], "undefined (class in pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.Undefined"]], "exit() (pyecsca.ec.mod.randommodaction method)": [[27, "pyecsca.ec.mod.RandomModAction.exit"]], "extgcd() (in module pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.extgcd"]], "gcd() (in module pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.gcd"]], "inside (pyecsca.ec.mod.randommodaction attribute)": [[27, "pyecsca.ec.mod.RandomModAction.inside"]], "inverse() (pyecsca.ec.mod.gmpmod method)": [[27, "pyecsca.ec.mod.GMPMod.inverse"]], "inverse() (pyecsca.ec.mod.mod method)": [[27, "pyecsca.ec.mod.Mod.inverse"]], "inverse() (pyecsca.ec.mod.rawmod method)": [[27, "pyecsca.ec.mod.RawMod.inverse"]], "inverse() (pyecsca.ec.mod.symbolicmod method)": [[27, "pyecsca.ec.mod.SymbolicMod.inverse"]], "inverse() (pyecsca.ec.mod.undefined method)": [[27, "pyecsca.ec.mod.Undefined.inverse"]], "is_residue() (pyecsca.ec.mod.gmpmod method)": [[27, "pyecsca.ec.mod.GMPMod.is_residue"]], "is_residue() (pyecsca.ec.mod.mod method)": [[27, "pyecsca.ec.mod.Mod.is_residue"]], "is_residue() (pyecsca.ec.mod.rawmod method)": [[27, "pyecsca.ec.mod.RawMod.is_residue"]], "is_residue() (pyecsca.ec.mod.symbolicmod method)": [[27, "pyecsca.ec.mod.SymbolicMod.is_residue"]], "is_residue() (pyecsca.ec.mod.undefined method)": [[27, "pyecsca.ec.mod.Undefined.is_residue"]], "jacobi() (in module pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.jacobi"]], "miller_rabin() (in module pyecsca.ec.mod)": [[27, "pyecsca.ec.mod.miller_rabin"]], "n (pyecsca.ec.mod.gmpmod attribute)": [[27, "pyecsca.ec.mod.GMPMod.n"]], "n (pyecsca.ec.mod.mod attribute)": [[27, "pyecsca.ec.mod.Mod.n"]], "n (pyecsca.ec.mod.rawmod attribute)": [[27, "pyecsca.ec.mod.RawMod.n"]], "n (pyecsca.ec.mod.symbolicmod attribute)": [[27, "pyecsca.ec.mod.SymbolicMod.n"]], "n (pyecsca.ec.mod.undefined attribute)": [[27, "pyecsca.ec.mod.Undefined.n"]], "order (pyecsca.ec.mod.randommodaction attribute)": [[27, "pyecsca.ec.mod.RandomModAction.order"]], "pyecsca.ec.mod": [[27, "module-pyecsca.ec.mod"]], "random() (pyecsca.ec.mod.gmpmod class method)": [[27, "pyecsca.ec.mod.GMPMod.random"]], "random() (pyecsca.ec.mod.mod class method)": [[27, "pyecsca.ec.mod.Mod.random"]], "random() (pyecsca.ec.mod.rawmod class method)": [[27, "pyecsca.ec.mod.RawMod.random"]], "random() (pyecsca.ec.mod.symbolicmod class method)": [[27, "pyecsca.ec.mod.SymbolicMod.random"]], "random() (pyecsca.ec.mod.undefined class method)": [[27, "pyecsca.ec.mod.Undefined.random"]], "result (pyecsca.ec.mod.randommodaction property)": [[27, "pyecsca.ec.mod.RandomModAction.result"]], "sqrt() (pyecsca.ec.mod.gmpmod method)": [[27, "pyecsca.ec.mod.GMPMod.sqrt"]], "sqrt() (pyecsca.ec.mod.mod method)": [[27, "pyecsca.ec.mod.Mod.sqrt"]], "sqrt() (pyecsca.ec.mod.rawmod method)": [[27, "pyecsca.ec.mod.RawMod.sqrt"]], "sqrt() (pyecsca.ec.mod.symbolicmod method)": [[27, "pyecsca.ec.mod.SymbolicMod.sqrt"]], "sqrt() (pyecsca.ec.mod.undefined method)": [[27, "pyecsca.ec.mod.Undefined.sqrt"]], "x (pyecsca.ec.mod.gmpmod attribute)": [[27, "pyecsca.ec.mod.GMPMod.x"]], "x (pyecsca.ec.mod.mod attribute)": [[27, "pyecsca.ec.mod.Mod.x"]], "x (pyecsca.ec.mod.rawmod attribute)": [[27, "pyecsca.ec.mod.RawMod.x"]], "x (pyecsca.ec.mod.symbolicmod attribute)": [[27, "pyecsca.ec.mod.SymbolicMod.x"]], "x (pyecsca.ec.mod.undefined attribute)": [[27, "pyecsca.ec.mod.Undefined.x"]], "curvemodel (class in pyecsca.ec.model)": [[28, "pyecsca.ec.model.CurveModel"]], "edwardsmodel (class in pyecsca.ec.model)": [[28, "pyecsca.ec.model.EdwardsModel"]], "montgomerymodel (class in pyecsca.ec.model)": [[28, "pyecsca.ec.model.MontgomeryModel"]], "shortweierstrassmodel (class in pyecsca.ec.model)": [[28, "pyecsca.ec.model.ShortWeierstrassModel"]], "twistededwardsmodel (class in pyecsca.ec.model)": [[28, "pyecsca.ec.model.TwistedEdwardsModel"]], "base_addition (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.base_addition"]], "base_addition (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.base_addition"]], "base_addition (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.base_addition"]], "base_addition (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.base_addition"]], "base_addition (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.base_addition"]], "base_doubling (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.base_doubling"]], "base_doubling (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.base_doubling"]], "base_doubling (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.base_doubling"]], "base_doubling (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.base_doubling"]], "base_doubling (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.base_doubling"]], "base_negation (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.base_negation"]], "base_negation (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.base_negation"]], "base_negation (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.base_negation"]], "base_negation (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.base_negation"]], "base_negation (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.base_negation"]], "base_neutral (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.base_neutral"]], "base_neutral (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.base_neutral"]], "base_neutral (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.base_neutral"]], "base_neutral (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.base_neutral"]], "base_neutral (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.base_neutral"]], "coordinate_names (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.coordinate_names"]], "coordinate_names (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.coordinate_names"]], "coordinate_names (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.coordinate_names"]], "coordinate_names (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.coordinate_names"]], "coordinate_names (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.coordinate_names"]], "coordinates (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.coordinates"]], "coordinates (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.coordinates"]], "coordinates (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.coordinates"]], "coordinates (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.coordinates"]], "coordinates (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.coordinates"]], "equation (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.equation"]], "equation (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.equation"]], "equation (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.equation"]], "equation (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.equation"]], "equation (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.equation"]], "from_weierstrass (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.from_weierstrass"]], "from_weierstrass (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.from_weierstrass"]], "from_weierstrass (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.from_weierstrass"]], "from_weierstrass (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.from_weierstrass"]], "from_weierstrass (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.from_weierstrass"]], "full_weierstrass (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.full_weierstrass"]], "full_weierstrass (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.full_weierstrass"]], "full_weierstrass (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.full_weierstrass"]], "full_weierstrass (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.full_weierstrass"]], "full_weierstrass (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.full_weierstrass"]], "name (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.name"]], "name (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.name"]], "name (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.name"]], "name (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.name"]], "name (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.name"]], "parameter_names (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.parameter_names"]], "parameter_names (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.parameter_names"]], "parameter_names (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.parameter_names"]], "parameter_names (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.parameter_names"]], "parameter_names (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.parameter_names"]], "pyecsca.ec.model": [[28, "module-pyecsca.ec.model"]], "shortname (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.shortname"]], "shortname (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.shortname"]], "shortname (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.shortname"]], "shortname (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.shortname"]], "shortname (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.shortname"]], "to_weierstrass (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.to_weierstrass"]], "to_weierstrass (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.to_weierstrass"]], "to_weierstrass (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.to_weierstrass"]], "to_weierstrass (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.to_weierstrass"]], "to_weierstrass (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.to_weierstrass"]], "ysquared (pyecsca.ec.model.curvemodel attribute)": [[28, "pyecsca.ec.model.CurveModel.ysquared"]], "ysquared (pyecsca.ec.model.edwardsmodel attribute)": [[28, "pyecsca.ec.model.EdwardsModel.ysquared"]], "ysquared (pyecsca.ec.model.montgomerymodel attribute)": [[28, "pyecsca.ec.model.MontgomeryModel.ysquared"]], "ysquared (pyecsca.ec.model.shortweierstrassmodel attribute)": [[28, "pyecsca.ec.model.ShortWeierstrassModel.ysquared"]], "ysquared (pyecsca.ec.model.twistededwardsmodel attribute)": [[28, "pyecsca.ec.model.TwistedEdwardsModel.ysquared"]], "pyecsca.ec.mult": [[29, "module-pyecsca.ec.mult"]], "accumulationorder (class in pyecsca.ec.mult.base)": [[30, "pyecsca.ec.mult.base.AccumulationOrder"]], "accumulatormultiplier (class in pyecsca.ec.mult.base)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier"]], "ltr (pyecsca.ec.mult.base.processingdirection attribute)": [[30, "pyecsca.ec.mult.base.ProcessingDirection.LTR"]], "peqpr (pyecsca.ec.mult.base.accumulationorder attribute)": [[30, "pyecsca.ec.mult.base.AccumulationOrder.PeqPR"]], "peqrp (pyecsca.ec.mult.base.accumulationorder attribute)": [[30, "pyecsca.ec.mult.base.AccumulationOrder.PeqRP"]], "precomputationaction (class in pyecsca.ec.mult.base)": [[30, "pyecsca.ec.mult.base.PrecomputationAction"]], "processingdirection (class in pyecsca.ec.mult.base)": [[30, "pyecsca.ec.mult.base.ProcessingDirection"]], "rtl (pyecsca.ec.mult.base.processingdirection attribute)": [[30, "pyecsca.ec.mult.base.ProcessingDirection.RTL"]], "scalarmultiplicationaction (class in pyecsca.ec.mult.base)": [[30, "pyecsca.ec.mult.base.ScalarMultiplicationAction"]], "scalarmultiplier (class in pyecsca.ec.mult.base)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier"]], "accumulation_order (pyecsca.ec.mult.base.accumulatormultiplier attribute)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.accumulation_order"]], "exit() (pyecsca.ec.mult.base.scalarmultiplicationaction method)": [[30, "pyecsca.ec.mult.base.ScalarMultiplicationAction.exit"]], "formulas (pyecsca.ec.mult.base.accumulatormultiplier attribute)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.formulas"]], "formulas (pyecsca.ec.mult.base.scalarmultiplier attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier.formulas"]], "init() (pyecsca.ec.mult.base.accumulatormultiplier method)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.init"]], "init() (pyecsca.ec.mult.base.scalarmultiplier method)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier.init"]], "inside (pyecsca.ec.mult.base.precomputationaction attribute)": [[30, "pyecsca.ec.mult.base.PrecomputationAction.inside"]], "inside (pyecsca.ec.mult.base.scalarmultiplicationaction attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplicationAction.inside"]], "multiply() (pyecsca.ec.mult.base.accumulatormultiplier method)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.base.scalarmultiplier method)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier.multiply"]], "optionals (pyecsca.ec.mult.base.accumulatormultiplier attribute)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.optionals"]], "optionals (pyecsca.ec.mult.base.scalarmultiplier attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier.optionals"]], "params (pyecsca.ec.mult.base.precomputationaction attribute)": [[30, "pyecsca.ec.mult.base.PrecomputationAction.params"]], "point (pyecsca.ec.mult.base.precomputationaction attribute)": [[30, "pyecsca.ec.mult.base.PrecomputationAction.point"]], "point (pyecsca.ec.mult.base.scalarmultiplicationaction attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplicationAction.point"]], "pyecsca.ec.mult.base": [[30, "module-pyecsca.ec.mult.base"]], "requires (pyecsca.ec.mult.base.accumulatormultiplier attribute)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.requires"]], "requires (pyecsca.ec.mult.base.scalarmultiplier attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier.requires"]], "result (pyecsca.ec.mult.base.scalarmultiplicationaction property)": [[30, "pyecsca.ec.mult.base.ScalarMultiplicationAction.result"]], "scalar (pyecsca.ec.mult.base.scalarmultiplicationaction attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplicationAction.scalar"]], "short_circuit (pyecsca.ec.mult.base.accumulatormultiplier attribute)": [[30, "pyecsca.ec.mult.base.AccumulatorMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.base.scalarmultiplier attribute)": [[30, "pyecsca.ec.mult.base.ScalarMultiplier.short_circuit"]], "coronmultiplier (class in pyecsca.ec.mult.binary)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier"]], "doubleandaddmultiplier (class in pyecsca.ec.mult.binary)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier"]], "ltrmultiplier (class in pyecsca.ec.mult.binary)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier"]], "rtlmultiplier (class in pyecsca.ec.mult.binary)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier"]], "accumulation_order (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.accumulation_order"]], "accumulation_order (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.accumulation_order"]], "accumulation_order (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.accumulation_order"]], "always (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.always"]], "always (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.always"]], "always (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.always"]], "complete (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.complete"]], "complete (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.complete"]], "complete (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.complete"]], "direction (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.direction"]], "direction (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.direction"]], "direction (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.direction"]], "formulas (pyecsca.ec.mult.binary.coronmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier.formulas"]], "formulas (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.formulas"]], "formulas (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.formulas"]], "formulas (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.formulas"]], "init() (pyecsca.ec.mult.binary.coronmultiplier method)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier.init"]], "init() (pyecsca.ec.mult.binary.doubleandaddmultiplier method)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.init"]], "init() (pyecsca.ec.mult.binary.ltrmultiplier method)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.init"]], "init() (pyecsca.ec.mult.binary.rtlmultiplier method)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.init"]], "multiply() (pyecsca.ec.mult.binary.coronmultiplier method)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.binary.doubleandaddmultiplier method)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.binary.ltrmultiplier method)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.binary.rtlmultiplier method)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.multiply"]], "optionals (pyecsca.ec.mult.binary.coronmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier.optionals"]], "optionals (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.optionals"]], "optionals (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.optionals"]], "optionals (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.optionals"]], "pyecsca.ec.mult.binary": [[31, "module-pyecsca.ec.mult.binary"]], "requires (pyecsca.ec.mult.binary.coronmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier.requires"]], "requires (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.requires"]], "requires (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.requires"]], "requires (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.requires"]], "short_circuit (pyecsca.ec.mult.binary.coronmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.CoronMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.binary.doubleandaddmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.DoubleAndAddMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.binary.ltrmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.LTRMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.binary.rtlmultiplier attribute)": [[31, "pyecsca.ec.mult.binary.RTLMultiplier.short_circuit"]], "bgmwmultiplier (class in pyecsca.ec.mult.comb)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier"]], "combmultiplier (class in pyecsca.ec.mult.comb)": [[32, "pyecsca.ec.mult.comb.CombMultiplier"]], "accumulation_order (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.accumulation_order"]], "accumulation_order (pyecsca.ec.mult.comb.combmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.accumulation_order"]], "direction (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.direction"]], "formulas (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.formulas"]], "formulas (pyecsca.ec.mult.comb.combmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.formulas"]], "init() (pyecsca.ec.mult.comb.bgmwmultiplier method)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.init"]], "init() (pyecsca.ec.mult.comb.combmultiplier method)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.init"]], "multiply() (pyecsca.ec.mult.comb.bgmwmultiplier method)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.comb.combmultiplier method)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.multiply"]], "optionals (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.optionals"]], "optionals (pyecsca.ec.mult.comb.combmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.optionals"]], "pyecsca.ec.mult.comb": [[32, "module-pyecsca.ec.mult.comb"]], "requires (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.requires"]], "requires (pyecsca.ec.mult.comb.combmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.requires"]], "short_circuit (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.comb.combmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.short_circuit"]], "width (pyecsca.ec.mult.comb.bgmwmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.BGMWMultiplier.width"]], "width (pyecsca.ec.mult.comb.combmultiplier attribute)": [[32, "pyecsca.ec.mult.comb.CombMultiplier.width"]], "fullprecompmultiplier (class in pyecsca.ec.mult.fixed)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier"]], "accumulation_order (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.accumulation_order"]], "always (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.always"]], "complete (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.complete"]], "direction (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.direction"]], "formulas (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.formulas"]], "init() (pyecsca.ec.mult.fixed.fullprecompmultiplier method)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.init"]], "multiply() (pyecsca.ec.mult.fixed.fullprecompmultiplier method)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.multiply"]], "optionals (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.optionals"]], "pyecsca.ec.mult.fixed": [[33, "module-pyecsca.ec.mult.fixed"]], "requires (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.requires"]], "short_circuit (pyecsca.ec.mult.fixed.fullprecompmultiplier attribute)": [[33, "pyecsca.ec.mult.fixed.FullPrecompMultiplier.short_circuit"]], "differentialladdermultiplier (class in pyecsca.ec.mult.ladder)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier"]], "laddermultiplier (class in pyecsca.ec.mult.ladder)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier"]], "simpleladdermultiplier (class in pyecsca.ec.mult.ladder)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier"]], "complete (pyecsca.ec.mult.ladder.differentialladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.complete"]], "complete (pyecsca.ec.mult.ladder.laddermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.complete"]], "complete (pyecsca.ec.mult.ladder.simpleladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.complete"]], "formulas (pyecsca.ec.mult.ladder.differentialladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.formulas"]], "formulas (pyecsca.ec.mult.ladder.laddermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.formulas"]], "formulas (pyecsca.ec.mult.ladder.simpleladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.formulas"]], "init() (pyecsca.ec.mult.ladder.differentialladdermultiplier method)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.init"]], "init() (pyecsca.ec.mult.ladder.laddermultiplier method)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.init"]], "init() (pyecsca.ec.mult.ladder.simpleladdermultiplier method)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.init"]], "multiply() (pyecsca.ec.mult.ladder.differentialladdermultiplier method)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.ladder.laddermultiplier method)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.ladder.simpleladdermultiplier method)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.multiply"]], "optionals (pyecsca.ec.mult.ladder.differentialladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.optionals"]], "optionals (pyecsca.ec.mult.ladder.laddermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.optionals"]], "optionals (pyecsca.ec.mult.ladder.simpleladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.optionals"]], "pyecsca.ec.mult.ladder": [[34, "module-pyecsca.ec.mult.ladder"]], "requires (pyecsca.ec.mult.ladder.differentialladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.requires"]], "requires (pyecsca.ec.mult.ladder.laddermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.requires"]], "requires (pyecsca.ec.mult.ladder.simpleladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.requires"]], "short_circuit (pyecsca.ec.mult.ladder.differentialladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.DifferentialLadderMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.ladder.laddermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.LadderMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.ladder.simpleladdermultiplier attribute)": [[34, "pyecsca.ec.mult.ladder.SimpleLadderMultiplier.short_circuit"]], "binarynafmultiplier (class in pyecsca.ec.mult.naf)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier"]], "windownafmultiplier (class in pyecsca.ec.mult.naf)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier"]], "accumulation_order (pyecsca.ec.mult.naf.binarynafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.accumulation_order"]], "accumulation_order (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.accumulation_order"]], "direction (pyecsca.ec.mult.naf.binarynafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.direction"]], "formulas (pyecsca.ec.mult.naf.binarynafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.formulas"]], "formulas (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.formulas"]], "init() (pyecsca.ec.mult.naf.binarynafmultiplier method)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.init"]], "init() (pyecsca.ec.mult.naf.windownafmultiplier method)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.init"]], "multiply() (pyecsca.ec.mult.naf.binarynafmultiplier method)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.naf.windownafmultiplier method)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.multiply"]], "optionals (pyecsca.ec.mult.naf.binarynafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.optionals"]], "optionals (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.optionals"]], "precompute_negation (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.precompute_negation"]], "pyecsca.ec.mult.naf": [[35, "module-pyecsca.ec.mult.naf"]], "requires (pyecsca.ec.mult.naf.binarynafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.requires"]], "requires (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.requires"]], "short_circuit (pyecsca.ec.mult.naf.binarynafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.BinaryNAFMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.short_circuit"]], "width (pyecsca.ec.mult.naf.windownafmultiplier attribute)": [[35, "pyecsca.ec.mult.naf.WindowNAFMultiplier.width"]], "fixedwindowltrmultiplier (class in pyecsca.ec.mult.window)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier"]], "slidingwindowmultiplier (class in pyecsca.ec.mult.window)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier"]], "windowboothmultiplier (class in pyecsca.ec.mult.window)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier"]], "accumulation_order (pyecsca.ec.mult.window.fixedwindowltrmultiplier attribute)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.accumulation_order"]], "accumulation_order (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.accumulation_order"]], "accumulation_order (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.accumulation_order"]], "formulas (pyecsca.ec.mult.window.fixedwindowltrmultiplier attribute)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.formulas"]], "formulas (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.formulas"]], "formulas (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.formulas"]], "init() (pyecsca.ec.mult.window.fixedwindowltrmultiplier method)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.init"]], "init() (pyecsca.ec.mult.window.slidingwindowmultiplier method)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.init"]], "init() (pyecsca.ec.mult.window.windowboothmultiplier method)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.init"]], "m (pyecsca.ec.mult.window.fixedwindowltrmultiplier attribute)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.m"]], "multiply() (pyecsca.ec.mult.window.fixedwindowltrmultiplier method)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.window.slidingwindowmultiplier method)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.multiply"]], "multiply() (pyecsca.ec.mult.window.windowboothmultiplier method)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.multiply"]], "optionals (pyecsca.ec.mult.window.fixedwindowltrmultiplier attribute)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.optionals"]], "optionals (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.optionals"]], "optionals (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.optionals"]], "precompute_negation (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.precompute_negation"]], "pyecsca.ec.mult.window": [[36, "module-pyecsca.ec.mult.window"]], "recoding_direction (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.recoding_direction"]], "requires (pyecsca.ec.mult.window.fixedwindowltrmultiplier attribute)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.requires"]], "requires (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.requires"]], "requires (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.requires"]], "short_circuit (pyecsca.ec.mult.window.fixedwindowltrmultiplier attribute)": [[36, "pyecsca.ec.mult.window.FixedWindowLTRMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.short_circuit"]], "short_circuit (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.short_circuit"]], "width (pyecsca.ec.mult.window.slidingwindowmultiplier attribute)": [[36, "pyecsca.ec.mult.window.SlidingWindowMultiplier.width"]], "width (pyecsca.ec.mult.window.windowboothmultiplier attribute)": [[36, "pyecsca.ec.mult.window.WindowBoothMultiplier.width"]], "add (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Add"]], "codeop (class in pyecsca.ec.op)": [[37, "pyecsca.ec.op.CodeOp"]], "div (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Div"]], "id (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Id"]], "inv (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Inv"]], "mult (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Mult"]], "neg (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Neg"]], "optype (class in pyecsca.ec.op)": [[37, "pyecsca.ec.op.OpType"]], "pow (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Pow"]], "sqr (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Sqr"]], "sub (pyecsca.ec.op.optype attribute)": [[37, "pyecsca.ec.op.OpType.Sub"]], "code (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.code"]], "compiled (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.compiled"]], "constants (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.constants"]], "operator (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.operator"]], "parameters (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.parameters"]], "parents (pyecsca.ec.op.codeop property)": [[37, "pyecsca.ec.op.CodeOp.parents"]], "pyecsca.ec.op": [[37, "module-pyecsca.ec.op"]], "result (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.result"]], "variables (pyecsca.ec.op.codeop attribute)": [[37, "pyecsca.ec.op.CodeOp.variables"]], "domainparametercategory (class in pyecsca.ec.params)": [[38, "pyecsca.ec.params.DomainParameterCategory"]], "domainparameters (class in pyecsca.ec.params)": [[38, "pyecsca.ec.params.DomainParameters"]], "category (pyecsca.ec.params.domainparameters attribute)": [[38, "pyecsca.ec.params.DomainParameters.category"]], "cofactor (pyecsca.ec.params.domainparameters attribute)": [[38, "pyecsca.ec.params.DomainParameters.cofactor"]], "curve (pyecsca.ec.params.domainparameters attribute)": [[38, "pyecsca.ec.params.DomainParameters.curve"]], "curves (pyecsca.ec.params.domainparametercategory attribute)": [[38, "pyecsca.ec.params.DomainParameterCategory.curves"]], "description (pyecsca.ec.params.domainparametercategory attribute)": [[38, "pyecsca.ec.params.DomainParameterCategory.description"]], "generator (pyecsca.ec.params.domainparameters attribute)": [[38, "pyecsca.ec.params.DomainParameters.generator"]], "get_category() (in module pyecsca.ec.params)": [[38, "pyecsca.ec.params.get_category"]], "get_params() (in module pyecsca.ec.params)": [[38, "pyecsca.ec.params.get_params"]], "load_category() (in module pyecsca.ec.params)": [[38, "pyecsca.ec.params.load_category"]], "load_params() (in module pyecsca.ec.params)": [[38, "pyecsca.ec.params.load_params"]], "load_params_ecgen() (in module pyecsca.ec.params)": [[38, "pyecsca.ec.params.load_params_ecgen"]], "load_params_ectester() (in module pyecsca.ec.params)": [[38, "pyecsca.ec.params.load_params_ectester"]], "name (pyecsca.ec.params.domainparametercategory attribute)": [[38, "pyecsca.ec.params.DomainParameterCategory.name"]], "name (pyecsca.ec.params.domainparameters attribute)": [[38, "pyecsca.ec.params.DomainParameters.name"]], "order (pyecsca.ec.params.domainparameters attribute)": [[38, "pyecsca.ec.params.DomainParameters.order"]], "pyecsca.ec.params": [[38, "module-pyecsca.ec.params"]], "to_affine() (pyecsca.ec.params.domainparameters method)": [[38, "pyecsca.ec.params.DomainParameters.to_affine"]], "to_coords() (pyecsca.ec.params.domainparameters method)": [[38, "pyecsca.ec.params.DomainParameters.to_coords"]], "coordinatemappingaction (class in pyecsca.ec.point)": [[39, "pyecsca.ec.point.CoordinateMappingAction"]], "infinitypoint (class in pyecsca.ec.point)": [[39, "pyecsca.ec.point.InfinityPoint"]], "point (class in pyecsca.ec.point)": [[39, "pyecsca.ec.point.Point"]], "coordinate_model (pyecsca.ec.point.infinitypoint attribute)": [[39, "pyecsca.ec.point.InfinityPoint.coordinate_model"]], "coordinate_model (pyecsca.ec.point.point attribute)": [[39, "pyecsca.ec.point.Point.coordinate_model"]], "coords (pyecsca.ec.point.infinitypoint attribute)": [[39, "pyecsca.ec.point.InfinityPoint.coords"]], "coords (pyecsca.ec.point.point attribute)": [[39, "pyecsca.ec.point.Point.coords"]], "equals() (pyecsca.ec.point.infinitypoint method)": [[39, "pyecsca.ec.point.InfinityPoint.equals"]], "equals() (pyecsca.ec.point.point method)": [[39, "pyecsca.ec.point.Point.equals"]], "equals_affine() (pyecsca.ec.point.infinitypoint method)": [[39, "pyecsca.ec.point.InfinityPoint.equals_affine"]], "equals_affine() (pyecsca.ec.point.point method)": [[39, "pyecsca.ec.point.Point.equals_affine"]], "equals_scaled() (pyecsca.ec.point.infinitypoint method)": [[39, "pyecsca.ec.point.InfinityPoint.equals_scaled"]], "equals_scaled() (pyecsca.ec.point.point method)": [[39, "pyecsca.ec.point.Point.equals_scaled"]], "exit() (pyecsca.ec.point.coordinatemappingaction method)": [[39, "pyecsca.ec.point.CoordinateMappingAction.exit"]], "field (pyecsca.ec.point.infinitypoint attribute)": [[39, "pyecsca.ec.point.InfinityPoint.field"]], "field (pyecsca.ec.point.point attribute)": [[39, "pyecsca.ec.point.Point.field"]], "inside (pyecsca.ec.point.coordinatemappingaction attribute)": [[39, "pyecsca.ec.point.CoordinateMappingAction.inside"]], "model_from (pyecsca.ec.point.coordinatemappingaction attribute)": [[39, "pyecsca.ec.point.CoordinateMappingAction.model_from"]], "model_to (pyecsca.ec.point.coordinatemappingaction attribute)": [[39, "pyecsca.ec.point.CoordinateMappingAction.model_to"]], "point (pyecsca.ec.point.coordinatemappingaction attribute)": [[39, "pyecsca.ec.point.CoordinateMappingAction.point"]], "pyecsca.ec.point": [[39, "module-pyecsca.ec.point"]], "result (pyecsca.ec.point.coordinatemappingaction property)": [[39, "pyecsca.ec.point.CoordinateMappingAction.result"]], "to_affine() (pyecsca.ec.point.infinitypoint method)": [[39, "pyecsca.ec.point.InfinityPoint.to_affine"]], "to_affine() (pyecsca.ec.point.point method)": [[39, "pyecsca.ec.point.Point.to_affine"]], "to_model() (pyecsca.ec.point.infinitypoint method)": [[39, "pyecsca.ec.point.InfinityPoint.to_model"]], "to_model() (pyecsca.ec.point.point method)": [[39, "pyecsca.ec.point.Point.to_model"]], "booth() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.booth"]], "booth_window() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.booth_window"]], "booth_word() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.booth_word"]], "convert_base() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.convert_base"]], "naf() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.naf"]], "pyecsca.ec.scalar": [[40, "module-pyecsca.ec.scalar"]], "sliding_window_ltr() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.sliding_window_ltr"]], "sliding_window_rtl() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.sliding_window_rtl"]], "wnaf() (in module pyecsca.ec.scalar)": [[40, "pyecsca.ec.scalar.wnaf"]], "ecdsaaction (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSAAction"]], "ecdsasignaction (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSASignAction"]], "ecdsaverifyaction (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction"]], "ecdsa_none (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSA_NONE"]], "ecdsa_sha1 (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSA_SHA1"]], "ecdsa_sha224 (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSA_SHA224"]], "ecdsa_sha256 (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSA_SHA256"]], "ecdsa_sha384 (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSA_SHA384"]], "ecdsa_sha512 (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.ECDSA_SHA512"]], "signature (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.Signature"]], "signatureresult (class in pyecsca.ec.signature)": [[41, "pyecsca.ec.signature.SignatureResult"]], "add (pyecsca.ec.signature.ecdsa_none attribute)": [[41, "pyecsca.ec.signature.ECDSA_NONE.add"]], "add (pyecsca.ec.signature.ecdsa_sha1 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.add"]], "add (pyecsca.ec.signature.ecdsa_sha224 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.add"]], "add (pyecsca.ec.signature.ecdsa_sha256 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.add"]], "add (pyecsca.ec.signature.ecdsa_sha384 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.add"]], "add (pyecsca.ec.signature.ecdsa_sha512 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.add"]], "add (pyecsca.ec.signature.signature attribute)": [[41, "pyecsca.ec.signature.Signature.add"]], "can_sign (pyecsca.ec.signature.ecdsa_none property)": [[41, "pyecsca.ec.signature.ECDSA_NONE.can_sign"]], "can_sign (pyecsca.ec.signature.ecdsa_sha1 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.can_sign"]], "can_sign (pyecsca.ec.signature.ecdsa_sha224 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.can_sign"]], "can_sign (pyecsca.ec.signature.ecdsa_sha256 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.can_sign"]], "can_sign (pyecsca.ec.signature.ecdsa_sha384 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.can_sign"]], "can_sign (pyecsca.ec.signature.ecdsa_sha512 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.can_sign"]], "can_sign (pyecsca.ec.signature.signature property)": [[41, "pyecsca.ec.signature.Signature.can_sign"]], "can_verify (pyecsca.ec.signature.ecdsa_none property)": [[41, "pyecsca.ec.signature.ECDSA_NONE.can_verify"]], "can_verify (pyecsca.ec.signature.ecdsa_sha1 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.can_verify"]], "can_verify (pyecsca.ec.signature.ecdsa_sha224 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.can_verify"]], "can_verify (pyecsca.ec.signature.ecdsa_sha256 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.can_verify"]], "can_verify (pyecsca.ec.signature.ecdsa_sha384 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.can_verify"]], "can_verify (pyecsca.ec.signature.ecdsa_sha512 property)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.can_verify"]], "can_verify (pyecsca.ec.signature.signature property)": [[41, "pyecsca.ec.signature.Signature.can_verify"]], "from_der() (pyecsca.ec.signature.signatureresult static method)": [[41, "pyecsca.ec.signature.SignatureResult.from_DER"]], "hash_algo (pyecsca.ec.signature.ecdsaaction attribute)": [[41, "pyecsca.ec.signature.ECDSAAction.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsasignaction attribute)": [[41, "pyecsca.ec.signature.ECDSASignAction.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsaverifyaction attribute)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsa_none attribute)": [[41, "pyecsca.ec.signature.ECDSA_NONE.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsa_sha1 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsa_sha224 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsa_sha256 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsa_sha384 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.hash_algo"]], "hash_algo (pyecsca.ec.signature.ecdsa_sha512 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.hash_algo"]], "hash_algo (pyecsca.ec.signature.signature attribute)": [[41, "pyecsca.ec.signature.Signature.hash_algo"]], "inside (pyecsca.ec.signature.ecdsaaction attribute)": [[41, "pyecsca.ec.signature.ECDSAAction.inside"]], "inside (pyecsca.ec.signature.ecdsasignaction attribute)": [[41, "pyecsca.ec.signature.ECDSASignAction.inside"]], "inside (pyecsca.ec.signature.ecdsaverifyaction attribute)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction.inside"]], "msg (pyecsca.ec.signature.ecdsaaction attribute)": [[41, "pyecsca.ec.signature.ECDSAAction.msg"]], "msg (pyecsca.ec.signature.ecdsasignaction attribute)": [[41, "pyecsca.ec.signature.ECDSASignAction.msg"]], "msg (pyecsca.ec.signature.ecdsaverifyaction attribute)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction.msg"]], "mult (pyecsca.ec.signature.ecdsa_none attribute)": [[41, "pyecsca.ec.signature.ECDSA_NONE.mult"]], "mult (pyecsca.ec.signature.ecdsa_sha1 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.mult"]], "mult (pyecsca.ec.signature.ecdsa_sha224 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.mult"]], "mult (pyecsca.ec.signature.ecdsa_sha256 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.mult"]], "mult (pyecsca.ec.signature.ecdsa_sha384 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.mult"]], "mult (pyecsca.ec.signature.ecdsa_sha512 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.mult"]], "mult (pyecsca.ec.signature.signature attribute)": [[41, "pyecsca.ec.signature.Signature.mult"]], "params (pyecsca.ec.signature.ecdsaaction attribute)": [[41, "pyecsca.ec.signature.ECDSAAction.params"]], "params (pyecsca.ec.signature.ecdsasignaction attribute)": [[41, "pyecsca.ec.signature.ECDSASignAction.params"]], "params (pyecsca.ec.signature.ecdsaverifyaction attribute)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction.params"]], "params (pyecsca.ec.signature.ecdsa_none attribute)": [[41, "pyecsca.ec.signature.ECDSA_NONE.params"]], "params (pyecsca.ec.signature.ecdsa_sha1 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.params"]], "params (pyecsca.ec.signature.ecdsa_sha224 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.params"]], "params (pyecsca.ec.signature.ecdsa_sha256 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.params"]], "params (pyecsca.ec.signature.ecdsa_sha384 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.params"]], "params (pyecsca.ec.signature.ecdsa_sha512 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.params"]], "params (pyecsca.ec.signature.signature attribute)": [[41, "pyecsca.ec.signature.Signature.params"]], "privkey (pyecsca.ec.signature.ecdsasignaction attribute)": [[41, "pyecsca.ec.signature.ECDSASignAction.privkey"]], "privkey (pyecsca.ec.signature.ecdsa_none attribute)": [[41, "pyecsca.ec.signature.ECDSA_NONE.privkey"]], "privkey (pyecsca.ec.signature.ecdsa_sha1 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.privkey"]], "privkey (pyecsca.ec.signature.ecdsa_sha224 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.privkey"]], "privkey (pyecsca.ec.signature.ecdsa_sha256 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.privkey"]], "privkey (pyecsca.ec.signature.ecdsa_sha384 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.privkey"]], "privkey (pyecsca.ec.signature.ecdsa_sha512 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.privkey"]], "privkey (pyecsca.ec.signature.signature attribute)": [[41, "pyecsca.ec.signature.Signature.privkey"]], "pubkey (pyecsca.ec.signature.ecdsaverifyaction attribute)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction.pubkey"]], "pubkey (pyecsca.ec.signature.ecdsa_none attribute)": [[41, "pyecsca.ec.signature.ECDSA_NONE.pubkey"]], "pubkey (pyecsca.ec.signature.ecdsa_sha1 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.pubkey"]], "pubkey (pyecsca.ec.signature.ecdsa_sha224 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.pubkey"]], "pubkey (pyecsca.ec.signature.ecdsa_sha256 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.pubkey"]], "pubkey (pyecsca.ec.signature.ecdsa_sha384 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.pubkey"]], "pubkey (pyecsca.ec.signature.ecdsa_sha512 attribute)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.pubkey"]], "pubkey (pyecsca.ec.signature.signature attribute)": [[41, "pyecsca.ec.signature.Signature.pubkey"]], "pyecsca.ec.signature": [[41, "module-pyecsca.ec.signature"]], "r (pyecsca.ec.signature.signatureresult attribute)": [[41, "pyecsca.ec.signature.SignatureResult.r"]], "s (pyecsca.ec.signature.signatureresult attribute)": [[41, "pyecsca.ec.signature.SignatureResult.s"]], "sign_data() (pyecsca.ec.signature.ecdsa_none method)": [[41, "pyecsca.ec.signature.ECDSA_NONE.sign_data"]], "sign_data() (pyecsca.ec.signature.ecdsa_sha1 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.sign_data"]], "sign_data() (pyecsca.ec.signature.ecdsa_sha224 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.sign_data"]], "sign_data() (pyecsca.ec.signature.ecdsa_sha256 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.sign_data"]], "sign_data() (pyecsca.ec.signature.ecdsa_sha384 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.sign_data"]], "sign_data() (pyecsca.ec.signature.ecdsa_sha512 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.sign_data"]], "sign_data() (pyecsca.ec.signature.signature method)": [[41, "pyecsca.ec.signature.Signature.sign_data"]], "sign_hash() (pyecsca.ec.signature.ecdsa_none method)": [[41, "pyecsca.ec.signature.ECDSA_NONE.sign_hash"]], "sign_hash() (pyecsca.ec.signature.ecdsa_sha1 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.sign_hash"]], "sign_hash() (pyecsca.ec.signature.ecdsa_sha224 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.sign_hash"]], "sign_hash() (pyecsca.ec.signature.ecdsa_sha256 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.sign_hash"]], "sign_hash() (pyecsca.ec.signature.ecdsa_sha384 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.sign_hash"]], "sign_hash() (pyecsca.ec.signature.ecdsa_sha512 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.sign_hash"]], "sign_hash() (pyecsca.ec.signature.signature method)": [[41, "pyecsca.ec.signature.Signature.sign_hash"]], "signature (pyecsca.ec.signature.ecdsaverifyaction attribute)": [[41, "pyecsca.ec.signature.ECDSAVerifyAction.signature"]], "to_der() (pyecsca.ec.signature.signatureresult method)": [[41, "pyecsca.ec.signature.SignatureResult.to_DER"]], "verify_data() (pyecsca.ec.signature.ecdsa_none method)": [[41, "pyecsca.ec.signature.ECDSA_NONE.verify_data"]], "verify_data() (pyecsca.ec.signature.ecdsa_sha1 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.verify_data"]], "verify_data() (pyecsca.ec.signature.ecdsa_sha224 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.verify_data"]], "verify_data() (pyecsca.ec.signature.ecdsa_sha256 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.verify_data"]], "verify_data() (pyecsca.ec.signature.ecdsa_sha384 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.verify_data"]], "verify_data() (pyecsca.ec.signature.ecdsa_sha512 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.verify_data"]], "verify_data() (pyecsca.ec.signature.signature method)": [[41, "pyecsca.ec.signature.Signature.verify_data"]], "verify_hash() (pyecsca.ec.signature.ecdsa_none method)": [[41, "pyecsca.ec.signature.ECDSA_NONE.verify_hash"]], "verify_hash() (pyecsca.ec.signature.ecdsa_sha1 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA1.verify_hash"]], "verify_hash() (pyecsca.ec.signature.ecdsa_sha224 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA224.verify_hash"]], "verify_hash() (pyecsca.ec.signature.ecdsa_sha256 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA256.verify_hash"]], "verify_hash() (pyecsca.ec.signature.ecdsa_sha384 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA384.verify_hash"]], "verify_hash() (pyecsca.ec.signature.ecdsa_sha512 method)": [[41, "pyecsca.ec.signature.ECDSA_SHA512.verify_hash"]], "verify_hash() (pyecsca.ec.signature.signature method)": [[41, "pyecsca.ec.signature.Signature.verify_hash"]], "m2e() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.M2E"]], "m2sw() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.M2SW"]], "m2te() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.M2TE"]], "sw2e() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.SW2E"]], "sw2m() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.SW2M"]], "sw2te() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.SW2TE"]], "te2e() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.TE2E"]], "te2m() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.TE2M"]], "te2sw() (in module pyecsca.ec.transformations)": [[42, "pyecsca.ec.transformations.TE2SW"]], "pyecsca.ec.transformations": [[42, "module-pyecsca.ec.transformations"]], "pyecsca.misc": [[43, "module-pyecsca.misc"]], "pyecsca.misc.cache": [[44, "module-pyecsca.misc.cache"]], "simplify() (in module pyecsca.misc.cache)": [[44, "pyecsca.misc.cache.simplify"]], "sympify() (in module pyecsca.misc.cache)": [[44, "pyecsca.misc.cache.sympify"]], "config (class in pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.Config"]], "ecconfig (class in pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.ECConfig"]], "loggingconfig (class in pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.LoggingConfig"]], "temporaryconfig (class in pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.TemporaryConfig"]], "ec (pyecsca.misc.cfg.config attribute)": [[45, "pyecsca.misc.cfg.Config.ec"]], "enabled (pyecsca.misc.cfg.loggingconfig attribute)": [[45, "pyecsca.misc.cfg.LoggingConfig.enabled"]], "getconfig() (in module pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.getconfig"]], "log (pyecsca.misc.cfg.config attribute)": [[45, "pyecsca.misc.cfg.Config.log"]], "mod_implementation (pyecsca.misc.cfg.ecconfig property)": [[45, "pyecsca.misc.cfg.ECConfig.mod_implementation"]], "no_inverse_action (pyecsca.misc.cfg.ecconfig property)": [[45, "pyecsca.misc.cfg.ECConfig.no_inverse_action"]], "non_residue_action (pyecsca.misc.cfg.ecconfig property)": [[45, "pyecsca.misc.cfg.ECConfig.non_residue_action"]], "pyecsca.misc.cfg": [[45, "module-pyecsca.misc.cfg"]], "resetconfig() (in module pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.resetconfig"]], "setconfig() (in module pyecsca.misc.cfg)": [[45, "pyecsca.misc.cfg.setconfig"]], "token (pyecsca.misc.cfg.temporaryconfig attribute)": [[45, "pyecsca.misc.cfg.TemporaryConfig.token"]], "unsatisfied_coordinate_assumption_action (pyecsca.misc.cfg.ecconfig property)": [[45, "pyecsca.misc.cfg.ECConfig.unsatisfied_coordinate_assumption_action"]], "unsatisfied_formula_assumption_action (pyecsca.misc.cfg.ecconfig property)": [[45, "pyecsca.misc.cfg.ECConfig.unsatisfied_formula_assumption_action"]], "taskexecutor (class in pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.TaskExecutor"]], "as_completed() (pyecsca.misc.utils.taskexecutor method)": [[46, "pyecsca.misc.utils.TaskExecutor.as_completed"]], "futures (pyecsca.misc.utils.taskexecutor attribute)": [[46, "pyecsca.misc.utils.TaskExecutor.futures"]], "in_notebook() (in module pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.in_notebook"]], "keys (pyecsca.misc.utils.taskexecutor attribute)": [[46, "pyecsca.misc.utils.TaskExecutor.keys"]], "log() (in module pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.log"]], "map() (pyecsca.misc.utils.taskexecutor method)": [[46, "pyecsca.misc.utils.TaskExecutor.map"]], "peval() (in module pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.peval"]], "pexec() (in module pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.pexec"]], "pyecsca.misc.utils": [[46, "module-pyecsca.misc.utils"]], "shutdown() (pyecsca.misc.utils.taskexecutor method)": [[46, "pyecsca.misc.utils.TaskExecutor.shutdown"]], "silent() (in module pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.silent"]], "submit() (pyecsca.misc.utils.taskexecutor method)": [[46, "pyecsca.misc.utils.TaskExecutor.submit"]], "submit_task() (pyecsca.misc.utils.taskexecutor method)": [[46, "pyecsca.misc.utils.TaskExecutor.submit_task"]], "tasks (pyecsca.misc.utils.taskexecutor property)": [[46, "pyecsca.misc.utils.TaskExecutor.tasks"]], "warn() (in module pyecsca.misc.utils)": [[46, "pyecsca.misc.utils.warn"]], "pyecsca.sca": [[47, "module-pyecsca.sca"]], "pyecsca.sca.attack": [[48, "module-pyecsca.sca.attack"]], "cpa (class in pyecsca.sca.attack.cpa)": [[49, "pyecsca.sca.attack.CPA.CPA"]], "compute_correlation_trace() (pyecsca.sca.attack.cpa.cpa method)": [[49, "pyecsca.sca.attack.CPA.CPA.compute_correlation_trace"]], "compute_intermediate_value() (pyecsca.sca.attack.cpa.cpa method)": [[49, "pyecsca.sca.attack.CPA.CPA.compute_intermediate_value"]], "correlations (pyecsca.sca.attack.cpa.cpa attribute)": [[49, "pyecsca.sca.attack.CPA.CPA.correlations"]], "leakage_model (pyecsca.sca.attack.cpa.cpa attribute)": [[49, "pyecsca.sca.attack.CPA.CPA.leakage_model"]], "mult (pyecsca.sca.attack.cpa.cpa attribute)": [[49, "pyecsca.sca.attack.CPA.CPA.mult"]], "params (pyecsca.sca.attack.cpa.cpa attribute)": [[49, "pyecsca.sca.attack.CPA.CPA.params"]], "perform() (pyecsca.sca.attack.cpa.cpa method)": [[49, "pyecsca.sca.attack.CPA.CPA.perform"]], "plot_correlations() (pyecsca.sca.attack.cpa.cpa method)": [[49, "pyecsca.sca.attack.CPA.CPA.plot_correlations"]], "points (pyecsca.sca.attack.cpa.cpa attribute)": [[49, "pyecsca.sca.attack.CPA.CPA.points"]], "pyecsca.sca.attack.cpa": [[49, "module-pyecsca.sca.attack.CPA"]], "recover_bit() (pyecsca.sca.attack.cpa.cpa method)": [[49, "pyecsca.sca.attack.CPA.CPA.recover_bit"]], "traces (pyecsca.sca.attack.cpa.cpa attribute)": [[49, "pyecsca.sca.attack.CPA.CPA.traces"]], "dpa (class in pyecsca.sca.attack.dpa)": [[50, "pyecsca.sca.attack.DPA.DPA"]], "calculate_difference_of_means() (pyecsca.sca.attack.dpa.dpa method)": [[50, "pyecsca.sca.attack.DPA.DPA.calculate_difference_of_means"]], "compute_split_point() (pyecsca.sca.attack.dpa.dpa method)": [[50, "pyecsca.sca.attack.DPA.DPA.compute_split_point"]], "doms (pyecsca.sca.attack.dpa.dpa attribute)": [[50, "pyecsca.sca.attack.DPA.DPA.doms"]], "mult (pyecsca.sca.attack.dpa.dpa attribute)": [[50, "pyecsca.sca.attack.DPA.DPA.mult"]], "params (pyecsca.sca.attack.dpa.dpa attribute)": [[50, "pyecsca.sca.attack.DPA.DPA.params"]], "perform() (pyecsca.sca.attack.dpa.dpa method)": [[50, "pyecsca.sca.attack.DPA.DPA.perform"]], "plot_difference_of_means() (pyecsca.sca.attack.dpa.dpa method)": [[50, "pyecsca.sca.attack.DPA.DPA.plot_difference_of_means"]], "points (pyecsca.sca.attack.dpa.dpa attribute)": [[50, "pyecsca.sca.attack.DPA.DPA.points"]], "pyecsca.sca.attack.dpa": [[50, "module-pyecsca.sca.attack.DPA"]], "recover_bit() (pyecsca.sca.attack.dpa.dpa method)": [[50, "pyecsca.sca.attack.DPA.DPA.recover_bit"]], "split_traces() (pyecsca.sca.attack.dpa.dpa method)": [[50, "pyecsca.sca.attack.DPA.DPA.split_traces"]], "traces (pyecsca.sca.attack.dpa.dpa attribute)": [[50, "pyecsca.sca.attack.DPA.DPA.traces"]], "bit (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.Bit"]], "bitlength (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.BitLength"]], "hammingdistance (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.HammingDistance"]], "hammingweight (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.HammingWeight"]], "identity (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.Identity"]], "leakagemodel (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.LeakageModel"]], "noise (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.Noise"]], "normalnoice (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.NormalNoice"]], "slice (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.Slice"]], "zeronoise (class in pyecsca.sca.attack.leakage_model)": [[51, "pyecsca.sca.attack.leakage_model.ZeroNoise"]], "num_args (pyecsca.sca.attack.leakage_model.bit attribute)": [[51, "pyecsca.sca.attack.leakage_model.Bit.num_args"]], "num_args (pyecsca.sca.attack.leakage_model.bitlength attribute)": [[51, "pyecsca.sca.attack.leakage_model.BitLength.num_args"]], "num_args (pyecsca.sca.attack.leakage_model.hammingdistance attribute)": [[51, "pyecsca.sca.attack.leakage_model.HammingDistance.num_args"]], "num_args (pyecsca.sca.attack.leakage_model.hammingweight attribute)": [[51, "pyecsca.sca.attack.leakage_model.HammingWeight.num_args"]], "num_args (pyecsca.sca.attack.leakage_model.identity attribute)": [[51, "pyecsca.sca.attack.leakage_model.Identity.num_args"]], "num_args (pyecsca.sca.attack.leakage_model.leakagemodel attribute)": [[51, "pyecsca.sca.attack.leakage_model.LeakageModel.num_args"]], "num_args (pyecsca.sca.attack.leakage_model.slice attribute)": [[51, "pyecsca.sca.attack.leakage_model.Slice.num_args"]], "pyecsca.sca.attack.leakage_model": [[51, "module-pyecsca.sca.attack.leakage_model"]], "pyecsca.sca.re": [[52, "module-pyecsca.sca.re"]], "re (class in pyecsca.sca.re.base)": [[53, "pyecsca.sca.re.base.RE"]], "build_tree() (pyecsca.sca.re.base.re method)": [[53, "pyecsca.sca.re.base.RE.build_tree"]], "configs (pyecsca.sca.re.base.re attribute)": [[53, "pyecsca.sca.re.base.RE.configs"]], "pyecsca.sca.re.base": [[53, "module-pyecsca.sca.re.base"]], "run() (pyecsca.sca.re.base.re method)": [[53, "pyecsca.sca.re.base.RE.run"]], "tree (pyecsca.sca.re.base.re attribute)": [[53, "pyecsca.sca.re.base.RE.tree"]], "multiplecontext (class in pyecsca.sca.re.rpa)": [[55, "pyecsca.sca.re.rpa.MultipleContext"]], "p0 (pyecsca.sca.re.rpa.rpa attribute)": [[55, "pyecsca.sca.re.rpa.RPA.P0"]], "rpa (class in pyecsca.sca.re.rpa)": [[55, "pyecsca.sca.re.rpa.RPA"]], "base (pyecsca.sca.re.rpa.multiplecontext attribute)": [[55, "pyecsca.sca.re.rpa.MultipleContext.base"]], "build_tree() (pyecsca.sca.re.rpa.rpa method)": [[55, "pyecsca.sca.re.rpa.RPA.build_tree"]], "configs (pyecsca.sca.re.rpa.rpa attribute)": [[55, "pyecsca.sca.re.rpa.RPA.configs"]], "enter_action() (pyecsca.sca.re.rpa.multiplecontext method)": [[55, "pyecsca.sca.re.rpa.MultipleContext.enter_action"]], "exit_action() (pyecsca.sca.re.rpa.multiplecontext method)": [[55, "pyecsca.sca.re.rpa.MultipleContext.exit_action"]], "formulas (pyecsca.sca.re.rpa.multiplecontext attribute)": [[55, "pyecsca.sca.re.rpa.MultipleContext.formulas"]], "inside (pyecsca.sca.re.rpa.multiplecontext attribute)": [[55, "pyecsca.sca.re.rpa.MultipleContext.inside"]], "params (pyecsca.sca.re.rpa.rpa attribute)": [[55, "pyecsca.sca.re.rpa.RPA.params"]], "parents (pyecsca.sca.re.rpa.multiplecontext attribute)": [[55, "pyecsca.sca.re.rpa.MultipleContext.parents"]], "points (pyecsca.sca.re.rpa.multiplecontext attribute)": [[55, "pyecsca.sca.re.rpa.MultipleContext.points"]], "pyecsca.sca.re.rpa": [[55, "module-pyecsca.sca.re.rpa"]], "rpa_distinguish() (in module pyecsca.sca.re.rpa)": [[55, "pyecsca.sca.re.rpa.rpa_distinguish"]], "rpa_input_point() (in module pyecsca.sca.re.rpa)": [[55, "pyecsca.sca.re.rpa.rpa_input_point"]], "rpa_point_0y() (in module pyecsca.sca.re.rpa)": [[55, "pyecsca.sca.re.rpa.rpa_point_0y"]], "rpa_point_x0() (in module pyecsca.sca.re.rpa)": [[55, "pyecsca.sca.re.rpa.rpa_point_x0"]], "run() (pyecsca.sca.re.rpa.rpa method)": [[55, "pyecsca.sca.re.rpa.RPA.run"]], "scalars (pyecsca.sca.re.rpa.rpa attribute)": [[55, "pyecsca.sca.re.rpa.RPA.scalars"]], "tree (pyecsca.sca.re.rpa.rpa attribute)": [[55, "pyecsca.sca.re.rpa.RPA.tree"]], "pyecsca.sca.re.structural": [[56, "module-pyecsca.sca.re.structural"]], "map (class in pyecsca.sca.re.tree)": [[57, "pyecsca.sca.re.tree.Map"]], "node (class in pyecsca.sca.re.tree)": [[57, "pyecsca.sca.re.tree.Node"]], "tree (class in pyecsca.sca.re.tree)": [[57, "pyecsca.sca.re.tree.Tree"]], "ancestors (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.ancestors"]], "anchestors (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.anchestors"]], "build() (pyecsca.sca.re.tree.tree class method)": [[57, "pyecsca.sca.re.tree.Tree.build"]], "cfg_map (pyecsca.sca.re.tree.map attribute)": [[57, "pyecsca.sca.re.tree.Map.cfg_map"]], "cfgs (pyecsca.sca.re.tree.map property)": [[57, "pyecsca.sca.re.tree.Map.cfgs"]], "cfgs (pyecsca.sca.re.tree.node attribute)": [[57, "pyecsca.sca.re.tree.Node.cfgs"]], "children (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.children"]], "codomain (pyecsca.sca.re.tree.map attribute)": [[57, "pyecsca.sca.re.tree.Map.codomain"]], "deduplicate() (pyecsca.sca.re.tree.map method)": [[57, "pyecsca.sca.re.tree.Map.deduplicate"]], "depth (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.depth"]], "descendants (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.descendants"]], "describe() (pyecsca.sca.re.tree.map method)": [[57, "pyecsca.sca.re.tree.Map.describe"]], "describe() (pyecsca.sca.re.tree.tree method)": [[57, "pyecsca.sca.re.tree.Tree.describe"]], "dmap_index (pyecsca.sca.re.tree.node attribute)": [[57, "pyecsca.sca.re.tree.Node.dmap_index"]], "dmap_input (pyecsca.sca.re.tree.node attribute)": [[57, "pyecsca.sca.re.tree.Node.dmap_input"]], "domain (pyecsca.sca.re.tree.map attribute)": [[57, "pyecsca.sca.re.tree.Map.domain"]], "expand() (pyecsca.sca.re.tree.tree method)": [[57, "pyecsca.sca.re.tree.Tree.expand"]], "from_io_maps() (pyecsca.sca.re.tree.map class method)": [[57, "pyecsca.sca.re.tree.Map.from_io_maps"]], "from_sets() (pyecsca.sca.re.tree.map class method)": [[57, "pyecsca.sca.re.tree.Map.from_sets"]], "height (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.height"]], "height (pyecsca.sca.re.tree.tree property)": [[57, "pyecsca.sca.re.tree.Tree.height"]], "is_leaf (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.is_leaf"]], "is_root (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.is_root"]], "iter_path_reverse() (pyecsca.sca.re.tree.node method)": [[57, "pyecsca.sca.re.tree.Node.iter_path_reverse"]], "leaves (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.leaves"]], "leaves (pyecsca.sca.re.tree.tree property)": [[57, "pyecsca.sca.re.tree.Tree.leaves"]], "mapping (pyecsca.sca.re.tree.map attribute)": [[57, "pyecsca.sca.re.tree.Map.mapping"]], "maps (pyecsca.sca.re.tree.tree attribute)": [[57, "pyecsca.sca.re.tree.Tree.maps"]], "merge() (pyecsca.sca.re.tree.map method)": [[57, "pyecsca.sca.re.tree.Map.merge"]], "parent (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.parent"]], "path (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.path"]], "precise (pyecsca.sca.re.tree.tree property)": [[57, "pyecsca.sca.re.tree.Tree.precise"]], "pyecsca.sca.re.tree": [[57, "module-pyecsca.sca.re.tree"]], "render() (pyecsca.sca.re.tree.tree method)": [[57, "pyecsca.sca.re.tree.Tree.render"]], "render_basic() (pyecsca.sca.re.tree.tree method)": [[57, "pyecsca.sca.re.tree.Tree.render_basic"]], "response (pyecsca.sca.re.tree.node attribute)": [[57, "pyecsca.sca.re.tree.Node.response"]], "root (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.root"]], "root (pyecsca.sca.re.tree.tree attribute)": [[57, "pyecsca.sca.re.tree.Tree.root"]], "separator (pyecsca.sca.re.tree.node attribute)": [[57, "pyecsca.sca.re.tree.Node.separator"]], "siblings (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.siblings"]], "size (pyecsca.sca.re.tree.node property)": [[57, "pyecsca.sca.re.tree.Node.size"]], "size (pyecsca.sca.re.tree.tree property)": [[57, "pyecsca.sca.re.tree.Tree.size"]], "compute_factor_set() (in module pyecsca.sca.re.zvp)": [[58, "pyecsca.sca.re.zvp.compute_factor_set"]], "map_to_affine() (in module pyecsca.sca.re.zvp)": [[58, "pyecsca.sca.re.zvp.map_to_affine"]], "pyecsca.sca.re.zvp": [[58, "module-pyecsca.sca.re.zvp"]], "zvp_points() (in module pyecsca.sca.re.zvp)": [[58, "pyecsca.sca.re.zvp.zvp_points"]], "pyecsca.sca.scope": [[59, "module-pyecsca.sca.scope"]], "raw (pyecsca.sca.scope.base.sampletype attribute)": [[60, "pyecsca.sca.scope.base.SampleType.Raw"]], "sampletype (class in pyecsca.sca.scope.base)": [[60, "pyecsca.sca.scope.base.SampleType"]], "scope (class in pyecsca.sca.scope.base)": [[60, "pyecsca.sca.scope.base.Scope"]], "volt (pyecsca.sca.scope.base.sampletype attribute)": [[60, "pyecsca.sca.scope.base.SampleType.Volt"]], "arm() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.arm"]], "capture() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.capture"]], "channels (pyecsca.sca.scope.base.scope property)": [[60, "pyecsca.sca.scope.base.Scope.channels"]], "close() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.close"]], "open() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.open"]], "pyecsca.sca.scope.base": [[60, "module-pyecsca.sca.scope.base"]], "retrieve() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.retrieve"]], "setup_capture() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.setup_capture"]], "setup_channel() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.setup_channel"]], "setup_frequency() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.setup_frequency"]], "setup_trigger() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.setup_trigger"]], "stop() (pyecsca.sca.scope.base.scope method)": [[60, "pyecsca.sca.scope.base.Scope.stop"]], "chipwhispererscope (class in pyecsca.sca.scope.chipwhisperer)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope"]], "arm() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.arm"]], "capture() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.capture"]], "channels (pyecsca.sca.scope.chipwhisperer.chipwhispererscope property)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.channels"]], "close() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.close"]], "open() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.open"]], "pyecsca.sca.scope.chipwhisperer": [[61, "module-pyecsca.sca.scope.chipwhisperer"]], "retrieve() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.retrieve"]], "setup_capture() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_capture"]], "setup_channel() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_channel"]], "setup_frequency() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_frequency"]], "setup_trigger() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.setup_trigger"]], "stop() (pyecsca.sca.scope.chipwhisperer.chipwhispererscope method)": [[61, "pyecsca.sca.scope.chipwhisperer.ChipWhispererScope.stop"]], "picoscopealt (class in pyecsca.sca.scope.picoscope_alt)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt"]], "arm() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.arm"]], "capture() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.capture"]], "channels (pyecsca.sca.scope.picoscope_alt.picoscopealt property)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.channels"]], "close() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.close"]], "open() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.open"]], "pyecsca.sca.scope.picoscope_alt": [[62, "module-pyecsca.sca.scope.picoscope_alt"]], "retrieve() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.retrieve"]], "setup_capture() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_capture"]], "setup_channel() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_channel"]], "setup_frequency() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_frequency"]], "setup_trigger() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.setup_trigger"]], "stop() (pyecsca.sca.scope.picoscope_alt.picoscopealt method)": [[62, "pyecsca.sca.scope.picoscope_alt.PicoScopeAlt.stop"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.CHANNELS"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.CHANNELS"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.CHANNELS"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.CHANNELS"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.CHANNELS"]], "channels (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.CHANNELS"]], "coupling (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.COUPLING"]], "coupling (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.COUPLING"]], "coupling (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.COUPLING"]], "coupling (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.COUPLING"]], "coupling (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.COUPLING"]], "coupling (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.COUPLING"]], "max_adc_value (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.MAX_ADC_VALUE"]], "max_adc_value (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.MAX_ADC_VALUE"]], "max_adc_value (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.MAX_ADC_VALUE"]], "max_adc_value (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.MAX_ADC_VALUE"]], "max_adc_value (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.MAX_ADC_VALUE"]], "max_adc_value (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.MAX_ADC_VALUE"]], "min_adc_value (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.MIN_ADC_VALUE"]], "min_adc_value (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.MIN_ADC_VALUE"]], "min_adc_value (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.MIN_ADC_VALUE"]], "min_adc_value (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.MIN_ADC_VALUE"]], "min_adc_value (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.MIN_ADC_VALUE"]], "min_adc_value (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.MIN_ADC_VALUE"]], "module (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.MODULE"]], "module (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.MODULE"]], "module (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.MODULE"]], "module (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.MODULE"]], "module (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.MODULE"]], "module (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.MODULE"]], "prefix (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.PREFIX"]], "prefix (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.PREFIX"]], "prefix (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.PREFIX"]], "prefix (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.PREFIX"]], "prefix (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.PREFIX"]], "prefix (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.PREFIX"]], "ps3000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope"]], "ps3000ascope (class in pyecsca.sca.scope.picoscope_sdk)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope"]], "ps4000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope"]], "ps5000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope"]], "ps6000scope (class in pyecsca.sca.scope.picoscope_sdk)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope"]], "picoscopesdk (class in pyecsca.sca.scope.picoscope_sdk)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk"]], "ranges (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.RANGES"], [63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.ranges"]], "ranges (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.RANGES"], [63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.ranges"]], "ranges (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.RANGES"], [63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.ranges"]], "ranges (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.RANGES"], [63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.ranges"]], "ranges (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.RANGES"], [63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.ranges"]], "ranges (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.RANGES"]], "time_units (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.TIME_UNITS"]], "time_units (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.TIME_UNITS"]], "time_units (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.TIME_UNITS"]], "time_units (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.TIME_UNITS"]], "time_units (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.TIME_UNITS"]], "time_units (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.TIME_UNITS"]], "triggers (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.TRIGGERS"]], "triggers (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.TRIGGERS"]], "triggers (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.TRIGGERS"]], "triggers (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.TRIGGERS"]], "triggers (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.TRIGGERS"]], "triggers (pyecsca.sca.scope.picoscope_sdk.picoscopesdk attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.TRIGGERS"]], "arm() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.arm"]], "arm() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.arm"]], "arm() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.arm"]], "arm() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.arm"]], "arm() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.arm"]], "arm() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.arm"]], "buffers (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.buffers"]], "buffers (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.buffers"]], "buffers (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.buffers"]], "buffers (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.buffers"]], "buffers (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.buffers"]], "capture() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.capture"]], "capture() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.capture"]], "capture() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.capture"]], "capture() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.capture"]], "capture() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.capture"]], "capture() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.capture"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps3000scope property)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.channels"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps3000ascope property)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.channels"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps4000scope property)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.channels"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps5000scope property)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.channels"]], "channels (pyecsca.sca.scope.picoscope_sdk.ps6000scope property)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.channels"]], "channels (pyecsca.sca.scope.picoscope_sdk.picoscopesdk property)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.channels"]], "close() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.close"]], "close() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.close"]], "close() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.close"]], "close() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.close"]], "close() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.close"]], "close() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.close"]], "frequency (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.frequency"]], "frequency (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.frequency"]], "frequency (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.frequency"]], "frequency (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.frequency"]], "frequency (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.frequency"]], "get_variant() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.get_variant"]], "get_variant() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.get_variant"]], "get_variant() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.get_variant"]], "get_variant() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.get_variant"]], "get_variant() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.get_variant"]], "get_variant() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.get_variant"]], "handle (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.handle"]], "handle (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.handle"]], "handle (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.handle"]], "handle (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.handle"]], "handle (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.handle"]], "open() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.open"]], "open() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.open"]], "open() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.open"]], "open() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.open"]], "open() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.open"]], "open() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.open"]], "posttrig (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.posttrig"]], "posttrig (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.posttrig"]], "posttrig (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.posttrig"]], "posttrig (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.posttrig"]], "posttrig (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.posttrig"]], "pretrig (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.pretrig"]], "pretrig (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.pretrig"]], "pretrig (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.pretrig"]], "pretrig (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.pretrig"]], "pretrig (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.pretrig"]], "pyecsca.sca.scope.picoscope_sdk": [[63, "module-pyecsca.sca.scope.picoscope_sdk"]], "retrieve() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.retrieve"]], "retrieve() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.retrieve"]], "retrieve() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.retrieve"]], "retrieve() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.retrieve"]], "retrieve() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.retrieve"]], "retrieve() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.retrieve"]], "samples (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.samples"]], "samples (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.samples"]], "samples (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.samples"]], "samples (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.samples"]], "samples (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.samples"]], "set_buffer() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_buffer"]], "set_buffer() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_buffer"]], "set_buffer() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_buffer"]], "set_buffer() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_buffer"]], "set_buffer() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_buffer"]], "set_buffer() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_buffer"]], "set_channel() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_channel"]], "set_channel() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_channel"]], "set_channel() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_channel"]], "set_channel() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_channel"]], "set_channel() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_channel"]], "set_channel() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_channel"]], "set_frequency() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_frequency"]], "set_frequency() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_frequency"]], "set_frequency() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_frequency"]], "set_frequency() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_frequency"]], "set_frequency() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_frequency"]], "set_frequency() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_frequency"]], "set_trigger() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.set_trigger"]], "set_trigger() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.set_trigger"]], "set_trigger() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.set_trigger"]], "set_trigger() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.set_trigger"]], "set_trigger() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.set_trigger"]], "set_trigger() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.set_trigger"]], "setup_capture() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_capture"]], "setup_capture() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_capture"]], "setup_capture() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_capture"]], "setup_capture() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_capture"]], "setup_capture() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_capture"]], "setup_capture() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_capture"]], "setup_channel() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_channel"]], "setup_channel() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_channel"]], "setup_channel() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_channel"]], "setup_channel() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_channel"]], "setup_channel() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_channel"]], "setup_channel() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_channel"]], "setup_frequency() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_frequency"]], "setup_frequency() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_frequency"]], "setup_frequency() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_frequency"]], "setup_frequency() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_frequency"]], "setup_frequency() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_frequency"]], "setup_frequency() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_frequency"]], "setup_trigger() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.setup_trigger"]], "setup_trigger() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.setup_trigger"]], "setup_trigger() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.setup_trigger"]], "setup_trigger() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.setup_trigger"]], "setup_trigger() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.setup_trigger"]], "setup_trigger() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.setup_trigger"]], "stop() (pyecsca.sca.scope.picoscope_sdk.ps3000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.stop"]], "stop() (pyecsca.sca.scope.picoscope_sdk.ps3000ascope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.stop"]], "stop() (pyecsca.sca.scope.picoscope_sdk.ps4000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.stop"]], "stop() (pyecsca.sca.scope.picoscope_sdk.ps5000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.stop"]], "stop() (pyecsca.sca.scope.picoscope_sdk.ps6000scope method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.stop"]], "stop() (pyecsca.sca.scope.picoscope_sdk.picoscopesdk method)": [[63, "pyecsca.sca.scope.picoscope_sdk.PicoScopeSdk.stop"]], "timebase (pyecsca.sca.scope.picoscope_sdk.ps3000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000Scope.timebase"]], "timebase (pyecsca.sca.scope.picoscope_sdk.ps3000ascope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS3000aScope.timebase"]], "timebase (pyecsca.sca.scope.picoscope_sdk.ps4000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS4000Scope.timebase"]], "timebase (pyecsca.sca.scope.picoscope_sdk.ps5000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS5000Scope.timebase"]], "timebase (pyecsca.sca.scope.picoscope_sdk.ps6000scope attribute)": [[63, "pyecsca.sca.scope.picoscope_sdk.PS6000Scope.timebase"]], "pyecsca.sca.stacked_traces": [[64, "module-pyecsca.sca.stacked_traces"]], "basetracemanager (class in pyecsca.sca.stacked_traces.combine)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager"]], "cputracemanager (class in pyecsca.sca.stacked_traces.combine)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager"]], "gputracemanager (class in pyecsca.sca.stacked_traces.combine)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager"]], "add() (pyecsca.sca.stacked_traces.combine.basetracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.add"]], "add() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.add"]], "add() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.add"]], "average() (pyecsca.sca.stacked_traces.combine.basetracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average"]], "average() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average"]], "average() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average"]], "average_and_variance() (pyecsca.sca.stacked_traces.combine.basetracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.average_and_variance"]], "average_and_variance() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.average_and_variance"]], "average_and_variance() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.average_and_variance"]], "chunk_size_from_ratio() (pyecsca.sca.stacked_traces.combine.gputracemanager static method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.chunk_size_from_ratio"]], "conditional_average() (pyecsca.sca.stacked_traces.combine.basetracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.conditional_average"]], "conditional_average() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.conditional_average"]], "conditional_average() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.conditional_average"]], "pearson_corr() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.pearson_corr"]], "pearson_corr() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.pearson_corr"]], "pyecsca.sca.stacked_traces.combine": [[65, "module-pyecsca.sca.stacked_traces.combine"]], "run() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.run"]], "standard_deviation() (pyecsca.sca.stacked_traces.combine.basetracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.standard_deviation"]], "standard_deviation() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.standard_deviation"]], "standard_deviation() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.standard_deviation"]], "traces (pyecsca.sca.stacked_traces.combine.cputracemanager attribute)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.traces"]], "traces_shape (pyecsca.sca.stacked_traces.combine.gputracemanager property)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.traces_shape"]], "variance() (pyecsca.sca.stacked_traces.combine.basetracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.BaseTraceManager.variance"]], "variance() (pyecsca.sca.stacked_traces.combine.cputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.CPUTraceManager.variance"]], "variance() (pyecsca.sca.stacked_traces.combine.gputracemanager method)": [[65, "pyecsca.sca.stacked_traces.combine.GPUTraceManager.variance"]], "stackedtraces (class in pyecsca.sca.stacked_traces.stacked_traces)": [[66, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces"]], "fromarray() (pyecsca.sca.stacked_traces.stacked_traces.stackedtraces class method)": [[66, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.fromarray"]], "fromtraceset() (pyecsca.sca.stacked_traces.stacked_traces.stackedtraces class method)": [[66, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.fromtraceset"]], "meta (pyecsca.sca.stacked_traces.stacked_traces.stackedtraces attribute)": [[66, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.meta"]], "pyecsca.sca.stacked_traces.stacked_traces": [[66, "module-pyecsca.sca.stacked_traces.stacked_traces"]], "samples (pyecsca.sca.stacked_traces.stacked_traces.stackedtraces attribute)": [[66, "pyecsca.sca.stacked_traces.stacked_traces.StackedTraces.samples"]], "pyecsca.sca.target": [[67, "module-pyecsca.sca.target"]], "cardconnectionexception": [[68, "pyecsca.sca.target.ISO7816.CardConnectionException"]], "cardprotocol (class in pyecsca.sca.target.iso7816)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol"]], "commandapdu (class in pyecsca.sca.target.iso7816)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU"]], "iso7816 (class in pyecsca.sca.target.iso7816)": [[68, "pyecsca.sca.target.ISO7816.ISO7816"]], "iso7816target (class in pyecsca.sca.target.iso7816)": [[68, "pyecsca.sca.target.ISO7816.ISO7816Target"]], "responseapdu (class in pyecsca.sca.target.iso7816)": [[68, "pyecsca.sca.target.ISO7816.ResponseAPDU"]], "sw_applet_select_failed (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_APPLET_SELECT_FAILED"]], "sw_bytes_remaining_00 (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_BYTES_REMAINING_00"]], "sw_cla_not_supported (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_CLA_NOT_SUPPORTED"]], "sw_command_not_allowed (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_COMMAND_NOT_ALLOWED"]], "sw_conditions_not_satisfied (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_CONDITIONS_NOT_SATISFIED"]], "sw_correct_length_00 (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_CORRECT_LENGTH_00"]], "sw_data_invalid (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_DATA_INVALID"]], "sw_file_full (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_FILE_FULL"]], "sw_file_invalid (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_FILE_INVALID"]], "sw_file_not_found (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_FILE_NOT_FOUND"]], "sw_func_not_supported (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_FUNC_NOT_SUPPORTED"]], "sw_incorrect_p1p2 (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_INCORRECT_P1P2"]], "sw_ins_not_supported (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_INS_NOT_SUPPORTED"]], "sw_no_error (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_NO_ERROR"]], "sw_record_not_found (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_RECORD_NOT_FOUND"]], "sw_security_status_not_satisfied (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_SECURITY_STATUS_NOT_SATISFIED"]], "sw_unknown (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_UNKNOWN"]], "sw_wrong_data (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_WRONG_DATA"]], "sw_wrong_length (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_WRONG_LENGTH"]], "sw_wrong_p1p2 (pyecsca.sca.target.iso7816.iso7816 attribute)": [[68, "pyecsca.sca.target.ISO7816.ISO7816.SW_WRONG_P1P2"]], "t0 (pyecsca.sca.target.iso7816.cardprotocol attribute)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.T0"]], "t1 (pyecsca.sca.target.iso7816.cardprotocol attribute)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.T1"]], "add_note() (pyecsca.sca.target.iso7816.cardconnectionexception method)": [[68, "pyecsca.sca.target.ISO7816.CardConnectionException.add_note"]], "args (pyecsca.sca.target.iso7816.cardconnectionexception attribute)": [[68, "pyecsca.sca.target.ISO7816.CardConnectionException.args"]], "as_integer_ratio() (pyecsca.sca.target.iso7816.cardprotocol method)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.as_integer_ratio"]], "atr (pyecsca.sca.target.iso7816.iso7816target property)": [[68, "pyecsca.sca.target.ISO7816.ISO7816Target.atr"]], "bit_count() (pyecsca.sca.target.iso7816.cardprotocol method)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.bit_count"]], "bit_length() (pyecsca.sca.target.iso7816.cardprotocol method)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.bit_length"]], "cls (pyecsca.sca.target.iso7816.commandapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU.cls"]], "conjugate() (pyecsca.sca.target.iso7816.cardprotocol method)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.conjugate"]], "connect() (pyecsca.sca.target.iso7816.iso7816target method)": [[68, "pyecsca.sca.target.ISO7816.ISO7816Target.connect"]], "data (pyecsca.sca.target.iso7816.commandapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU.data"]], "data (pyecsca.sca.target.iso7816.responseapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.ResponseAPDU.data"]], "denominator (pyecsca.sca.target.iso7816.cardprotocol attribute)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.denominator"]], "disconnect() (pyecsca.sca.target.iso7816.iso7816target method)": [[68, "pyecsca.sca.target.ISO7816.ISO7816Target.disconnect"]], "from_bytes() (pyecsca.sca.target.iso7816.cardprotocol method)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.from_bytes"]], "imag (pyecsca.sca.target.iso7816.cardprotocol attribute)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.imag"]], "ins (pyecsca.sca.target.iso7816.commandapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU.ins"]], "ne (pyecsca.sca.target.iso7816.commandapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU.ne"]], "numerator (pyecsca.sca.target.iso7816.cardprotocol attribute)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.numerator"]], "p1 (pyecsca.sca.target.iso7816.commandapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU.p1"]], "p2 (pyecsca.sca.target.iso7816.commandapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.CommandAPDU.p2"]], "pyecsca.sca.target.iso7816": [[68, "module-pyecsca.sca.target.ISO7816"]], "real (pyecsca.sca.target.iso7816.cardprotocol attribute)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.real"]], "select() (pyecsca.sca.target.iso7816.iso7816target method)": [[68, "pyecsca.sca.target.ISO7816.ISO7816Target.select"]], "send_apdu() (pyecsca.sca.target.iso7816.iso7816target method)": [[68, "pyecsca.sca.target.ISO7816.ISO7816Target.send_apdu"]], "sw (pyecsca.sca.target.iso7816.responseapdu attribute)": [[68, "pyecsca.sca.target.ISO7816.ResponseAPDU.sw"]], "to_bytes() (pyecsca.sca.target.iso7816.cardprotocol method)": [[68, "pyecsca.sca.target.ISO7816.CardProtocol.to_bytes"]], "with_traceback() (pyecsca.sca.target.iso7816.cardconnectionexception method)": [[68, "pyecsca.sca.target.ISO7816.CardConnectionException.with_traceback"]], "pcsctarget (class in pyecsca.sca.target.pcsc)": [[69, "pyecsca.sca.target.PCSC.PCSCTarget"]], "atr (pyecsca.sca.target.pcsc.pcsctarget property)": [[69, "pyecsca.sca.target.PCSC.PCSCTarget.atr"]], "connect() (pyecsca.sca.target.pcsc.pcsctarget method)": [[69, "pyecsca.sca.target.PCSC.PCSCTarget.connect"]], "disconnect() (pyecsca.sca.target.pcsc.pcsctarget method)": [[69, "pyecsca.sca.target.PCSC.PCSCTarget.disconnect"]], "pyecsca.sca.target.pcsc": [[69, "module-pyecsca.sca.target.PCSC"]], "select() (pyecsca.sca.target.pcsc.pcsctarget method)": [[69, "pyecsca.sca.target.PCSC.PCSCTarget.select"]], "send_apdu() (pyecsca.sca.target.pcsc.pcsctarget method)": [[69, "pyecsca.sca.target.PCSC.PCSCTarget.send_apdu"]], "target (class in pyecsca.sca.target.base)": [[70, "pyecsca.sca.target.base.Target"]], "connect() (pyecsca.sca.target.base.target method)": [[70, "pyecsca.sca.target.base.Target.connect"]], "disconnect() (pyecsca.sca.target.base.target method)": [[70, "pyecsca.sca.target.base.Target.disconnect"]], "pyecsca.sca.target.base": [[70, "module-pyecsca.sca.target.base"]], "binarytarget (class in pyecsca.sca.target.binary)": [[71, "pyecsca.sca.target.binary.BinaryTarget"]], "binary (pyecsca.sca.target.binary.binarytarget attribute)": [[71, "pyecsca.sca.target.binary.BinaryTarget.binary"]], "connect() (pyecsca.sca.target.binary.binarytarget method)": [[71, "pyecsca.sca.target.binary.BinaryTarget.connect"]], "debug_output (pyecsca.sca.target.binary.binarytarget attribute)": [[71, "pyecsca.sca.target.binary.BinaryTarget.debug_output"]], "disconnect() (pyecsca.sca.target.binary.binarytarget method)": [[71, "pyecsca.sca.target.binary.BinaryTarget.disconnect"]], "process (pyecsca.sca.target.binary.binarytarget attribute)": [[71, "pyecsca.sca.target.binary.BinaryTarget.process"]], "pyecsca.sca.target.binary": [[71, "module-pyecsca.sca.target.binary"]], "read() (pyecsca.sca.target.binary.binarytarget method)": [[71, "pyecsca.sca.target.binary.BinaryTarget.read"]], "write() (pyecsca.sca.target.binary.binarytarget method)": [[71, "pyecsca.sca.target.binary.BinaryTarget.write"]], "chipwhisperertarget (class in pyecsca.sca.target.chipwhisperer)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget"]], "connect() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.connect"]], "disconnect() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.disconnect"]], "flash() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.flash"]], "pyecsca.sca.target.chipwhisperer": [[72, "module-pyecsca.sca.target.chipwhisperer"]], "read() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.read"]], "recv_msgs() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.recv_msgs"]], "reset() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.reset"]], "send_cmd() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.send_cmd"]], "write() (pyecsca.sca.target.chipwhisperer.chipwhisperertarget method)": [[72, "pyecsca.sca.target.chipwhisperer.ChipWhispererTarget.write"]], "a (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.A"]], "aid_current_version (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.AID_CURRENT_VERSION"]], "aid_current_version (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_CURRENT_VERSION"]], "aid_current_version (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_CURRENT_VERSION"]], "aid_prefix (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.AID_PREFIX"]], "aid_prefix (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_PREFIX"]], "aid_prefix (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_PREFIX"]], "aid_suffix_221 (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.AID_SUFFIX_221"]], "aid_suffix_221 (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_SUFFIX_221"]], "aid_suffix_221 (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_SUFFIX_221"]], "aid_suffix_222 (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.AID_SUFFIX_222"]], "aid_suffix_222 (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_SUFFIX_222"]], "aid_suffix_222 (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_SUFFIX_222"]], "aid_suffix_304 (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.AID_SUFFIX_304"]], "aid_suffix_304 (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.AID_SUFFIX_304"]], "aid_suffix_304 (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.AID_SUFFIX_304"]], "alg_ecdsa_sha (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA"]], "alg_ecdsa_sha_224 (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_224"]], "alg_ecdsa_sha_256 (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_256"]], "alg_ecdsa_sha_384 (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_384"]], "alg_ecdsa_sha_512 (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.ALG_ECDSA_SHA_512"]], "alg_ec_f2m (pyecsca.sca.target.ectester.keyclassenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.ALG_EC_F2M"]], "alg_ec_fp (pyecsca.sca.target.ectester.keyclassenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.ALG_EC_FP"]], "alg_ec_pace_gm (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_PACE_GM"]], "alg_ec_svdp_dh (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH"]], "alg_ec_svdp_dhc (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DHC"]], "alg_ec_svdp_dhc_kdf (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DHC_KDF"]], "alg_ec_svdp_dhc_plain (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DHC_PLAIN"]], "alg_ec_svdp_dh_kdf (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH_KDF"]], "alg_ec_svdp_dh_plain (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH_PLAIN"]], "alg_ec_svdp_dh_plain_xy (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.ALG_EC_SVDP_DH_PLAIN_XY"]], "all (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.ALL"]], "allocatekaresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.AllocateKaResponse"]], "allocateresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.AllocateResponse"]], "allocatesigresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.AllocateSigResponse"]], "appletbaseenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum"]], "b (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.B"]], "base_221 (pyecsca.sca.target.ectester.appletbaseenum attribute)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.BASE_221"]], "base_222 (pyecsca.sca.target.ectester.appletbaseenum attribute)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.BASE_222"]], "both (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.BOTH"]], "build_keybuilder (pyecsca.sca.target.ectester.keybuildenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.BUILD_KEYBUILDER"]], "build_keypair (pyecsca.sca.target.ectester.keybuildenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.BUILD_KEYPAIR"]], "cla_ectester (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.CLA_ECTESTER"]], "cla_ectester (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.CLA_ECTESTER"]], "cla_ectester (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.CLA_ECTESTER"]], "compress (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.COMPRESS"]], "compressed (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.COMPRESSED"]], "compress_hybrid (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.COMPRESS_HYBRID"]], "chunkingexception": [[73, "pyecsca.sca.target.ectester.ChunkingException"]], "cleanupresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.CleanupResponse"]], "clearresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ClearResponse"]], "curveenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.CurveEnum"]], "domain_f2m (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.DOMAIN_F2M"]], "domain_fp (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.DOMAIN_FP"]], "ecdhresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ECDHResponse"]], "ecdsaresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse"]], "ectestertarget (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget"]], "ectestertargetleia (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA"]], "ectestertargetpcsc (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC"]], "export_false (pyecsca.sca.target.ectester.exportenum attribute)": [[73, "pyecsca.sca.target.ectester.ExportEnum.EXPORT_FALSE"]], "export_true (pyecsca.sca.target.ectester.exportenum attribute)": [[73, "pyecsca.sca.target.ectester.ExportEnum.EXPORT_TRUE"]], "exportenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ExportEnum"]], "exportresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ExportResponse"]], "f2m (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.F2M"]], "fixed (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.FIXED"]], "fp (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.FP"]], "fullrandom (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.FULLRANDOM"]], "formatenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.FormatEnum"]], "g (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.G"]], "generateresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.GenerateResponse"]], "hybrid (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.HYBRID"]], "increment (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.INCREMENT"]], "infinity (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.INFINITY"]], "ins_allocate (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ALLOCATE"]], "ins_allocate_ka (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ALLOCATE_KA"]], "ins_allocate_sig (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ALLOCATE_SIG"]], "ins_buffer (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_BUFFER"]], "ins_cleanup (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_CLEANUP"]], "ins_clear (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_CLEAR"]], "ins_ecdh (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDH"]], "ins_ecdh_direct (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDH_DIRECT"]], "ins_ecdsa (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDSA"]], "ins_ecdsa_sign (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDSA_SIGN"]], "ins_ecdsa_verify (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_ECDSA_VERIFY"]], "ins_export (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_EXPORT"]], "ins_generate (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_GENERATE"]], "ins_get_info (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_GET_INFO"]], "ins_perform (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_PERFORM"]], "ins_set (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_SET"]], "ins_set_dry_run_mode (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_SET_DRY_RUN_MODE"]], "ins_transform (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.INS_TRANSFORM"]], "instructionenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.InstructionEnum"]], "k (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.K"]], "keypair (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.KEYPAIR"]], "keypair_both (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.KEYPAIR_BOTH"]], "keypair_local (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.KEYPAIR_LOCAL"]], "keypair_remote (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.KEYPAIR_REMOTE"]], "keyagreementenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum"]], "keybuildenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum"]], "keyclassenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum"]], "keyenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.KeyEnum"]], "keypairenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.KeypairEnum"]], "mask_04 (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.MASK_04"]], "max (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.MAX"]], "mode_dry_run (pyecsca.sca.target.ectester.runmodeenum attribute)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.MODE_DRY_RUN"]], "mode_normal (pyecsca.sca.target.ectester.runmodeenum attribute)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.MODE_NORMAL"]], "none (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.NONE"]], "none (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.NONE"]], "one (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.ONE"]], "onebyterandom (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.ONEBYTERANDOM"]], "private (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.PRIVATE"]], "public (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.PUBLIC"]], "parameterenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.ParameterEnum"]], "r (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.R"]], "runmodeenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.RunModeEnum"]], "runmoderesponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.RunModeResponse"]], "s (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.S"]], "setresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.SetResponse"]], "signatureenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.SignatureEnum"]], "transformresponse (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.TransformResponse"]], "transformationenum (class in pyecsca.sca.target.ectester)": [[73, "pyecsca.sca.target.ectester.TransformationEnum"]], "uncompressed (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.UNCOMPRESSED"]], "w (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.W"]], "zero (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.ZERO"]], "add_note() (pyecsca.sca.target.ectester.chunkingexception method)": [[73, "pyecsca.sca.target.ectester.ChunkingException.add_note"]], "allocate() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.allocate"]], "allocate() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate"]], "allocate() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate"]], "allocate_ka() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.allocate_ka"]], "allocate_ka() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_ka"]], "allocate_ka() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_ka"]], "allocate_sig() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.allocate_sig"]], "allocate_sig() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.allocate_sig"]], "allocate_sig() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.allocate_sig"]], "args (pyecsca.sca.target.ectester.chunkingexception attribute)": [[73, "pyecsca.sca.target.ectester.ChunkingException.args"]], "as_integer_ratio() (pyecsca.sca.target.ectester.appletbaseenum method)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.curveenum method)": [[73, "pyecsca.sca.target.ectester.CurveEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.exportenum method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.formatenum method)": [[73, "pyecsca.sca.target.ectester.FormatEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.instructionenum method)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.keyagreementenum method)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.keybuildenum method)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.keyclassenum method)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.keyenum method)": [[73, "pyecsca.sca.target.ectester.KeyEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.keypairenum method)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.parameterenum method)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.runmodeenum method)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.signatureenum method)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.as_integer_ratio"]], "as_integer_ratio() (pyecsca.sca.target.ectester.transformationenum method)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.as_integer_ratio"]], "atr (pyecsca.sca.target.ectester.ectestertarget property)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.atr"]], "atr (pyecsca.sca.target.ectester.ectestertargetleia property)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.atr"]], "atr (pyecsca.sca.target.ectester.ectestertargetpcsc property)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.atr"]], "bit_count() (pyecsca.sca.target.ectester.appletbaseenum method)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.curveenum method)": [[73, "pyecsca.sca.target.ectester.CurveEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.exportenum method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.formatenum method)": [[73, "pyecsca.sca.target.ectester.FormatEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.instructionenum method)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.keyagreementenum method)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.keybuildenum method)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.keyclassenum method)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.keyenum method)": [[73, "pyecsca.sca.target.ectester.KeyEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.keypairenum method)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.parameterenum method)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.runmodeenum method)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.signatureenum method)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.bit_count"]], "bit_count() (pyecsca.sca.target.ectester.transformationenum method)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.bit_count"]], "bit_length() (pyecsca.sca.target.ectester.appletbaseenum method)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.curveenum method)": [[73, "pyecsca.sca.target.ectester.CurveEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.exportenum method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.formatenum method)": [[73, "pyecsca.sca.target.ectester.FormatEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.instructionenum method)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.keyagreementenum method)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.keybuildenum method)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.keyclassenum method)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.keyenum method)": [[73, "pyecsca.sca.target.ectester.KeyEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.keypairenum method)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.parameterenum method)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.runmodeenum method)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.signatureenum method)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.bit_length"]], "bit_length() (pyecsca.sca.target.ectester.transformationenum method)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.bit_length"]], "card_present (pyecsca.sca.target.ectester.ectestertargetleia property)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.card_present"]], "chunking (pyecsca.sca.target.ectester.ectestertarget attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.chunking"]], "chunking (pyecsca.sca.target.ectester.ectestertargetleia attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.chunking"]], "chunking (pyecsca.sca.target.ectester.ectestertargetpcsc attribute)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.chunking"]], "cleanup() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.cleanup"]], "cleanup() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.cleanup"]], "cleanup() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.cleanup"]], "clear() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.clear"]], "clear() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.clear"]], "clear() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.clear"]], "conjugate() (pyecsca.sca.target.ectester.appletbaseenum method)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.curveenum method)": [[73, "pyecsca.sca.target.ectester.CurveEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.exportenum method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.formatenum method)": [[73, "pyecsca.sca.target.ectester.FormatEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.instructionenum method)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.keyagreementenum method)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.keybuildenum method)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.keyclassenum method)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.keyenum method)": [[73, "pyecsca.sca.target.ectester.KeyEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.keypairenum method)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.parameterenum method)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.runmodeenum method)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.signatureenum method)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.conjugate"]], "conjugate() (pyecsca.sca.target.ectester.transformationenum method)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.conjugate"]], "connect() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.connect"]], "connect() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.connect"]], "connect() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.connect"]], "default (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.default"]], "denominator (pyecsca.sca.target.ectester.appletbaseenum attribute)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.exportenum attribute)": [[73, "pyecsca.sca.target.ectester.ExportEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.keybuildenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.keyclassenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.runmodeenum attribute)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.denominator"]], "denominator (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.denominator"]], "disconnect() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.disconnect"]], "disconnect() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.disconnect"]], "disconnect() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.disconnect"]], "ecdh() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.ecdh"]], "ecdh() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh"]], "ecdh() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh"]], "ecdh_direct() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.ecdh_direct"]], "ecdh_direct() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdh_direct"]], "ecdh_direct() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdh_direct"]], "ecdsa() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa"]], "ecdsa() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa"]], "ecdsa() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa"]], "ecdsa_sign() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_sign"]], "ecdsa_sign() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_sign"]], "ecdsa_sign() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_sign"]], "ecdsa_verify() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.ecdsa_verify"]], "ecdsa_verify() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.ecdsa_verify"]], "ecdsa_verify() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.ecdsa_verify"]], "encode_parameters() (pyecsca.sca.target.ectester.ectestertarget static method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.encode_parameters"]], "encode_parameters() (pyecsca.sca.target.ectester.ectestertargetleia static method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.encode_parameters"]], "encode_parameters() (pyecsca.sca.target.ectester.ectestertargetpcsc static method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.encode_parameters"]], "error (pyecsca.sca.target.ectester.allocatekaresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateKaResponse.error"]], "error (pyecsca.sca.target.ectester.allocateresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateResponse.error"]], "error (pyecsca.sca.target.ectester.allocatesigresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateSigResponse.error"]], "error (pyecsca.sca.target.ectester.cleanupresponse attribute)": [[73, "pyecsca.sca.target.ectester.CleanupResponse.error"]], "error (pyecsca.sca.target.ectester.clearresponse attribute)": [[73, "pyecsca.sca.target.ectester.ClearResponse.error"]], "error (pyecsca.sca.target.ectester.ecdhresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDHResponse.error"]], "error (pyecsca.sca.target.ectester.ecdsaresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse.error"]], "error (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.error"]], "error (pyecsca.sca.target.ectester.generateresponse attribute)": [[73, "pyecsca.sca.target.ectester.GenerateResponse.error"]], "error (pyecsca.sca.target.ectester.runmoderesponse attribute)": [[73, "pyecsca.sca.target.ectester.RunModeResponse.error"]], "error (pyecsca.sca.target.ectester.setresponse attribute)": [[73, "pyecsca.sca.target.ectester.SetResponse.error"]], "error (pyecsca.sca.target.ectester.transformresponse attribute)": [[73, "pyecsca.sca.target.ectester.TransformResponse.error"]], "export() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.export"]], "export() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.export"]], "export() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.export"]], "external (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.external"]], "from_bool() (pyecsca.sca.target.ectester.exportenum class method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.from_bool"]], "from_bytes() (pyecsca.sca.target.ectester.appletbaseenum method)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.curveenum method)": [[73, "pyecsca.sca.target.ectester.CurveEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.exportenum method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.formatenum method)": [[73, "pyecsca.sca.target.ectester.FormatEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.instructionenum method)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.keyagreementenum method)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.keybuildenum method)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.keyclassenum method)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.keyenum method)": [[73, "pyecsca.sca.target.ectester.KeyEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.keypairenum method)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.parameterenum method)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.runmodeenum method)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.signatureenum method)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.from_bytes"]], "from_bytes() (pyecsca.sca.target.ectester.transformationenum method)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.from_bytes"]], "generate() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.generate"]], "generate() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.generate"]], "generate() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.generate"]], "get_index() (pyecsca.sca.target.ectester.exportresponse method)": [[73, "pyecsca.sca.target.ectester.ExportResponse.get_index"]], "get_param() (pyecsca.sca.target.ectester.exportresponse method)": [[73, "pyecsca.sca.target.ectester.ExportResponse.get_param"]], "imag (pyecsca.sca.target.ectester.appletbaseenum attribute)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.imag"]], "imag (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.imag"]], "imag (pyecsca.sca.target.ectester.exportenum attribute)": [[73, "pyecsca.sca.target.ectester.ExportEnum.imag"]], "imag (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.imag"]], "imag (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.imag"]], "imag (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.imag"]], "imag (pyecsca.sca.target.ectester.keybuildenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.imag"]], "imag (pyecsca.sca.target.ectester.keyclassenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.imag"]], "imag (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.imag"]], "imag (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.imag"]], "imag (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.imag"]], "imag (pyecsca.sca.target.ectester.runmodeenum attribute)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.imag"]], "imag (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.imag"]], "imag (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.imag"]], "info() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.info"]], "info() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.info"]], "info() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.info"]], "key (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.key"]], "keypair (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.keypair"]], "numerator (pyecsca.sca.target.ectester.appletbaseenum attribute)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.exportenum attribute)": [[73, "pyecsca.sca.target.ectester.ExportEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.keybuildenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.keyclassenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.runmodeenum attribute)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.numerator"]], "numerator (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.numerator"]], "parameters (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.parameters"]], "params (pyecsca.sca.target.ectester.allocatekaresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateKaResponse.params"]], "params (pyecsca.sca.target.ectester.allocateresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateResponse.params"]], "params (pyecsca.sca.target.ectester.allocatesigresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateSigResponse.params"]], "params (pyecsca.sca.target.ectester.cleanupresponse attribute)": [[73, "pyecsca.sca.target.ectester.CleanupResponse.params"]], "params (pyecsca.sca.target.ectester.clearresponse attribute)": [[73, "pyecsca.sca.target.ectester.ClearResponse.params"]], "params (pyecsca.sca.target.ectester.ecdhresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDHResponse.params"]], "params (pyecsca.sca.target.ectester.ecdsaresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse.params"]], "params (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.params"]], "params (pyecsca.sca.target.ectester.generateresponse attribute)": [[73, "pyecsca.sca.target.ectester.GenerateResponse.params"]], "params (pyecsca.sca.target.ectester.runmoderesponse attribute)": [[73, "pyecsca.sca.target.ectester.RunModeResponse.params"]], "params (pyecsca.sca.target.ectester.setresponse attribute)": [[73, "pyecsca.sca.target.ectester.SetResponse.params"]], "params (pyecsca.sca.target.ectester.transformresponse attribute)": [[73, "pyecsca.sca.target.ectester.TransformResponse.params"]], "pyecsca.sca.target.ectester": [[73, "module-pyecsca.sca.target.ectester"]], "real (pyecsca.sca.target.ectester.appletbaseenum attribute)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.real"]], "real (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.real"]], "real (pyecsca.sca.target.ectester.exportenum attribute)": [[73, "pyecsca.sca.target.ectester.ExportEnum.real"]], "real (pyecsca.sca.target.ectester.formatenum attribute)": [[73, "pyecsca.sca.target.ectester.FormatEnum.real"]], "real (pyecsca.sca.target.ectester.instructionenum attribute)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.real"]], "real (pyecsca.sca.target.ectester.keyagreementenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.real"]], "real (pyecsca.sca.target.ectester.keybuildenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.real"]], "real (pyecsca.sca.target.ectester.keyclassenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.real"]], "real (pyecsca.sca.target.ectester.keyenum attribute)": [[73, "pyecsca.sca.target.ectester.KeyEnum.real"]], "real (pyecsca.sca.target.ectester.keypairenum attribute)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.real"]], "real (pyecsca.sca.target.ectester.parameterenum attribute)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.real"]], "real (pyecsca.sca.target.ectester.runmodeenum attribute)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.real"]], "real (pyecsca.sca.target.ectester.signatureenum attribute)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.real"]], "real (pyecsca.sca.target.ectester.transformationenum attribute)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.real"]], "resp (pyecsca.sca.target.ectester.allocatekaresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateKaResponse.resp"]], "resp (pyecsca.sca.target.ectester.allocateresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateResponse.resp"]], "resp (pyecsca.sca.target.ectester.allocatesigresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateSigResponse.resp"]], "resp (pyecsca.sca.target.ectester.cleanupresponse attribute)": [[73, "pyecsca.sca.target.ectester.CleanupResponse.resp"]], "resp (pyecsca.sca.target.ectester.clearresponse attribute)": [[73, "pyecsca.sca.target.ectester.ClearResponse.resp"]], "resp (pyecsca.sca.target.ectester.ecdhresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDHResponse.resp"]], "resp (pyecsca.sca.target.ectester.ecdsaresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse.resp"]], "resp (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.resp"]], "resp (pyecsca.sca.target.ectester.generateresponse attribute)": [[73, "pyecsca.sca.target.ectester.GenerateResponse.resp"]], "resp (pyecsca.sca.target.ectester.runmoderesponse attribute)": [[73, "pyecsca.sca.target.ectester.RunModeResponse.resp"]], "resp (pyecsca.sca.target.ectester.setresponse attribute)": [[73, "pyecsca.sca.target.ectester.SetResponse.resp"]], "resp (pyecsca.sca.target.ectester.transformresponse attribute)": [[73, "pyecsca.sca.target.ectester.TransformResponse.resp"]], "run_mode() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.run_mode"]], "run_mode() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.run_mode"]], "run_mode() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.run_mode"]], "secp112r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp112r1"]], "secp128r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp128r1"]], "secp160r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp160r1"]], "secp192r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp192r1"]], "secp224r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp224r1"]], "secp256r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp256r1"]], "secp384r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp384r1"]], "secp521r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.secp521r1"]], "secret (pyecsca.sca.target.ectester.ecdhresponse property)": [[73, "pyecsca.sca.target.ectester.ECDHResponse.secret"]], "sect163r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.sect163r1"]], "sect233r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.sect233r1"]], "sect283r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.sect283r1"]], "sect409r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.sect409r1"]], "sect571r1 (pyecsca.sca.target.ectester.curveenum attribute)": [[73, "pyecsca.sca.target.ectester.CurveEnum.sect571r1"]], "select() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.select"]], "select() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select"]], "select() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select"]], "select_applet() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.select_applet"]], "select_applet() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.select_applet"]], "select_applet() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.select_applet"]], "send() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.send"]], "send() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.send"]], "send() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.send"]], "send_apdu() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.send_apdu"]], "send_apdu() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.send_apdu"]], "send_apdu() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.send_apdu"]], "set() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.set"]], "set() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.set"]], "set() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.set"]], "signature (pyecsca.sca.target.ectester.ecdsaresponse property)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse.signature"]], "success (pyecsca.sca.target.ectester.allocatekaresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateKaResponse.success"]], "success (pyecsca.sca.target.ectester.allocateresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateResponse.success"]], "success (pyecsca.sca.target.ectester.allocatesigresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateSigResponse.success"]], "success (pyecsca.sca.target.ectester.cleanupresponse attribute)": [[73, "pyecsca.sca.target.ectester.CleanupResponse.success"]], "success (pyecsca.sca.target.ectester.clearresponse attribute)": [[73, "pyecsca.sca.target.ectester.ClearResponse.success"]], "success (pyecsca.sca.target.ectester.ecdhresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDHResponse.success"]], "success (pyecsca.sca.target.ectester.ecdsaresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse.success"]], "success (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.success"]], "success (pyecsca.sca.target.ectester.generateresponse attribute)": [[73, "pyecsca.sca.target.ectester.GenerateResponse.success"]], "success (pyecsca.sca.target.ectester.runmoderesponse attribute)": [[73, "pyecsca.sca.target.ectester.RunModeResponse.success"]], "success (pyecsca.sca.target.ectester.setresponse attribute)": [[73, "pyecsca.sca.target.ectester.SetResponse.success"]], "success (pyecsca.sca.target.ectester.transformresponse attribute)": [[73, "pyecsca.sca.target.ectester.TransformResponse.success"]], "sws (pyecsca.sca.target.ectester.allocatekaresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateKaResponse.sws"]], "sws (pyecsca.sca.target.ectester.allocateresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateResponse.sws"]], "sws (pyecsca.sca.target.ectester.allocatesigresponse attribute)": [[73, "pyecsca.sca.target.ectester.AllocateSigResponse.sws"]], "sws (pyecsca.sca.target.ectester.cleanupresponse attribute)": [[73, "pyecsca.sca.target.ectester.CleanupResponse.sws"]], "sws (pyecsca.sca.target.ectester.clearresponse attribute)": [[73, "pyecsca.sca.target.ectester.ClearResponse.sws"]], "sws (pyecsca.sca.target.ectester.ecdhresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDHResponse.sws"]], "sws (pyecsca.sca.target.ectester.ecdsaresponse attribute)": [[73, "pyecsca.sca.target.ectester.ECDSAResponse.sws"]], "sws (pyecsca.sca.target.ectester.exportresponse attribute)": [[73, "pyecsca.sca.target.ectester.ExportResponse.sws"]], "sws (pyecsca.sca.target.ectester.generateresponse attribute)": [[73, "pyecsca.sca.target.ectester.GenerateResponse.sws"]], "sws (pyecsca.sca.target.ectester.runmoderesponse attribute)": [[73, "pyecsca.sca.target.ectester.RunModeResponse.sws"]], "sws (pyecsca.sca.target.ectester.setresponse attribute)": [[73, "pyecsca.sca.target.ectester.SetResponse.sws"]], "sws (pyecsca.sca.target.ectester.transformresponse attribute)": [[73, "pyecsca.sca.target.ectester.TransformResponse.sws"]], "to_bytes() (pyecsca.sca.target.ectester.appletbaseenum method)": [[73, "pyecsca.sca.target.ectester.AppletBaseEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.curveenum method)": [[73, "pyecsca.sca.target.ectester.CurveEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.exportenum method)": [[73, "pyecsca.sca.target.ectester.ExportEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.formatenum method)": [[73, "pyecsca.sca.target.ectester.FormatEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.instructionenum method)": [[73, "pyecsca.sca.target.ectester.InstructionEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.keyagreementenum method)": [[73, "pyecsca.sca.target.ectester.KeyAgreementEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.keybuildenum method)": [[73, "pyecsca.sca.target.ectester.KeyBuildEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.keyclassenum method)": [[73, "pyecsca.sca.target.ectester.KeyClassEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.keyenum method)": [[73, "pyecsca.sca.target.ectester.KeyEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.keypairenum method)": [[73, "pyecsca.sca.target.ectester.KeypairEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.parameterenum method)": [[73, "pyecsca.sca.target.ectester.ParameterEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.runmodeenum method)": [[73, "pyecsca.sca.target.ectester.RunModeEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.signatureenum method)": [[73, "pyecsca.sca.target.ectester.SignatureEnum.to_bytes"]], "to_bytes() (pyecsca.sca.target.ectester.transformationenum method)": [[73, "pyecsca.sca.target.ectester.TransformationEnum.to_bytes"]], "transform() (pyecsca.sca.target.ectester.ectestertarget method)": [[73, "pyecsca.sca.target.ectester.ECTesterTarget.transform"]], "transform() (pyecsca.sca.target.ectester.ectestertargetleia method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetLEIA.transform"]], "transform() (pyecsca.sca.target.ectester.ectestertargetpcsc method)": [[73, "pyecsca.sca.target.ectester.ECTesterTargetPCSC.transform"]], "with_traceback() (pyecsca.sca.target.ectester.chunkingexception method)": [[73, "pyecsca.sca.target.ectester.ChunkingException.with_traceback"]], "flashable (class in pyecsca.sca.target.flash)": [[74, "pyecsca.sca.target.flash.Flashable"]], "flash() (pyecsca.sca.target.flash.flashable method)": [[74, "pyecsca.sca.target.flash.Flashable.flash"]], "pyecsca.sca.target.flash": [[74, "module-pyecsca.sca.target.flash"]], "leakagetarget (class in pyecsca.sca.target.leakage)": [[75, "pyecsca.sca.target.leakage.LeakageTarget"]], "connect() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.connect"]], "coords (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.coords"]], "debug() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.debug"]], "disconnect() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.disconnect"]], "ecdh() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.ecdh"]], "ecdsa_sign() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.ecdsa_sign"]], "ecdsa_verify() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.ecdsa_verify"]], "generate() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.generate"]], "get_trace() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.get_trace"]], "leakage_model (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.leakage_model"]], "model (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.model"]], "mult (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.mult"]], "params (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.params"]], "privkey (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.privkey"]], "pubkey (pyecsca.sca.target.leakage.leakagetarget attribute)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.pubkey"]], "pyecsca.sca.target.leakage": [[75, "module-pyecsca.sca.target.leakage"]], "quit() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.quit"]], "scalar_mult() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.scalar_mult"]], "set_leakage_model() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.set_leakage_model"]], "set_params() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.set_params"]], "set_privkey() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.set_privkey"]], "set_pubkey() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.set_pubkey"]], "set_trigger() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.set_trigger"]], "simulate_ecdh_traces() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.simulate_ecdh_traces"]], "simulate_scalar_mult_traces() (pyecsca.sca.target.leakage.leakagetarget method)": [[75, "pyecsca.sca.target.leakage.LeakageTarget.simulate_scalar_mult_traces"]], "leiatarget (class in pyecsca.sca.target.leia)": [[76, "pyecsca.sca.target.leia.LEIATarget"]], "atr (pyecsca.sca.target.leia.leiatarget property)": [[76, "pyecsca.sca.target.leia.LEIATarget.atr"]], "card_present (pyecsca.sca.target.leia.leiatarget property)": [[76, "pyecsca.sca.target.leia.LEIATarget.card_present"]], "connect() (pyecsca.sca.target.leia.leiatarget method)": [[76, "pyecsca.sca.target.leia.LEIATarget.connect"]], "disconnect() (pyecsca.sca.target.leia.leiatarget method)": [[76, "pyecsca.sca.target.leia.LEIATarget.disconnect"]], "pyecsca.sca.target.leia": [[76, "module-pyecsca.sca.target.leia"]], "select() (pyecsca.sca.target.leia.leiatarget method)": [[76, "pyecsca.sca.target.leia.LEIATarget.select"]], "send_apdu() (pyecsca.sca.target.leia.leiatarget method)": [[76, "pyecsca.sca.target.leia.LEIATarget.send_apdu"]], "serialtarget (class in pyecsca.sca.target.serial)": [[77, "pyecsca.sca.target.serial.SerialTarget"]], "connect() (pyecsca.sca.target.serial.serialtarget method)": [[77, "pyecsca.sca.target.serial.SerialTarget.connect"]], "disconnect() (pyecsca.sca.target.serial.serialtarget method)": [[77, "pyecsca.sca.target.serial.SerialTarget.disconnect"]], "pyecsca.sca.target.serial": [[77, "module-pyecsca.sca.target.serial"]], "read() (pyecsca.sca.target.serial.serialtarget method)": [[77, "pyecsca.sca.target.serial.SerialTarget.read"]], "write() (pyecsca.sca.target.serial.serialtarget method)": [[77, "pyecsca.sca.target.serial.SerialTarget.write"]], "simpleserialmessage (class in pyecsca.sca.target.simpleserial)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialMessage"]], "simpleserialtarget (class in pyecsca.sca.target.simpleserial)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget"]], "char (pyecsca.sca.target.simpleserial.simpleserialmessage attribute)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialMessage.char"]], "connect() (pyecsca.sca.target.simpleserial.simpleserialtarget method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.connect"]], "data (pyecsca.sca.target.simpleserial.simpleserialmessage attribute)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialMessage.data"]], "disconnect() (pyecsca.sca.target.simpleserial.simpleserialtarget method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.disconnect"]], "from_raw() (pyecsca.sca.target.simpleserial.simpleserialmessage static method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialMessage.from_raw"]], "pyecsca.sca.target.simpleserial": [[78, "module-pyecsca.sca.target.simpleserial"]], "read() (pyecsca.sca.target.simpleserial.simpleserialtarget method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.read"]], "recv_msgs() (pyecsca.sca.target.simpleserial.simpleserialtarget method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.recv_msgs"]], "send_cmd() (pyecsca.sca.target.simpleserial.simpleserialtarget method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.send_cmd"]], "write() (pyecsca.sca.target.simpleserial.simpleserialtarget method)": [[78, "pyecsca.sca.target.simpleserial.SimpleSerialTarget.write"]], "pyecsca.sca.trace": [[79, "module-pyecsca.sca.trace"]], "align_correlation() (in module pyecsca.sca.trace.align)": [[80, "pyecsca.sca.trace.align.align_correlation"]], "align_dtw() (in module pyecsca.sca.trace.align)": [[80, "pyecsca.sca.trace.align.align_dtw"]], "align_dtw_scale() (in module pyecsca.sca.trace.align)": [[80, "pyecsca.sca.trace.align.align_dtw_scale"]], "align_offset() (in module pyecsca.sca.trace.align)": [[80, "pyecsca.sca.trace.align.align_offset"]], "align_peaks() (in module pyecsca.sca.trace.align)": [[80, "pyecsca.sca.trace.align.align_peaks"]], "align_sad() (in module pyecsca.sca.trace.align)": [[80, "pyecsca.sca.trace.align.align_sad"]], "pyecsca.sca.trace.align": [[80, "module-pyecsca.sca.trace.align"]], "add() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.add"]], "average() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.average"]], "average_and_variance() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.average_and_variance"]], "conditional_average() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.conditional_average"]], "pyecsca.sca.trace.combine": [[81, "module-pyecsca.sca.trace.combine"]], "standard_deviation() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.standard_deviation"]], "subtract() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.subtract"]], "variance() (in module pyecsca.sca.trace.combine)": [[81, "pyecsca.sca.trace.combine.variance"]], "pad() (in module pyecsca.sca.trace.edit)": [[82, "pyecsca.sca.trace.edit.pad"]], "pyecsca.sca.trace.edit": [[82, "module-pyecsca.sca.trace.edit"]], "reverse() (in module pyecsca.sca.trace.edit)": [[82, "pyecsca.sca.trace.edit.reverse"]], "stretch() (in module pyecsca.sca.trace.edit)": [[82, "pyecsca.sca.trace.edit.stretch"]], "trim() (in module pyecsca.sca.trace.edit)": [[82, "pyecsca.sca.trace.edit.trim"]], "filter_bandpass() (in module pyecsca.sca.trace.filter)": [[83, "pyecsca.sca.trace.filter.filter_bandpass"]], "filter_bandstop() (in module pyecsca.sca.trace.filter)": [[83, "pyecsca.sca.trace.filter.filter_bandstop"]], "filter_highpass() (in module pyecsca.sca.trace.filter)": [[83, "pyecsca.sca.trace.filter.filter_highpass"]], "filter_lowpass() (in module pyecsca.sca.trace.filter)": [[83, "pyecsca.sca.trace.filter.filter_lowpass"]], "pyecsca.sca.trace.filter": [[83, "module-pyecsca.sca.trace.filter"]], "match_part() (in module pyecsca.sca.trace.match)": [[84, "pyecsca.sca.trace.match.match_part"]], "match_pattern() (in module pyecsca.sca.trace.match)": [[84, "pyecsca.sca.trace.match.match_pattern"]], "pyecsca.sca.trace.match": [[84, "module-pyecsca.sca.trace.match"]], "plot_trace() (in module pyecsca.sca.trace.plot)": [[85, "pyecsca.sca.trace.plot.plot_trace"]], "plot_traces() (in module pyecsca.sca.trace.plot)": [[85, "pyecsca.sca.trace.plot.plot_traces"]], "pyecsca.sca.trace.plot": [[85, "module-pyecsca.sca.trace.plot"]], "save_figure() (in module pyecsca.sca.trace.plot)": [[85, "pyecsca.sca.trace.plot.save_figure"]], "save_figure_png() (in module pyecsca.sca.trace.plot)": [[85, "pyecsca.sca.trace.plot.save_figure_png"]], "save_figure_svg() (in module pyecsca.sca.trace.plot)": [[85, "pyecsca.sca.trace.plot.save_figure_svg"]], "absolute() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.absolute"]], "invert() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.invert"]], "normalize() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.normalize"]], "normalize_wl() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.normalize_wl"]], "offset() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.offset"]], "pyecsca.sca.trace.process": [[86, "module-pyecsca.sca.trace.process"]], "recenter() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.recenter"]], "rolling_mean() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.rolling_mean"]], "threshold() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.threshold"]], "transform() (in module pyecsca.sca.trace.process)": [[86, "pyecsca.sca.trace.process.transform"]], "downsample_average() (in module pyecsca.sca.trace.sampling)": [[87, "pyecsca.sca.trace.sampling.downsample_average"]], "downsample_decimate() (in module pyecsca.sca.trace.sampling)": [[87, "pyecsca.sca.trace.sampling.downsample_decimate"]], "downsample_max() (in module pyecsca.sca.trace.sampling)": [[87, "pyecsca.sca.trace.sampling.downsample_max"]], "downsample_min() (in module pyecsca.sca.trace.sampling)": [[87, "pyecsca.sca.trace.sampling.downsample_min"]], "downsample_pick() (in module pyecsca.sca.trace.sampling)": [[87, "pyecsca.sca.trace.sampling.downsample_pick"]], "pyecsca.sca.trace.sampling": [[87, "module-pyecsca.sca.trace.sampling"]], "ks_test() (in module pyecsca.sca.trace.test)": [[88, "pyecsca.sca.trace.test.ks_test"]], "pyecsca.sca.trace.test": [[88, "module-pyecsca.sca.trace.test"]], "student_ttest() (in module pyecsca.sca.trace.test)": [[88, "pyecsca.sca.trace.test.student_ttest"]], "welch_ttest() (in module pyecsca.sca.trace.test)": [[88, "pyecsca.sca.trace.test.welch_ttest"]], "combinedtrace (class in pyecsca.sca.trace.trace)": [[89, "pyecsca.sca.trace.trace.CombinedTrace"]], "trace (class in pyecsca.sca.trace.trace)": [[89, "pyecsca.sca.trace.trace.Trace"]], "astype() (pyecsca.sca.trace.trace.combinedtrace method)": [[89, "pyecsca.sca.trace.trace.CombinedTrace.astype"]], "astype() (pyecsca.sca.trace.trace.trace method)": [[89, "pyecsca.sca.trace.trace.Trace.astype"]], "meta (pyecsca.sca.trace.trace.combinedtrace attribute)": [[89, "pyecsca.sca.trace.trace.CombinedTrace.meta"]], "meta (pyecsca.sca.trace.trace.trace attribute)": [[89, "pyecsca.sca.trace.trace.Trace.meta"]], "pyecsca.sca.trace.trace": [[89, "module-pyecsca.sca.trace.trace"]], "samples (pyecsca.sca.trace.trace.combinedtrace attribute)": [[89, "pyecsca.sca.trace.trace.CombinedTrace.samples"]], "samples (pyecsca.sca.trace.trace.trace attribute)": [[89, "pyecsca.sca.trace.trace.Trace.samples"]], "trace_set (pyecsca.sca.trace.trace.combinedtrace property)": [[89, "pyecsca.sca.trace.trace.CombinedTrace.trace_set"]], "trace_set (pyecsca.sca.trace.trace.trace property)": [[89, "pyecsca.sca.trace.trace.Trace.trace_set"]], "with_samples() (pyecsca.sca.trace.trace.combinedtrace method)": [[89, "pyecsca.sca.trace.trace.CombinedTrace.with_samples"]], "with_samples() (pyecsca.sca.trace.trace.trace method)": [[89, "pyecsca.sca.trace.trace.Trace.with_samples"]], "pyecsca.sca.trace_set": [[90, "module-pyecsca.sca.trace_set"]], "traceset (class in pyecsca.sca.trace_set.base)": [[91, "pyecsca.sca.trace_set.base.TraceSet"]], "inplace() (pyecsca.sca.trace_set.base.traceset class method)": [[91, "pyecsca.sca.trace_set.base.TraceSet.inplace"]], "pyecsca.sca.trace_set.base": [[91, "module-pyecsca.sca.trace_set.base"]], "read() (pyecsca.sca.trace_set.base.traceset class method)": [[91, "pyecsca.sca.trace_set.base.TraceSet.read"]], "write() (pyecsca.sca.trace_set.base.traceset method)": [[91, "pyecsca.sca.trace_set.base.TraceSet.write"]], "chipwhisperertraceset (class in pyecsca.sca.trace_set.chipwhisperer)": [[92, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet"]], "inplace() (pyecsca.sca.trace_set.chipwhisperer.chipwhisperertraceset class method)": [[92, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet.inplace"]], "pyecsca.sca.trace_set.chipwhisperer": [[92, "module-pyecsca.sca.trace_set.chipwhisperer"]], "read() (pyecsca.sca.trace_set.chipwhisperer.chipwhisperertraceset class method)": [[92, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet.read"]], "write() (pyecsca.sca.trace_set.chipwhisperer.chipwhisperertraceset method)": [[92, "pyecsca.sca.trace_set.chipwhisperer.ChipWhispererTraceSet.write"]], "hdf5meta (class in pyecsca.sca.trace_set.hdf5)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta"]], "hdf5traceset (class in pyecsca.sca.trace_set.hdf5)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet"]], "append() (pyecsca.sca.trace_set.hdf5.hdf5traceset method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.append"]], "clear() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.clear"]], "close() (pyecsca.sca.trace_set.hdf5.hdf5traceset method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.close"]], "get() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.get"]], "get() (pyecsca.sca.trace_set.hdf5.hdf5traceset method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.get"]], "inplace() (pyecsca.sca.trace_set.hdf5.hdf5traceset class method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.inplace"]], "items() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.items"]], "keys() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.keys"]], "pop() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.pop"]], "popitem() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.popitem"]], "pyecsca.sca.trace_set.hdf5": [[93, "module-pyecsca.sca.trace_set.hdf5"]], "read() (pyecsca.sca.trace_set.hdf5.hdf5traceset class method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.read"]], "remove() (pyecsca.sca.trace_set.hdf5.hdf5traceset method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.remove"]], "save() (pyecsca.sca.trace_set.hdf5.hdf5traceset method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.save"]], "setdefault() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.setdefault"]], "update() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.update"]], "values() (pyecsca.sca.trace_set.hdf5.hdf5meta method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5Meta.values"]], "write() (pyecsca.sca.trace_set.hdf5.hdf5traceset method)": [[93, "pyecsca.sca.trace_set.hdf5.HDF5TraceSet.write"]], "float16 (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.Float16"]], "float32 (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.Float32"]], "float8 (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.Float8"]], "inspectortraceset (class in pyecsca.sca.trace_set.inspector)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet"]], "int16 (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.Int16"]], "int32 (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.Int32"]], "int8 (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.Int8"]], "parsers (class in pyecsca.sca.trace_set.inspector)": [[94, "pyecsca.sca.trace_set.inspector.Parsers"]], "samplecoding (class in pyecsca.sca.trace_set.inspector)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding"]], "as_integer_ratio() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.as_integer_ratio"]], "bit_count() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.bit_count"]], "bit_length() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.bit_length"]], "conjugate() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.conjugate"]], "data_space (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.data_space"]], "denominator (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.denominator"]], "description (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.description"]], "dtype() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.dtype"]], "external_clock (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock"]], "external_clock_frequencty (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_frequencty"]], "external_clock_multiplier (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_multiplier"]], "external_clock_phase_shift (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_phase_shift"]], "external_clock_resampler_enabled (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_resampler_enabled"]], "external_clock_resampler_mask (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_resampler_mask"]], "external_clock_threshold (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_threshold"]], "external_clock_time_base (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.external_clock_time_base"]], "filter_frequency (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.filter_frequency"]], "filter_range (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.filter_range"]], "filter_type (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.filter_type"]], "from_bytes() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.from_bytes"]], "global_title (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.global_title"]], "imag (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.imag"]], "inplace() (pyecsca.sca.trace_set.inspector.inspectortraceset class method)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.inplace"]], "log_scale (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.log_scale"]], "num_samples (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.num_samples"]], "num_traces (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.num_traces"]], "numerator (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.numerator"]], "pyecsca.sca.trace_set.inspector": [[94, "module-pyecsca.sca.trace_set.inspector"]], "read() (pyecsca.sca.trace_set.inspector.inspectortraceset class method)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.read"]], "read_bool() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.read_bool"]], "read_float() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.read_float"]], "read_int() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.read_int"]], "read_str() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.read_str"]], "real (pyecsca.sca.trace_set.inspector.samplecoding attribute)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.real"]], "sample_coding (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.sample_coding"]], "sampling_frequency (pyecsca.sca.trace_set.inspector.inspectortraceset property)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.sampling_frequency"]], "scope_coupling (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_coupling"]], "scope_id (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_id"]], "scope_impedance (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_impedance"]], "scope_offset (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_offset"]], "scope_range (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.scope_range"]], "title_space (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.title_space"]], "to_bytes() (pyecsca.sca.trace_set.inspector.samplecoding method)": [[94, "pyecsca.sca.trace_set.inspector.SampleCoding.to_bytes"]], "trace_offset (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.trace_offset"]], "write() (pyecsca.sca.trace_set.inspector.inspectortraceset method)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.write"]], "write_bool() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.write_bool"]], "write_float() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.write_float"]], "write_int() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.write_int"]], "write_str() (pyecsca.sca.trace_set.inspector.parsers static method)": [[94, "pyecsca.sca.trace_set.inspector.Parsers.write_str"]], "x_label (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.x_label"]], "x_offset (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.x_offset"]], "x_scale (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.x_scale"]], "y_label (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.y_label"]], "y_scale (pyecsca.sca.trace_set.inspector.inspectortraceset attribute)": [[94, "pyecsca.sca.trace_set.inspector.InspectorTraceSet.y_scale"]], "pickletraceset (class in pyecsca.sca.trace_set.pickle)": [[95, "pyecsca.sca.trace_set.pickle.PickleTraceSet"]], "inplace() (pyecsca.sca.trace_set.pickle.pickletraceset class method)": [[95, "pyecsca.sca.trace_set.pickle.PickleTraceSet.inplace"]], "pyecsca.sca.trace_set.pickle": [[95, "module-pyecsca.sca.trace_set.pickle"]], "read() (pyecsca.sca.trace_set.pickle.pickletraceset class method)": [[95, "pyecsca.sca.trace_set.pickle.PickleTraceSet.read"]], "write() (pyecsca.sca.trace_set.pickle.pickletraceset method)": [[95, "pyecsca.sca.trace_set.pickle.PickleTraceSet.write"]]}})